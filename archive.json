{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-01-12T01:25:14.291229+00:00",
  "repo": "quicwg/ops-drafts",
  "labels": [
    {
      "name": "-manageability",
      "description": null,
      "color": "fbca04"
    },
    {
      "name": "-applicability",
      "description": null,
      "color": "fbca04"
    },
    {
      "name": "editorial",
      "description": null,
      "color": "0e8a16"
    },
    {
      "name": "editor-ready",
      "description": null,
      "color": "0e8a16"
    },
    {
      "name": "technical",
      "description": null,
      "color": "0052cc"
    },
    {
      "name": "scope-content",
      "description": null,
      "color": "b60205"
    },
    {
      "name": "needs-author",
      "description": "",
      "color": "c2e0c6"
    },
    {
      "name": "-interface?",
      "description": "",
      "color": "fef2c0"
    },
    {
      "name": "final check",
      "description": "",
      "color": "6977f4"
    },
    {
      "name": "has PR",
      "description": "",
      "color": "52dbdd"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "MDU6SXNzdWUyMzY4MDQ1ODI=",
      "title": "Setup CI",
      "url": "https://github.com/quicwg/ops-drafts/issues/3",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Someone with ownership rights needs to hit the button on [circle](https://circleci.com/dashboard) (not travis).",
      "createdAt": "2017-06-19T07:40:56Z",
      "updatedAt": "2017-10-20T15:15:05Z",
      "closedAt": "2017-10-20T15:15:05Z",
      "comments": [
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "I think I pressed the right button...",
          "createdAt": "2017-06-19T07:43:11Z",
          "updatedAt": "2017-06-19T07:43:11Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "The first build was clean.  To get the editors' drafts, we need someone to put a token in an environment variable called GH_TOKEN.",
          "createdAt": "2017-06-19T07:47:41Z",
          "updatedAt": "2017-06-19T07:47:41Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Not seeing anything running for my latest PR.  That's probably a misconfiguration.  Is Circle configured to build pull requests?  It should be.",
          "createdAt": "2017-06-21T03:31:54Z",
          "updatedAt": "2017-06-21T03:31:54Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "\"Build forked pull requests\", right?\r\n\r\n![screen shot 2017-06-21 at 1 34 44 pm](https://user-images.githubusercontent.com/74384/27365950-6e69f1e8-5686-11e7-976c-f4d51e98f170.png)\r\n",
          "createdAt": "2017-06-21T03:35:27Z",
          "updatedAt": "2017-06-21T03:35:27Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yep.",
          "createdAt": "2017-06-21T03:50:10Z",
          "updatedAt": "2017-06-21T03:50:10Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "MEMBER",
          "body": "Done.",
          "createdAt": "2017-06-21T03:59:23Z",
          "updatedAt": "2017-06-21T03:59:23Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this seems to work now; closable?",
          "createdAt": "2017-06-30T14:52:12Z",
          "updatedAt": "2017-06-30T14:52:12Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "It doesn't look like gh-pages is being updated automatically, which means that the issues aren't being saved either.\r\n\r\n@britram, are you manually updating gh-pages?  Are you happy continuing to do that?  If so, I will close this.",
          "createdAt": "2017-06-30T17:41:03Z",
          "updatedAt": "2017-06-30T17:41:03Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think I found the issue here; needed to make setup-ghissues...\r\n",
          "createdAt": "2017-07-03T08:02:08Z",
          "updatedAt": "2017-07-03T08:02:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CI seems to work for PRs now, at least.",
          "createdAt": "2017-07-03T08:18:41Z",
          "updatedAt": "2017-07-03T08:18:41Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "MDU6SXNzdWUyMzg4NjQxNjQ=",
      "title": "Write subsection \"Thinking in zero RTT\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/5",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "Jana noted at the interim in Paris that we should point out\r\nthat applications need to be re-thought slightly to get the benefits of zero\r\nRTT. Add a little text to discuss this and why it's worth the effort,\r\nbefore we go straight into the dragons.",
      "createdAt": "2017-06-27T14:09:18Z",
      "updatedAt": "2017-07-03T08:17:36Z",
      "closedAt": "2017-07-03T08:17:36Z",
      "comments": []
    },
    {
      "number": 6,
      "id": "MDU6SXNzdWUyMzg4NjU2OTc=",
      "title": "Write subsection \"Session resumption versus keep-alive\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/6",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "scope-content"
      ],
      "body": "Add text to section on tradeoffs for using 0-RTT session resumption rather then sending keep-alives. This was discussed at the interim in Paris, and it turns out that this might not be a great idea; tracking the open editor's note in the doc.",
      "createdAt": "2017-06-27T14:13:54Z",
      "updatedAt": "2018-10-17T15:24:18Z",
      "closedAt": "2018-10-17T15:24:18Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "let's defer this to -01.",
          "createdAt": "2017-06-30T14:51:44Z",
          "updatedAt": "2017-06-30T14:51:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see also PR #744 for base-drafts",
          "createdAt": "2017-08-22T16:15:21Z",
          "updatedAt": "2017-08-22T16:15:21Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed by PR #41 ",
          "createdAt": "2018-10-17T15:24:18Z",
          "updatedAt": "2018-10-17T15:24:18Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWUyNDAxMTIwNTQ=",
      "title": "Write subsection \"Initial Handshake and PMTUD\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/8",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "scope-content"
      ],
      "body": "Section 2.5 needs content.",
      "createdAt": "2017-07-03T09:14:01Z",
      "updatedAt": "2018-07-02T10:40:31Z",
      "closedAt": "2018-07-02T10:40:31Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This actually seems to be superceded by \u00a78.4 in transport-13",
          "createdAt": "2018-07-02T10:39:40Z",
          "updatedAt": "2018-07-02T10:39:40Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWUyNDAxMTg5NDE=",
      "title": "Track changes in server stateless reject",
      "url": "https://github.com/quicwg/ops-drafts/issues/9",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "technical"
      ],
      "body": "Ensure that the description of redirection via server stateless reject accurately reflects the present state of the transport draft.",
      "createdAt": "2017-07-03T09:40:12Z",
      "updatedAt": "2018-07-02T10:21:36Z",
      "closedAt": "2018-07-02T10:21:36Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This seems to have been OBE.",
          "createdAt": "2018-07-02T10:21:36Z",
          "updatedAt": "2018-07-02T10:21:36Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWUyNDAxMTkzNDQ=",
      "title": "Server port number selection",
      "url": "https://github.com/quicwg/ops-drafts/issues/10",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "scope-content"
      ],
      "body": "The applicability statement should provide / point to guidelines for application protocol port selection for QUIC. See the [related issue](https://github.com/quicwg/base-drafts/issues/495) on the base drafts.",
      "createdAt": "2017-07-03T09:41:53Z",
      "updatedAt": "2018-02-06T21:41:40Z",
      "closedAt": "2018-02-06T21:41:40Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see #26 ",
          "createdAt": "2018-02-06T21:41:40Z",
          "updatedAt": "2018-02-06T21:41:40Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWUyNDAxMzc5NTM=",
      "title": "Server-Generated Connection ID should include a cryptographic MAC",
      "url": "https://github.com/quicwg/ops-drafts/issues/11",
      "state": "CLOSED",
      "author": "ThomasSwindells",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The guidance recommend that server generated connection IDs should include a crytographic MAC when being used for load balancing. This sounds like a good suggestion in principal, but the Connection ID is 64bits in size, I'm not a cryptographer but I don't see how this is possible - if it is possible then it perhaps would be good to include guidance within the documents?\r\n\r\nMy logic is as follows (hopefully I've made a mistake/misunderstood the concept somewhere)\r\n\r\nAs a CDN operator I'd probably want to segment the connection ID into 4 spaces:\r\nPOP id|machine id|unique connection|MAC\r\n\r\nYou could combine your POP id and machine ID into a single space but it is likely to be beneficial to have two tiers, the POP routes the request to the right general location and the machine id then identifies a machine within that space. Other ways to split this are also possible.\r\n\r\nIf 12 bits are used for POP id that would give 4096 distinct locations. Trends to deploy deeper into networks (particularly within mobile/cell base stations) doesn't make this number totally infeasible .\r\nIf 8 bits are then used for a machine id within a POP that gives 256 possible machines. \r\n\r\nThis means 20 bits might be used for load balancing purposes. This gives a bit (lot?) of room for flexibility and it is unlikely all million combinations are used but it is probably the right order of magnitude for a large widely distributed CDN (even if we drop down to 16 bits it doesn't significantly impact the analysis below).\r\n\r\nThe actual unique connection pool needs to be large enough to avoid repeating too quickly - even if you have a lot of clients taking advantage of 0RTT to aggressively close/re-open connections. There also presumably needs to be some randomization of the ids so that they aren't created sequentially. I've assumed 24 bits (which is only 16 million unique ids per server).\r\n\r\nThis only leaves 20 bits left for the MAC, that is about 1 million possible values. As I've said I'm not a cryptographer but to me this looks small enough that a brute force attack guided by some valid inputs might be feasible even on relatively low power machines? \r\n\r\nFor that matter isn't a simple replay attack feasible? The MAC can't be based upon the full 5-tuple as we need to support connection mobility. You could embed a timestamp into the id somewhere to protect against this but that would use up even more bits, otherwise you could slowly gather up valid (but presumably closed) connection ids and then aggressively replay them all in a short time period.",
      "createdAt": "2017-07-03T10:56:37Z",
      "updatedAt": "2019-07-04T14:53:54Z",
      "closedAt": "2019-07-04T14:53:53Z",
      "comments": [
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> This only leaves 20 bits left for the MAC, that is about 1 million possible values. As I've said I'm not a cryptographer but to me this looks small enough that a brute force attack guided by some valid inputs might be feasible even on relatively low power machines?\r\n\r\nThe goal of the MAC is not make a brute force attacker unable to generate a \"valid\" Connection ID but to make it a relatively low-probability event.  The only reason I see to have a MAC at all is to make it harder for an attacker to mount an effective attack on a single backend using your routing infrastructure for steering.  QUIC as a protocol is resilient to man-on-a-side attack vector (except during handshake), so attackers guessing valid connection IDs is not a big deal.\r\n\r\nThe key is to have enough entropy (\"unique connection\" size) so you do not accidentally create duplicate connection IDs.\r\n\r\nYou may also want to include at least a bit that identifies the key used (since you'll want to do key rotation).",
          "createdAt": "2018-10-17T19:43:36Z",
          "updatedAt": "2018-10-17T19:44:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed now. Please send PR if you think more text is needed.",
          "createdAt": "2019-07-04T14:53:53Z",
          "updatedAt": "2019-07-04T14:53:53Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWUyNDkyNzUxODA=",
      "title": "Use of multiple quic connection on the same port/5-tuple",
      "url": "https://github.com/quicwg/ops-drafts/issues/12",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Write section to provide guidance; maybe in the same section than guidance in port selection in general",
      "createdAt": "2017-08-10T08:47:52Z",
      "updatedAt": "2018-10-22T13:54:18Z",
      "closedAt": "2018-10-22T13:54:18Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWUyNTczNTAxOTI=",
      "title": "How to handle rejected 0-RTT data",
      "url": "https://github.com/quicwg/ops-drafts/issues/13",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Probably needs some API for the app to indicate if 0-RTT should be retransmitted or withdrawn after a rejection.",
      "createdAt": "2017-09-13T11:42:15Z",
      "updatedAt": "2019-07-04T14:53:12Z",
      "closedAt": "2019-07-04T14:53:12Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fixed by #77 ",
          "createdAt": "2019-07-04T14:53:12Z",
          "updatedAt": "2019-07-04T14:53:12Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWUyNjM4MzQxMDY=",
      "title": "Add text on error handling for application-visible errors",
      "url": "https://github.com/quicwg/ops-drafts/issues/14",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "",
      "createdAt": "2017-10-09T09:35:45Z",
      "updatedAt": "2019-07-04T14:17:19Z",
      "closedAt": "2019-07-04T14:17:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See also PR #78 ",
          "createdAt": "2019-07-04T13:23:23Z",
          "updatedAt": "2019-07-04T13:23:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merged",
          "createdAt": "2019-07-04T14:17:18Z",
          "updatedAt": "2019-07-04T14:17:18Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWUyNjM4NDUzNjI=",
      "title": "Explain emulation of partial reliability with one message per stream?",
      "url": "https://github.com/quicwg/ops-drafts/issues/15",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "",
      "createdAt": "2017-10-09T10:17:26Z",
      "updatedAt": "2019-07-02T14:49:30Z",
      "closedAt": "2019-07-02T14:49:30Z",
      "comments": [
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think explaining how reset can create partial reliability would be useful.  I think that's orthogonal to whether it's a bidirectional stream model or a message model, though.  One could use partial reliability in both cases.",
          "createdAt": "2017-10-09T14:04:45Z",
          "updatedAt": "2017-10-09T14:04:45Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Phrased as guidance on the use of resetting streams, this is useful. I don't think we're blocking on this, though, and in any case I wouldn't want whatever advice we give here to conflict with whatever partial reliability approach ends up in V2.",
          "createdAt": "2018-10-31T09:46:14Z",
          "updatedAt": "2018-10-31T09:46:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Discussion in BKK seems to have converged on \"don't do this for v1 applicability statement; applicability of PR and different PR strategies belongs in a document discussing PR as an extension\". closing for now.",
          "createdAt": "2018-11-06T07:50:20Z",
          "updatedAt": "2018-11-06T07:50:20Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "oops, going to leave this open to track discussion. note that #54 covers an alternate view of this.",
          "createdAt": "2018-11-06T08:10:15Z",
          "updatedAt": "2018-11-06T08:10:15Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "there's a line of text in the working copy on this now: \"If one message is\r\nmapped on a single stream, resetting the stream if the message is not needed\r\nanymore can be used to emulate partial reliability on a message basis.\" This is probably sufficient.",
          "createdAt": "2019-07-02T14:49:30Z",
          "updatedAt": "2019-07-02T14:49:30Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWUyNzYyNDQzNzU=",
      "title": "Connection IDs and ICMP Error messages (for PMTU discovery)",
      "url": "https://github.com/quicwg/ops-drafts/issues/23",
      "state": "CLOSED",
      "author": "igorlord",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Any endpoint that identifies connections using a Connection ID requires that Connection ID in packets, including ICMP Error packets. Hence, that endpoint will not only request the peer to send Connection IDs but will also include Connection IDs on outgoing packets (in case they result in an ICMP Error packet). Such ICMP Error packets are required for PMTU discovery, among other things.\r\n\r\nSuch Connection IDs will be sent even if the peer gave its permission to omit Connection IDs using Transport Parameter omit_connection_id.   See https://github.com/quicwg/base-drafts/issues/953 for more.",
      "createdAt": "2017-11-23T01:12:15Z",
      "updatedAt": "2019-07-04T14:35:26Z",
      "closedAt": "2019-07-04T14:35:26Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWUyOTAyNDU5NzM=",
      "title": "GQUIC -> QUIC migration",
      "url": "https://github.com/quicwg/ops-drafts/issues/25",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "ianswett"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "From @martinduke in quicwg/base-drafts#1006:\r\n\r\n> We're pretty close to settling on a wire image, I think. It would be useful for the transport draft (and eventually the RFC) to have an appendix covering issues with simultaneous support of GQUIC versions and QUIC v1.\r\n>\r\n> I believe all the entities actually trying to support GQUIC are heavily involved in the working group. However, I imagine there are quite a lot of middleboxes out there doing some basic ID/classification (if not more) on GQUIC today, and will need some guide on how to simultaneously handle two packet header formats, etc.\r\n>\r\n> If people are opposed to an appendix, I suppose a short-lived internet draft would also get the job done. In any case, I'd like to see a placeholder sooner rather than later.",
      "createdAt": "2018-01-21T04:23:51Z",
      "updatedAt": "2019-07-04T13:57:16Z",
      "closedAt": "2019-07-04T13:57:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is this related to issue #25 or can both things be addressed in the same section?",
          "createdAt": "2018-10-17T16:38:04Z",
          "updatedAt": "2018-10-17T16:38:04Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not clear what the goal here is.  A this point, gQUIC is on the verge of being deprecated.  I would not want to encourage anyone who doesn't already support both IETF QUIC and gQUIC to add support for gQUIC.  Adding text about this might make people think this is desirable, which it definitely is not.",
          "createdAt": "2018-11-03T02:36:30Z",
          "updatedAt": "2018-11-03T02:36:30Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Rereading @martinduke original comment, I guess this was more about handling of different versions in the network and therefore should go into the manageability draft, if at all. Would it make sense to say something more general about handling of different versions (and just take gQUIC as the deployed example)...? Not sure what though...",
          "createdAt": "2018-11-03T10:11:32Z",
          "updatedAt": "2018-11-03T10:11:32Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, if things like the spin bit are adopted, then a future version could drop support for it?  I'm not sure what else is worth saying?",
          "createdAt": "2018-11-03T11:40:20Z",
          "updatedAt": "2018-11-03T11:40:20Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Do we already have this in the new version upgrade text?",
          "createdAt": "2018-11-04T02:01:02Z",
          "updatedAt": "2018-11-04T02:01:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I guess we don't have anything in the manageability draft though...",
          "createdAt": "2018-11-04T03:27:08Z",
          "updatedAt": "2018-11-04T03:27:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett Given the current state of GQUIC/QUIC deployment and transition, is this still relevant or OBE for -manageability?",
          "createdAt": "2019-07-02T14:22:01Z",
          "updatedAt": "2019-07-02T14:22:01Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "By the time the RFC is shipped, it's almost certain any text about this will be obsolete.\r\n\r\nMost GQUIC traffic is already using the invariant header and draft 20 long packet types, so it should already look very similar to IETF QUIC from a middlebox perspective.",
          "createdAt": "2019-07-02T14:49:39Z",
          "updatedAt": "2019-07-02T14:49:39Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "> Most GQUIC traffic is already using the invariant header and draft 20 long packet types\r\n\r\nIs that so?  Chrome Stable (as of 75.0.3770.100) uses Q043, which has the \"classic\" GQUIC headers.",
          "createdAt": "2019-07-02T15:04:50Z",
          "updatedAt": "2019-07-02T15:04:50Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A small fraction of users in Chrome are still on v43(or even TCP) as a holdback, but the majority of users should be on v46, and v46 is default enabled in the code itself, but probably not until m76.",
          "createdAt": "2019-07-02T22:15:58Z",
          "updatedAt": "2019-07-02T22:15:58Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "I see what happened: my \"enable QUIC\" flag was \"Yes.\"  Switching it to \"Default\" made Chrome use Q046.  I stand corrected.",
          "createdAt": "2019-07-03T00:06:30Z",
          "updatedAt": "2019-07-03T00:06:30Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, that's an unfortunate consequence of forcing it on at the moment.\nThere may be a way to ensure that flag does what you'd expect(ie: enable\nv46).\n\nOn Tue, Jul 2, 2019 at 8:06 PM Dmitri Tikhonov <notifications@github.com>\nwrote:\n\n> I see what happened: my \"enable QUIC\" flag was \"Yes.\" Switching it to\n> \"Default\" made Chrome use Q046. I stand corrected.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/issues/25?email_source=notifications&email_token=AEZES4K3JZH3JTWMVJW7TMLP5PUQPA5CNFSM4EMWYS42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZC4EBQ#issuecomment-507888134>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AEZES4LBXSAIAIBQMVLFWN3P5PUQPANCNFSM4EMWYS4Q>\n> .\n>\n",
          "createdAt": "2019-07-03T00:08:04Z",
          "updatedAt": "2019-07-03T00:08:04Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we can close this specific issue. However, is there any general guidance that could/should be given when supporting multiple versions/transitioning to a new version?",
          "createdAt": "2019-07-04T12:08:29Z",
          "updatedAt": "2019-07-04T12:08:29Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Actually we already have a section on \"Enabling New Versions\". If you think anything is still missing there please provide an PR. Other than that I will close the issue now.",
          "createdAt": "2019-07-04T13:57:16Z",
          "updatedAt": "2019-07-04T13:57:16Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWUyOTQ4ODI4ODg=",
      "title": "Guidance for port number use",
      "url": "https://github.com/quicwg/ops-drafts/issues/26",
      "state": "CLOSED",
      "author": "MikeBishop",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "Copying from https://github.com/quicwg/base-drafts/issues/495\r\n\r\nThere's no requirement that servers use a particular UDP port for HTTP/QUIC or any other QUIC traffic. Using Alt-Svc, the server is able to pick and advertise any port number and a compliant client will handle it just fine. That's already the case, and isn't part of this issue. #424 updates the HTTP draft to highlight this, increasing the odds that implementations will test and support that case.\r\n\r\nThis issue is to track that it might actually be desirable from a privacy standpoint for servers to pick arbitrary port numbers and perhaps even rotate them periodically (though that requires coordination with their Alt-Svc advertisements and lifetimes, which could be challenging) in order to make it more difficult for a network observer to classify traffic (and therefore more difficult to ossify).\r\n\r\nOn the other hand, as we're wrestling with in each of these privacy/manageability debates, removing easy network visibility into the likely protocol by using arbitrary port numbers means that middleboxes will probably resort to other means of attempting to identify protocols and potentially doing it badly, which could result in even worse ossification. (E.g. indexing into the TLS ClientHello to find the ALPN list, then panicking on a different handshake protocol.)\r\n\r\nThere's further discussion on the original issue, but this belongs in the ops drafts, not the protocol drafts.",
      "createdAt": "2018-02-06T19:24:50Z",
      "updatedAt": "2019-07-04T13:27:07Z",
      "closedAt": "2019-07-04T13:27:07Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this kind-of-but-not-really-duplicates #10, which I'll go ahead and close.",
          "createdAt": "2018-02-06T21:41:29Z",
          "updatedAt": "2018-02-06T21:41:29Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "Actually, it's an exact duplicate, given that it points to the same issue.  ;-)  My bad.",
          "createdAt": "2018-02-06T22:18:14Z",
          "updatedAt": "2018-02-06T22:18:14Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@MikeBishop can you check if PR #43 addresses this issue sufficiently? At least for the applicability doc...",
          "createdAt": "2018-10-17T16:23:15Z",
          "updatedAt": "2018-10-17T16:23:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Now also PR #44 for the manageability statement.",
          "createdAt": "2018-10-17T16:34:11Z",
          "updatedAt": "2018-10-17T16:34:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#43 and #44 are a (ready for -03) treatment of this; however, we should consider if we want to say more, e.g. such as general guidance / recommendations for using ALPN in QUIC mappings, for instance? Keeping this open to track.",
          "createdAt": "2018-10-22T14:41:01Z",
          "updatedAt": "2018-10-22T14:41:01Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "created new issue #79 for ALPN",
          "createdAt": "2019-07-04T13:27:07Z",
          "updatedAt": "2019-07-04T13:27:07Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "MDU6SXNzdWUzMDM3Nzk4NjQ=",
      "title": "Provide further text on how to construct a connection ID in manageability statement",
      "url": "https://github.com/quicwg/ops-drafts/issues/27",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Of course update text on connection ID first when PR on symmetric IDs is landed.",
      "createdAt": "2018-03-09T09:41:11Z",
      "updatedAt": "2018-07-02T10:30:57Z",
      "closedAt": "2018-07-02T10:30:57Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that this is a generalization of #11",
          "createdAt": "2018-07-02T10:29:40Z",
          "updatedAt": "2018-07-02T10:29:40Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "and a duplicate of #29",
          "createdAt": "2018-07-02T10:30:57Z",
          "updatedAt": "2018-07-02T10:30:57Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "MDU6SXNzdWUzMDQ4MzE3MDI=",
      "title": "Document how a server cluster might be upgraded and rolled back",
      "url": "https://github.com/quicwg/ops-drafts/issues/28",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Moving this from quicwg/base-drafts#504 to here.",
      "createdAt": "2018-03-13T16:10:04Z",
      "updatedAt": "2018-10-31T09:36:06Z",
      "closedAt": "2018-10-31T09:36:06Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@janaiyengar @ianswett can one of you maybe provide some text?",
          "createdAt": "2018-10-17T16:37:03Z",
          "updatedAt": "2018-10-17T16:37:03Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "[This](https://github.com/quicwg/base-drafts/pull/1901#discussion_r228354726) is probably exactly what needs to be said for this issue.",
          "createdAt": "2018-10-25T23:35:01Z",
          "updatedAt": "2018-10-25T23:35:01Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "MDU6SXNzdWUzMDQ4MzM5NjU=",
      "title": "Describe how and why a server might choose connection IDs",
      "url": "https://github.com/quicwg/ops-drafts/issues/29",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "janaiyengar",
        "martinduke"
      ],
      "labels": [
        "-applicability",
        "needs-author"
      ],
      "body": "Moving https://github.com/quicwg/base-drafts/issues/514 to the ops repo.",
      "createdAt": "2018-03-13T16:15:29Z",
      "updatedAt": "2019-07-02T14:17:58Z",
      "closedAt": "2019-07-02T14:17:58Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see also #11 -- in any case the text that is there now is not great.",
          "createdAt": "2018-07-02T10:31:19Z",
          "updatedAt": "2018-07-02T10:31:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@janaiyengar can you please review the existing text (orginially provided by @igorlord) and state what else is needed? Please have also a look at issue #11 ",
          "createdAt": "2018-10-17T16:36:26Z",
          "updatedAt": "2018-10-17T16:41:33Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a bit OBE, but I think there might still be value in discussing how a server implementer should think about connection IDs. Fortunately, @martinduke has been doing a bunch of work on this in his load balancer draft. I would suggest that we leave this issue open, and either point to the LB draft or use text from it.",
          "createdAt": "2018-11-03T06:19:04Z",
          "updatedAt": "2018-11-03T06:19:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "#51 fixed this",
          "createdAt": "2019-07-02T14:17:58Z",
          "updatedAt": "2019-07-02T14:17:58Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWUzMDk3MTQ3NjI=",
      "title": "Provide interface for fixed-size packets for analysis resistance?",
      "url": "https://github.com/quicwg/ops-drafts/issues/30",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "quic could offer an appliaction interface to specify the use of fixed length packets as input for an algorithm that handles padding to enable concealment of application characteristics based on packet length",
      "createdAt": "2018-03-29T11:14:32Z",
      "updatedAt": "2019-07-04T14:25:03Z",
      "closedAt": "2019-07-04T14:25:03Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see PR #80 ",
          "createdAt": "2019-07-04T13:45:32Z",
          "updatedAt": "2019-07-04T13:45:32Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merged",
          "createdAt": "2019-07-04T14:25:03Z",
          "updatedAt": "2019-07-04T14:25:03Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWUzMjA2OTA3NDc=",
      "title": "Operational guidelines for reducing timing-linkability across CID migration",
      "url": "https://github.com/quicwg/ops-drafts/issues/31",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram",
        "chris-wood"
      ],
      "labels": [],
      "body": "Linkability across CID changes is in the common case so trivial that protocol features to defeat linkability through other means risk being useless.\r\n\r\n\"Find CID _y_ where delay < _d_ between last packet for CID _x_ and first packet for CID _y_ on 2-tuple _{a,p}_, given _{x,a,p}_\" is an operation which requires zero additional state and a simple O(kn log n) search for any large on-path (passive surveillance) device that's halfway smart about keeping per-flow state -- i.e., it's basically a free operation, and its utility is baked into the physics of CIDs -- after all, this is what CIDs are **for**.  \r\n\r\nThe ease of this analysis can only be mitigated by increasing the size of the anonymity set: ensuring that for any given delay window _d_, a minimum number of CIDs _x_ transition on any given {a,p}. This seems like good operational advice for servers with enough traffic to build such anonymity sets (should they have interest in preventing client linkability, of course) -- small servers are probably out of luck though.\r\n\r\nApplicability should call this out as a problem, manageability should suggest a solution space.",
      "createdAt": "2018-05-07T06:41:38Z",
      "updatedAt": "2018-10-19T10:14:05Z",
      "closedAt": "2018-10-19T10:14:05Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "-quic-transport section 6.11.5. begins to address this now, but aside from the following...\r\n\r\n> ...[t]his eliminates the use of the connection ID for linking activity from the same connection on different networks. Protection of packet numbers ensures that packet numbers cannot be used to correlate activity. This does not prevent other properties of packets, such as timing and size, from being used to correlate activity...\r\n\r\n...it still seems to pretend that coordinated CID migration is sufficient to fix linkability. So I still think we need something in -applicability. Will throw together a PR today.",
          "createdAt": "2018-10-18T07:44:04Z",
          "updatedAt": "2018-10-18T07:44:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed in #45 ",
          "createdAt": "2018-10-19T10:14:05Z",
          "updatedAt": "2018-10-19T10:14:05Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWUzMzc0Nzg5NDQ=",
      "title": "unbreak circleci",
      "url": "https://github.com/quicwg/ops-drafts/issues/34",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T11:25:58Z",
      "updatedAt": "2018-10-18T08:38:37Z",
      "closedAt": "2018-10-18T08:38:37Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "...either i did this or it did itself? still need to move to circleci 2.0, but I think this is an upstream question for the i-d-template...",
          "createdAt": "2018-10-18T08:38:37Z",
          "updatedAt": "2018-10-18T08:38:37Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "MDU6SXNzdWUzNDIzNzUwNjA=",
      "title": "Handshake Illustration",
      "url": "https://github.com/quicwg/ops-drafts/issues/35",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "The manageability document should illustrate all the various packet sequences in a handshake, preferably with pretty pictures.",
      "createdAt": "2018-07-18T15:18:15Z",
      "updatedAt": "2018-10-19T13:07:31Z",
      "closedAt": "2018-10-19T13:07:31Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Now the transport draft has these illustrations as well. However, I think we should still at them in manageability as well. Actually I would like to try the SVG format here. Anybody in for that?",
          "createdAt": "2018-10-17T15:33:54Z",
          "updatedAt": "2018-10-17T15:33:54Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The handshake illustrations here should only concern themselves with the wire image, unlike those in the transport draft, but yes we should derive them from the transport draft. Happy to do these in ASCII as well as SVG.",
          "createdAt": "2018-10-18T10:41:18Z",
          "updatedAt": "2018-10-18T10:41:18Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWUzNTA0NDE2NjA=",
      "title": "Provide guidance on use of PING",
      "url": "https://github.com/quicwg/ops-drafts/issues/37",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "The transport draft says:\r\n\r\n\"The PING frame can be used to keep a connection alive when an application or application protocol wishes to prevent the connection from timing out. An application protocol SHOULD provide guidance about the conditions under which generating a PING is recommended. This guidance SHOULD indicate whether it is the client or the server that is expected to send the PING. Having both endpoints send PING frames without coordination can produce an excessive number of packets and poor performance.\"\r\n\r\nProbably we should state this in the applicability statement as well...",
      "createdAt": "2018-08-14T14:00:33Z",
      "updatedAt": "2018-10-30T12:04:44Z",
      "closedAt": "2018-10-30T12:04:44Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The transport draft also provides guidance on on the ping interval: \r\n\r\n\"A connection will time out if no packets are sent or received for a period longer than the time specified in the idle_timeout transport parameter (see {{termination}}). However, state in middleboxes might time out earlier than that. Though REQ-5 in {{?RFC4787}} recommends a 2 minute timeout interval, experience shows that sending packets every 15 to 30 seconds is necessary to prevent the majority of middleboxes from losing state for UDP flows.\"",
          "createdAt": "2018-08-14T14:01:56Z",
          "updatedAt": "2018-08-14T14:01:56Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "That is not intended as guidance, but a caution.  This is something that firmly fits in the application space.  For instance, in HTTP, sending PING frames to keep the connection alive might be appropriate when a request is outstanding, but it shouldn't be used otherwise.",
          "createdAt": "2018-08-14T23:00:02Z",
          "updatedAt": "2018-08-14T23:00:02Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinthomson I added a bit of text in PR #41. Can you have a look at it?",
          "createdAt": "2018-10-17T15:32:19Z",
          "updatedAt": "2018-10-17T15:32:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Resolved by PR #50 ",
          "createdAt": "2018-10-30T12:04:44Z",
          "updatedAt": "2018-10-30T12:04:44Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "MDU6SXNzdWUzNTA0NjY0MDE=",
      "title": "Provide reference to respective section in transport draft on \"Packetization and latency\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/38",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-08-14T14:57:10Z",
      "updatedAt": "2018-10-17T15:30:42Z",
      "closedAt": "2018-10-17T15:30:42Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by PR #42 ",
          "createdAt": "2018-10-17T15:30:42Z",
          "updatedAt": "2018-10-17T15:30:42Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWUzNTA0OTI2Njc=",
      "title": "Maybe say something about in-order delivery (in streams)",
      "url": "https://github.com/quicwg/ops-drafts/issues/39",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "See also section on Streams in transport draft:\r\n\"Stream offsets allow for the octets on a stream to be placed in order. An endpoint MUST be capable of delivering data received on a stream in order. Implementations MAY choose to offer the ability to deliver data out of order. There is no means of ensuring ordering between octets on different streams.\"",
      "createdAt": "2018-08-14T15:58:41Z",
      "updatedAt": "2019-07-23T15:54:50Z",
      "closedAt": "2019-07-23T15:54:50Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See PR #84 ",
          "createdAt": "2019-07-04T15:14:39Z",
          "updatedAt": "2019-07-04T15:14:39Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWUzNTEyODM3MTI=",
      "title": "Reference load balancer draft for retry service and give recommendations for address validation token",
      "url": "https://github.com/quicwg/ops-drafts/issues/40",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram",
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "... in the applicability statement? I mean one example mechanism maybe...",
      "createdAt": "2018-08-16T16:42:16Z",
      "updatedAt": "2020-08-17T11:51:22Z",
      "closedAt": "2020-08-17T11:51:22Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Can anybody help with that?",
          "createdAt": "2018-10-17T15:34:42Z",
          "updatedAt": "2018-10-17T15:34:42Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "https://tools.ietf.org/html/rfc5077#section-4",
          "createdAt": "2018-10-17T22:54:51Z",
          "updatedAt": "2018-10-17T22:54:51Z"
        },
        {
          "author": "ekr",
          "authorAssociation": "NONE",
          "body": "The 5077 construction is pretty outdated (it's not even AEAD), unfortunately.\r\n",
          "createdAt": "2018-11-06T07:53:25Z",
          "updatedAt": "2018-11-06T07:53:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ekr is there somewhere else we should look for current best practice, or do we need to invent something new here?\r\n",
          "createdAt": "2018-11-06T08:21:06Z",
          "updatedAt": "2018-11-06T08:21:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll find a stuckee for up-to-date crypto language here at the Zurich interim.",
          "createdAt": "2020-01-13T10:07:05Z",
          "updatedAt": "2020-01-13T10:07:05Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closing for now, couldn't find any takers.",
          "createdAt": "2020-07-06T14:53:18Z",
          "updatedAt": "2020-07-06T14:53:18Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "...actually, it's in the LB draft. Reference it.",
          "createdAt": "2020-07-06T14:54:36Z",
          "updatedAt": "2020-07-06T14:54:36Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #104 proposed to address this issue...",
          "createdAt": "2020-07-07T16:27:25Z",
          "updatedAt": "2020-07-07T16:27:25Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWUzNzc3Mjk4Mzk=",
      "title": "Streams as message-framing",
      "url": "https://github.com/quicwg/ops-drafts/issues/54",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "It's useful to talk about the use of streams as messages, since they're designed to be lightweight. This is a feature of QUIC, and it's worth articulating.",
      "createdAt": "2018-11-06T07:57:40Z",
      "updatedAt": "2019-07-04T13:46:48Z",
      "closedAt": "2019-07-04T13:46:48Z",
      "comments": [
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "> streams [are] designed to be lightweight\r\n\r\nThe Working Group does not believe that to be true: using many streams was used by the majority to argue against the design of the original (@MikeBishop's pre-QCRAM) QPACK.",
          "createdAt": "2018-11-06T17:25:37Z",
          "updatedAt": "2018-11-06T17:25:37Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@dtikhonov: I don't want to litigate how QPACK ought to have been done here, but streams are defined to be usable in this manner. See [transport draft](https://quicwg.org/base-drafts/draft-ietf-quic-transport.html#rfc.section.2): \"Streams in QUIC provide a lightweight, ordered byte-stream abstraction to an application. An alternative view of QUIC streams is as an elastic \u201cmessage\u201d abstraction.\"",
          "createdAt": "2018-11-07T02:29:19Z",
          "updatedAt": "2018-11-07T02:29:19Z"
        },
        {
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "body": "My point is about the \"lightweightedness\" of QUIC streams, not about QPACK.",
          "createdAt": "2018-11-07T04:07:52Z",
          "updatedAt": "2018-11-07T04:07:52Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since that's not an objectively-defined term, I think every use-case will\nhave to decide whether a QUIC stream is lightweight enough. That said, it's\nstill reasonable as a message abstraction, but maybe not _all_ use cases.\n\nOn Wed, Nov 7, 2018 at 11:07 AM Dmitri Tikhonov <notifications@github.com>\nwrote:\n\n> My point is about the \"lightweightedness\" of QUIC streams, not about QPACK.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/issues/54#issuecomment-436498195>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AKjg1JGNrAYJogKMQBoMGiQNTLAupCoMks5uslyZgaJpZM4YP7G_>\n> .\n>\n",
          "createdAt": "2018-11-07T12:17:53Z",
          "updatedAt": "2018-11-07T12:17:53Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note that this is a partial dupe of #15 (which implicitly uses streams for message framing in order to make them variably-reliable). \r\n\r\nIMO, at least some language on this (if we want to do this, which I personally do) belongs in -transport, because while it is not _technically_ necessary to call out there for interoperability purposes, the fact that streams-as-messages is obvious enough in the shadows of the design to have occurred to multiple people mapping multiple different application protocols and APIs to QUIC means at least a pointer to the idea should be there (so as not to surprise people to whom it has not yet occurred).",
          "createdAt": "2019-04-18T07:13:20Z",
          "updatedAt": "2019-04-18T07:13:20Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hm, I think this was discussed as some QUIC meeting a couple of IETFs ago and we agreed to have it (only) in manageability.",
          "createdAt": "2019-04-18T08:11:03Z",
          "updatedAt": "2019-04-18T08:11:03Z"
        },
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "IIRC, the thought was that we'd rather have people use DATAGRAM for this purpose, once it's available.  Personally, I disagree with that stance, because streams-as-messages means you can have a message-based protocol that's not limited to the path MTU, which I find quite compelling.",
          "createdAt": "2019-04-18T18:43:18Z",
          "updatedAt": "2019-04-18T18:43:18Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree with @MikeBishop on the value, but I had thought that this really belonged in the applicability document. It is about how QUIC's abstractions may be used, which seems like an applicability point.",
          "createdAt": "2019-04-18T22:45:41Z",
          "updatedAt": "2019-04-18T22:45:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is what is already in the doc: \r\n\"If there is a logical grouping of those data chunks or messages, stream can be reused, or a new stream can be opened for each chunk/message.\"\r\n\r\nI think that is sufficient. Can we close the issue?\r\n",
          "createdAt": "2019-07-02T14:39:36Z",
          "updatedAt": "2019-07-02T14:39:36Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1 to closing this.",
          "createdAt": "2019-07-02T14:40:29Z",
          "updatedAt": "2019-07-02T14:40:29Z"
        }
      ]
    },
    {
      "number": 56,
      "id": "MDU6SXNzdWUzODUzNDU1ODU=",
      "title": "Further discussion on connection identification at stateful firewalls",
      "url": "https://github.com/quicwg/ops-drafts/issues/56",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "See [Toma's email](https://mailarchive.ietf.org/arch/msg/quic/ZqPF68ouXg3U0Y2hsvTX0QTLyuk).\r\n\r\n",
      "createdAt": "2018-11-28T16:16:17Z",
      "updatedAt": "2019-07-04T16:27:04Z",
      "closedAt": "2019-07-04T16:27:04Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "ISTM that this might also be an applicability thing as the \"easy\" solution involves the firewall to share state with the LB/frontend (with all the scalability impact that entails).",
          "createdAt": "2019-04-18T07:07:54Z",
          "updatedAt": "2019-04-18T07:07:54Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #83 add a little more text here. Please provide another PR if you think more text is needed!",
          "createdAt": "2019-07-04T15:04:07Z",
          "updatedAt": "2019-07-04T15:04:07Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR merged",
          "createdAt": "2019-07-04T16:27:04Z",
          "updatedAt": "2019-07-04T16:27:04Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "MDU6SXNzdWUzOTcyODk1OTk=",
      "title": "update -manageability for changes to packet headers",
      "url": "https://github.com/quicwg/ops-drafts/issues/57",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Review the text of the -manageability draft to ensure that changes to headers in the latest version of -transport are correctly tracked.",
      "createdAt": "2019-01-09T09:49:17Z",
      "updatedAt": "2019-01-24T09:11:15Z",
      "closedAt": "2019-01-24T09:11:15Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "on review CIDs are mostly okay but there are other header changes to track.",
          "createdAt": "2019-01-09T12:00:24Z",
          "updatedAt": "2019-01-09T12:00:24Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "MDU6SXNzdWUzOTczMDEzODg=",
      "title": "update -manageability for BKK spin bit consensus",
      "url": "https://github.com/quicwg/ops-drafts/issues/58",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Review and update text in -manageability to reflect BKK spin bit consensus:\r\n\r\n- single spin bit is in the protocol spec now\r\n- endpoints may opt out (discuss why; this is for any reason, not just proxies as suggested in #55),\r\n- endpoints should probabilistically out out to provide cover for endpoints opting out",
      "createdAt": "2019-01-09T10:18:09Z",
      "updatedAt": "2019-04-23T15:16:54Z",
      "closedAt": "2019-04-23T15:16:53Z",
      "comments": [
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "I am working on this.",
          "createdAt": "2019-01-09T10:45:08Z",
          "updatedAt": "2019-01-09T10:45:08Z"
        },
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "@britram what about having a privacy consideration section ? ",
          "createdAt": "2019-01-24T18:28:33Z",
          "updatedAt": "2019-01-24T18:28:33Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure this fits in the scope of the document: can you say more about what you propose to be in this section? The -manageability document is meant to be an independent user's guide to the wire image, so information on the spin bit here will be more about how to measure it, not additional guidelines on how to generate it and when not to (though such text might belong in -applicability)\r\n\r\nPlease coordinate with @ihlar, who will also be proposing text on spin measurement to bring over from draft-ietf-quic-spin-exp.\r\n\r\n",
          "createdAt": "2019-01-24T22:41:06Z",
          "updatedAt": "2019-01-24T22:41:06Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "see PR #66 ",
          "createdAt": "2019-04-17T12:32:47Z",
          "updatedAt": "2019-04-17T12:32:47Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by merge of #66 and #67",
          "createdAt": "2019-04-23T15:16:53Z",
          "updatedAt": "2019-04-23T15:16:53Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU0MjU0NDAwNTg=",
      "title": "Note about small packets",
      "url": "https://github.com/quicwg/ops-drafts/issues/61",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "Middlebox vendors (and others as well) used to TCP want to assume that the smallest packet might be ack packets. This is not true in QUIC, and manageabiity draft may want to say something about it.",
      "createdAt": "2019-03-26T14:07:39Z",
      "updatedAt": "2019-04-18T07:14:08Z",
      "closedAt": "2019-04-18T07:14:08Z",
      "comments": []
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU0MjU4MjM4Nzk=",
      "title": "Discuss counter-measures to version ossification",
      "url": "https://github.com/quicwg/ops-drafts/issues/62",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See also issue quicwg/base-drafts#2496",
      "createdAt": "2019-03-27T08:30:13Z",
      "updatedAt": "2020-01-13T10:03:44Z",
      "closedAt": "2020-01-13T10:03:43Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good Strategy probably is to move quickly to new version and/or deploy draft versions in order to keep the version number field as dynamic as possible. However, if there will be ossification there is probably still a possibility to implement some kind of alternate version negotiation in the encrypted part of the packet and pretend on the outside to use the supported version (similar as TLS1.3 does); of course there is a performance/overhead trade-off.\r\n\r\nWith the uncertainty about what will happen in respect to ossification, it might not be worth is to try and solve the problem now and pay the complexity up front.",
          "createdAt": "2019-03-27T08:38:45Z",
          "updatedAt": "2019-03-27T08:49:29Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "does not appear as though the discussion on the list has converged yet; will wait to see at happens in the base drafts before addressing this one in ops.",
          "createdAt": "2019-04-18T06:49:30Z",
          "updatedAt": "2019-04-18T06:49:30Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Consensus to handle \"weak\" version ossification via a mechanism in the transport; holding this issue open until that converges, but probably not useful to have text in manageability.",
          "createdAt": "2019-08-20T13:14:49Z",
          "updatedAt": "2019-08-20T13:14:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This converged in Singapore to no-action in v1.",
          "createdAt": "2019-12-09T20:00:14Z",
          "updatedAt": "2019-12-09T20:00:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed by #89 ",
          "createdAt": "2020-01-13T10:03:43Z",
          "updatedAt": "2020-01-13T10:03:43Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU0MjkwNjcwOTY=",
      "title": "Point out how troubleshooting gets easier",
      "url": "https://github.com/quicwg/ops-drafts/issues/63",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The section on \"Passive network performance measurement and troubleshooting\" is probably a bit too pessimistic.\r\n\r\nIt's probably worth pointing out that one part of network troubleshooting -- \"find out which box to blame\" -- is substantially easier. Thanks to integrity protection, most middleboxes, can drop, delay/rate limit, and corrupt, and that's about it. These are fairly easy behaviors to diagnose.\r\n\r\nI've had some conversations with customers afraid of not having their TCP headers anymore, and I believe this fear is largely misguided.\r\n\r\nIf people agree this belongs in the draft, I can file a PR.",
      "createdAt": "2019-04-04T03:31:44Z",
      "updatedAt": "2019-04-17T14:32:15Z",
      "closedAt": "2019-04-17T14:32:15Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree the wording is very pessimistic. However, I don't think your observation belongs in this section because it's about measurement of performance metrics.\r\n\r\nThere is a sentence in the introduction:\r\n\r\n\"Given QUIC is an end-to-end transport protocol, all information in the protocol header, even that which can be inspected, is is not meant to be mutable by the network, and is therefore integrity-protected to the extent possible.\"\r\n\r\nMaybe it makes sense to add another sentence right there to also emphasis the positive effect of that, like: \r\n\r\n\"While more limited information compared to TCP is visible to the network, integrity protection can also make troubleshooting easier as none of the nodes on the network path can modify the transport layer information.\"",
          "createdAt": "2019-04-04T09:08:01Z",
          "updatedAt": "2019-04-04T09:08:01Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by #64 ",
          "createdAt": "2019-04-17T14:32:15Z",
          "updatedAt": "2019-04-17T14:32:15Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "MDU6SXNzdWU0MzYzMDk1NzA=",
      "title": "Connection migration strategies",
      "url": "https://github.com/quicwg/ops-drafts/issues/68",
      "state": "CLOSED",
      "author": "rpaulo",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "I think the applicability draft may benefit from exploring connection migration strategies as described in:\r\n\r\n- https://tools.ietf.org/html/draft-paulo-quic-migration-00#section-2",
      "createdAt": "2019-04-23T17:40:58Z",
      "updatedAt": "2019-07-04T15:40:29Z",
      "closedAt": "2019-07-04T14:32:10Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Do we also need to say anything about use of 0-byte CID? See quicwg/base-drafts#2441",
          "createdAt": "2019-05-22T13:59:35Z",
          "updatedAt": "2019-05-22T13:59:35Z"
        },
        {
          "author": "rpaulo",
          "authorAssociation": "NONE",
          "body": "The transport draft already says:\r\n\r\n>  an endpoint MUST NOT initiate migration if its peer supplies a zero-length connection ID",
          "createdAt": "2019-05-22T15:07:00Z",
          "updatedAt": "2019-05-22T15:07:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by PR #80 and one more sentence",
          "createdAt": "2019-07-04T14:32:10Z",
          "updatedAt": "2019-07-04T14:32:10Z"
        },
        {
          "author": "rpaulo",
          "authorAssociation": "NONE",
          "body": "I don\u2019t see any text related to connection migration on that PR. ",
          "createdAt": "2019-07-04T15:16:00Z",
          "updatedAt": "2019-07-04T15:16:00Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "sorry wrong PR; should be #81 and is already merged",
          "createdAt": "2019-07-04T15:40:29Z",
          "updatedAt": "2019-07-04T15:40:29Z"
        }
      ]
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU0NDcxNDM4OTU=",
      "title": "Maybe provide guidance on use of advertised idle timeout",
      "url": "https://github.com/quicwg/ops-drafts/issues/71",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "This is related to quicwg/base-drafts#2602 and depends on the outcome there.",
      "createdAt": "2019-05-22T13:40:53Z",
      "updatedAt": "2020-08-17T11:51:00Z",
      "closedAt": "2020-08-17T11:51:00Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #78 now indicated that the idle timeout could be exposed to the application. However, we should probably say a bit more what to do with it. I guess the minimum would be to say that the keep-alive frequency needs to be clearly smaller than the idle timeout, e.g. half the timeout. Is there anything more we could say?\r\n\r\n@janaiyengar @MikeBishop any thoughts? Or text you can provide?\r\n",
          "createdAt": "2019-07-04T13:52:19Z",
          "updatedAt": "2019-07-04T13:52:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #102 provides some more guidance now but it still doesn't discuss suitable value or ranges. What values are used in current implementations? Should we say more?",
          "createdAt": "2020-07-07T15:53:07Z",
          "updatedAt": "2020-07-07T15:53:07Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU0NDcxNDUyOTA=",
      "title": "Do we want to provide any advise on use of coalesced packets?",
      "url": "https://github.com/quicwg/ops-drafts/issues/72",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "Related to quicwg/base-drafts#2308 as a comment came up in the discussion that the transport draft does not explain why anybody would use coalesced packets. Do we want to elaborate some use cases and provide more guidance?",
      "createdAt": "2019-05-22T13:43:20Z",
      "updatedAt": "2019-07-04T14:43:53Z",
      "closedAt": "2019-07-04T14:43:53Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IMO, no.",
          "createdAt": "2019-07-04T14:43:25Z",
          "updatedAt": "2019-07-04T14:43:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Probably an application shouldn't worries about this... so closing.",
          "createdAt": "2019-07-04T14:43:53Z",
          "updatedAt": "2019-07-04T14:43:53Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWU0NTk5Njg0NTA=",
      "title": "Document how SNI from QUIC handshakes is presented",
      "url": "https://github.com/quicwg/ops-drafts/issues/75",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "SNI is currently mentioned in the Manageability document, but you'd have to read a substantial chunk of the transport and tls drafts to understand how to extract it.\r\n\r\nI'd suggest a short section that describes how it's presented on the wire with references to the appropriate sections on transport and tls.\r\n\r\nCurrently, the section on client Initial says: \"The Client Hello datagram exposes version number, source and destination connection IDs, and information in the TLS Client Hello message, including any TLS Server Name Indication (SNI) present, in the clear.\"\r\n\r\nI think saying the SNI is in the clear is a bit misleading to a casual observer.",
      "createdAt": "2019-06-24T15:50:31Z",
      "updatedAt": "2020-10-12T14:00:12Z",
      "closedAt": "2020-10-12T14:00:12Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett  can you maybe provide some text?",
          "createdAt": "2019-07-04T12:09:28Z",
          "updatedAt": "2019-07-04T14:36:08Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It'll likely be a large PR, but yes, I'm happy to.",
          "createdAt": "2019-07-05T19:49:37Z",
          "updatedAt": "2019-07-05T19:49:37Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!",
          "createdAt": "2019-07-08T10:02:27Z",
          "updatedAt": "2019-07-08T10:02:27Z"
        },
        {
          "author": "nharper",
          "authorAssociation": "NONE",
          "body": "The algorithm for parsing SNI from a QUIC initial packet is specific to v1. (Future versions will change the key; they could also change the algorithm for encrypting/obfuscating initial packets, and could make other changes to the crypto handshake.) Should it be mentioned \"this only works for QUICv1\" with the re-written SNI bits, or somewhere else to cover more broadly \"anything you do that involves decrypting packets protected by initial keys is v1 specific\"?",
          "createdAt": "2019-07-29T20:03:42Z",
          "updatedAt": "2019-07-29T20:03:42Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> \"anything you do that involves decrypting packets protected by initial keys is v1 specific\"?\r\n\r\nI think the entire draft can be prefaced by \"anything you do that involves using QUIC protocol properties not explicitly specified in Invariant is v1 specific\". This applies to the discussion of connection IDs, spin bit, initial keys, etc.",
          "createdAt": "2020-05-29T20:09:24Z",
          "updatedAt": "2020-05-29T20:09:24Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I opened a separate issue for that (#95). ",
          "createdAt": "2020-06-02T10:45:36Z",
          "updatedAt": "2020-06-02T10:45:36Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Note that this needs to recognize the possibility of Encrypted ClientHello.",
          "createdAt": "2020-07-29T12:14:36Z",
          "updatedAt": "2020-07-29T12:14:36Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It also needs to recognize that connection migration may break assumptions about the stability of SNI information.",
          "createdAt": "2020-07-29T12:15:59Z",
          "updatedAt": "2020-07-29T12:15:59Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "And NAT rebinding. And mention CIDs aren't stable, particularly when the path changes.",
          "createdAt": "2020-07-29T12:20:51Z",
          "updatedAt": "2020-07-29T12:20:51Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "another reference to potentially integrate: https://www.chromium.org/quic/parse-client-hello",
          "createdAt": "2020-07-29T12:43:10Z",
          "updatedAt": "2020-07-29T12:43:10Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Having read that document, it would need to be framed to avoid condoning it.  It advocates a strategy that is not compliant with QUIC invariants.  It's very much rooted in 2020, including parsing rules for Google QUIC, so it might not be a good basis for an RFC.",
          "createdAt": "2020-07-29T13:04:56Z",
          "updatedAt": "2020-07-29T13:04:56Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU0NjM0MjA1NDE=",
      "title": "Document the challenges of creating a 'transparent' QUIC MITM",
      "url": "https://github.com/quicwg/ops-drafts/issues/76",
      "state": "CLOSED",
      "author": "ianswett",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "Feel free to close this if it's out of scope, but creating a proxy that attempts to passively observe QUIC is much more complex and potentially problematic than TLS over TCP.\r\n\r\nFor example, all major OS's have mature TCP implementations, whereas a MITM would have to pull in its own QUIC implementation.  If it does so, it would be important that's it's both conformant to IETF specifications and have good performance.  This is the full L7 termination case, which is possible, but a lot of work, and we should heavily encourage anyone doing this to use an existing(\"good\") implementation.\r\n\r\nA potential MITM option is to attempt to terminate the handshake, but then only observe ApplicationData packets.  However, this could go wrong in many ways, so I believe it should be strongly discouraged.  QUIC is designed as an end-to-end protocol and efforts to change that are likely to end very poorly.\r\n\r\nFor example, if the length of the CID changes, then the offset of the header changes and a middlebox who doesn't track all CIDs both peers may be unable to decrypt packets.  I'm sure there are more gotchas, particularly with the introduction of extensions.  It may also be worth pointing out that QUIC frames are not TLV, so any frames(ie: extensions) that are not understood cause all other frames to be unparseable.\r\n\r\nThanks to @DavidSchinazi for the specific examples of ways this could fail.",
      "createdAt": "2019-07-02T20:27:30Z",
      "updatedAt": "2019-07-04T20:06:42Z",
      "closedAt": "2019-07-04T20:06:42Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Still trying to figure out what my thinking is her, but it sounds a bit like you propose something like \"If you want to implement a QUIC MITM, please terminate the whole connection up to L7 and use an existing library.\" Note sure that is actually giving quite there right message....",
          "createdAt": "2019-07-04T12:47:54Z",
          "updatedAt": "2019-07-04T12:47:54Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As a user's guide to the wire image, one of the base assumptions we make is that access to the wire image is read only. We should definitely be more explicit about this. We also need an explicit statement that MITM is out of scope for *this* doc and if you want to, terminate at L7 and congrats, now everything in -transport and -tls (and, realisitically, -http) applies.",
          "createdAt": "2019-07-04T14:41:01Z",
          "updatedAt": "2019-07-04T14:41:01Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU0NjQyNjY2Mzk=",
      "title": "recommendations for using ALPN in QUIC mappings",
      "url": "https://github.com/quicwg/ops-drafts/issues/79",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Both documents provide limited guidance on use of ports, however, there was an open question if the applicability statement should maybe say more and e.g. also talk about ALPN.",
      "createdAt": "2019-07-04T13:26:31Z",
      "updatedAt": "2020-07-08T09:02:30Z",
      "closedAt": "2020-07-08T09:02:30Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pending consensus on use of ALPN in -transport ",
          "createdAt": "2019-12-09T14:47:00Z",
          "updatedAt": "2019-12-09T14:47:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "We already have consensus to require ALPN.  Unless you meant to refer to https://github.com/quicwg/base-drafts/issues/3117.  In that case, yes, you might want to explain how this works for HTTP/3 specifically.  That is, the HTTP/3 ALPN refers to QUICv1.  For now.  We have apparently reserved the right to revise that when we define QUICv2.\r\n\r\nIf you start to explain the controversial aspects of this (does ALPN refer to the layer or the stack as a whole) then you will soon find that you don't have any concrete answers.",
          "createdAt": "2019-12-10T05:31:13Z",
          "updatedAt": "2019-12-10T05:31:13Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yep, I meant quicwg/base-drafts#3117.\r\n\r\nThis document should provide some advice to application mappings other than HTTP on how/whether to use ALPN, but that advice really will depend on the larger discussion of what ALPN means (is is app-only, a stack designator, or something in between). \r\n\r\nHaving that discussion in this draft is probably not the right thing to do, so holding this issue open until it converges in TLS/HTTP/QUIC.",
          "createdAt": "2020-01-13T10:02:48Z",
          "updatedAt": "2020-01-13T10:02:48Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Probably it would be good to have a more general section on service discovery and point to the HTTP/3 doc as one example.",
          "createdAt": "2020-04-22T12:00:18Z",
          "updatedAt": "2020-04-22T12:00:18Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Create a new section in applicability, and reference the -http draft section 3.1 as an example.",
          "createdAt": "2020-07-06T14:57:19Z",
          "updatedAt": "2020-07-06T14:57:19Z"
        }
      ]
    },
    {
      "number": 85,
      "id": "MDU6SXNzdWU0NjQzMTkwNDM=",
      "title": "Double check use of normative language",
      "url": "https://github.com/quicwg/ops-drafts/issues/85",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "Not clear if these documents should use normative language at all. The applicability statement also sometimes uses normative language to recommend the implementation of certain interfaces; I don't think this is the right document for that but as we also don't have another document, we should decide if we want to do that or not!",
      "createdAt": "2019-07-04T15:23:00Z",
      "updatedAt": "2020-12-07T13:37:30Z",
      "closedAt": "2020-12-07T13:37:30Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Manageability is a user's guide to the wire image, as such there's no sense to normative language (though I suppose some might like to add MUST NOT observe packets).\r\n\r\nSince applicability is in part a set of recommendations to application designers, normative language might make sense there... but the document is informational, so normative language here has to reference or be trivially derived from normative language in one of the base drafts.\r\n\r\nTo simplify things, I'd just scrub all the SHOULDs, MAYs, and MUSTs.",
          "createdAt": "2020-11-18T06:02:50Z",
          "updatedAt": "2020-11-18T06:02:50Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "MDU6SXNzdWU0OTYzOTI3NTk=",
      "title": "Update to invariants -07",
      "url": "https://github.com/quicwg/ops-drafts/issues/86",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "",
      "createdAt": "2019-09-20T14:44:55Z",
      "updatedAt": "2020-07-08T08:43:16Z",
      "closedAt": "2020-07-08T08:43:16Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also call out invariants (esp. in header structure and handshake) explicitly: v2 may/will break functionality outside the invariants.",
          "createdAt": "2019-09-20T14:46:42Z",
          "updatedAt": "2019-09-20T14:46:42Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Document is currently in in with final invariants; do one last pass to make sure everything documented in Section 17 as expose information appears here (which is basically the same check).",
          "createdAt": "2020-07-06T14:52:13Z",
          "updatedAt": "2020-07-06T14:52:13Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "MDU6SXNzdWU1MjM3ODI4NjE=",
      "title": "Considerations for NATs",
      "url": "https://github.com/quicwg/ops-drafts/issues/87",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The manageability draft should talk a little bit about NATS for QUIC.\r\n\r\nThe laziest thing to do is just continue to have NAT mapping be by 4-tuple, as it is today. This is actually fine.\r\n\r\nHowever, someone might attempt to be clever and use the CID as well. For example, client A and client B could share the same serverside address and port and the NAT can initially distinguish between the two because they have different CIDs. This appears to save address space,  but doesn't actually work because the server could switch to a new client connection ID. In this case, the NAT won't be able to determine which client to route to.",
      "createdAt": "2019-11-16T03:25:44Z",
      "updatedAt": "2020-01-13T09:34:49Z",
      "closedAt": "2020-01-13T09:34:49Z",
      "comments": [
        {
          "author": "erickinnear",
          "authorAssociation": "NONE",
          "body": "I think it's also worth mentioning that using just the CID only is similarly broken, the fundamental underlying concept here is that subsequent CIDs are exchanged in a manner that the NAT cannot see -- the only time it's okay to use CIDs is if you're colluding with one of the endpoints, as in QUIC LB.",
          "createdAt": "2019-11-16T12:24:15Z",
          "updatedAt": "2019-11-16T12:24:15Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "At least recommend to use longer binding lifetimes for identified QUIC connections?",
          "createdAt": "2019-11-17T07:05:41Z",
          "updatedAt": "2019-11-17T07:05:41Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See PR #88 ",
          "createdAt": "2019-12-09T14:44:49Z",
          "updatedAt": "2019-12-09T14:44:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in this doc by #88",
          "createdAt": "2020-01-13T09:34:49Z",
          "updatedAt": "2020-01-13T09:34:49Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "MDU6SXNzdWU1NDg4MTgxNDY=",
      "title": "Advice on network state idle timeouts",
      "url": "https://github.com/quicwg/ops-drafts/issues/91",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "For discussion: should the manageability draft advise that idle timeouts should be longer for flows inferred/detected to be QUIC flows?\r\n\r\nI think the answer here is \"it depends\": for NATs, yes, state at the edge is not all that scarce anymore. For firewalls? Maybe not so much. Are there other applications to consider here, and is there any generalized advice this document could give?\r\n\r\nIf so, is there any generalized advice for how long the timeout should be?",
      "createdAt": "2020-01-13T09:55:52Z",
      "updatedAt": "2020-07-08T08:38:29Z",
      "closedAt": "2020-07-08T08:38:29Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #103 is an attempt to address this issue but doesn't provide much concrete guidance... ",
          "createdAt": "2020-07-07T16:13:50Z",
          "updatedAt": "2020-07-07T16:13:50Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU1NTE0OTIyMzY=",
      "title": "CID and length",
      "url": "https://github.com/quicwg/ops-drafts/issues/92",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "has PR"
      ],
      "body": "Note in section about CID that as the server chooses the CIDs, it could use some own scheme to embed the length of the CID in the CID itself, instead remembering it, e.g. use the first few bits to indicate which of the sizes that are support was chosen.",
      "createdAt": "2020-01-17T15:52:27Z",
      "updatedAt": "2020-08-17T11:50:49Z",
      "closedAt": "2020-08-17T11:50:49Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "can be done together with #40, referencing the LB draft",
          "createdAt": "2020-07-06T15:01:44Z",
          "updatedAt": "2020-07-06T15:01:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #105 to address this and reference to load balancer draft",
          "createdAt": "2020-07-07T16:40:56Z",
          "updatedAt": "2020-07-07T16:40:56Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "MDU6SXNzdWU2MDc0OTA5ODc=",
      "title": "Improve and generalize text on DoS detection and mitigation",
      "url": "https://github.com/quicwg/ops-drafts/issues/93",
      "state": "CLOSED",
      "author": "ximaera",
      "authorAssociation": "NONE",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "> Current practices in detection and mitigation of Distributed Denial of Service (DDoS) attacks generally involve passive measurement using network flow data {{?RFC7011}}, classification of traffic into \"good\" (productive) and \"bad\" (DoS) flows, and filtering of these bad flows in a \"scrubbing\" environment\r\n\r\nThis is not how it works. A few examples:\r\n - https://en.wikipedia.org/wiki/SYN_cookies\r\n - https://www.researchgate.net/publication/220027076_Mitigating_denial_of_service_attack_using_CAPTCHA_mechanism",
      "createdAt": "2020-04-27T12:02:13Z",
      "updatedAt": "2020-08-14T14:28:43Z",
      "closedAt": "2020-07-08T08:48:25Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not sure I see support for \"this is not how it works\" in your examples: SYN cookies on their own are a 1990s technique for end-system DoS prevention, which, while useful at transport-terminating front ends as part of a larger DoS prevention strategy, aren't really usable on their own at scale. The paper you link to here (from ICWET, and itself a decade old) primarily deals with the separation of good from bad flows at layer 7, not necessarily how the front-end handles these flows once classified. But you're definitely right that this is not *only* how it works: the DoS mitigation landscape is wide and varied (even if at the end of the day the only strategy we have found to work at scale is \"eat the DoS\".\r\n\r\nThat said, this text could be improved: it discounts detection and classification mechanisms other than based on flow designators derived from passive measurement, does not mention protocols other than IPFIX and the flow model that comes along with it when classifying traffic, etc. \r\n\r\nThe text should also be more applicable to UDP reflection DoS, which is a primary concern in wire image differentiation in QUIC (and which also isn't otherwise addressed in the document or in this issue). Adding a path-observable SYN cookie equivalent to QUIC, while useful, seems difficult to achieve given the working group's history of consensus about path-observable wire image features, so other classification mechanisms are what we'll be left with.\r\n\r\n",
          "createdAt": "2020-05-18T13:35:55Z",
          "updatedAt": "2020-05-18T13:35:55Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "> it discounts detection and classification mechanisms\r\n> other than based on flow designators derived from\r\n> passive measurement\r\n\r\nExactly my point.\r\n\r\nThe passive measurements are generally only useful to prevent the collateral damage to the network infrastructure of an ISP or a datacenter network under an attack. While the infrastructure impact of QUIC is itself an intriguing research topic, DDoS affects not only transit networks but also the endpoints in ways that could not be prevented with any passive flow classification.",
          "createdAt": "2020-05-18T13:48:14Z",
          "updatedAt": "2020-05-18T13:48:14Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intent of this section is to cover DoS mitigation on the \"downstream\" segment, all the way from transit to endpoint, with access and front-end networks in between; the further you get from the endpoint the harder classification is, but the larger the impact of filtering operations. AIUI transit networks generally only get involved at the BGP level (i.e., when an affected destination prefix is temporarily announced via a mitigation/filtering network to route traffic for scrubbing), but we shouldn't look at *just* the endpoint/frontend, either,\r\n\r\nThis document probably shouldn't go all the way down the DoS prevention architecture rabbithole (note to self: check to see whether DOTS has something we can refer to here). But I'll put some effort into making this more general.",
          "createdAt": "2020-05-18T14:18:56Z",
          "updatedAt": "2020-05-18T14:18:56Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "> AIUI transit networks generally only get involved at\r\n> the BGP level (i.e., when an affected destination\r\n> prefix is temporarily announced via a\r\n> mitigation/filtering network to route traffic for scrubbing)\r\n\r\nThis is more of an \"e.g.\" than \"i.e.\", but fine.\r\n\r\nI must say this is also a place where the infrastructure could be affected by the HTTP protocol upgrade. E.g. if the risk model assumes large transport layer floods, then the optical links towards the scrubbing center should be upgraded to carry ~22x more traffic.",
          "createdAt": "2020-05-18T14:50:52Z",
          "updatedAt": "2020-05-18T14:52:12Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed by #94 ",
          "createdAt": "2020-07-06T14:57:57Z",
          "updatedAt": "2020-07-06T14:57:57Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "actually, no; improve section 4.4 as well.",
          "createdAt": "2020-07-06T14:59:21Z",
          "updatedAt": "2020-07-06T14:59:21Z"
        },
        {
          "author": "ximaera",
          "authorAssociation": "NONE",
          "body": "Err.\r\n\r\n\"Current practices in detection and mitigation of Distributed Denial of Service\r\n(DDoS) attacks generally involves classification of incoming traffic (as \r\npackets, flows, or some other aggregate) into \"good\" (productive) and \"bad\" \r\n(DDoS) traffic\"\r\n\r\nNo. It **generally** does not. There are active and passive countermeasures, there are SYN cookies, truncated DNS responses, captchas, etc. The draft is still missing all of those.",
          "createdAt": "2020-08-14T13:26:30Z",
          "updatedAt": "2020-08-14T13:26:30Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think what is still missing is to note that this document is generally scoped to in-network manageability and therefore does not discuss measures that can be applied directly at the end hosts. Maybe we can clarify this by add one simple word like this:\r\n\r\ns/Current practices in detection and mitigation/Current in-network practices in detection and mitigation/\r\n\r\n?",
          "createdAt": "2020-08-14T14:28:43Z",
          "updatedAt": "2020-08-14T14:28:43Z"
        }
      ]
    },
    {
      "number": 95,
      "id": "MDU6SXNzdWU2MjkwOTkyMDI=",
      "title": "Indicate which parts of the draft are v1 specific",
      "url": "https://github.com/quicwg/ops-drafts/issues/95",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "final check"
      ],
      "body": "It might be the case that this is true for the whole draft and we should just state this at the beginning but better to double-check!",
      "createdAt": "2020-06-02T10:44:56Z",
      "updatedAt": "2020-11-02T14:58:50Z",
      "closedAt": "2020-11-02T14:58:50Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "we will leave this issue open to double-check at the end",
          "createdAt": "2020-07-06T14:50:32Z",
          "updatedAt": "2020-07-06T14:50:32Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU2NDk5NDI0NzE=",
      "title": "Mention accidental invariants and the calculus of blocking",
      "url": "https://github.com/quicwg/ops-drafts/issues/96",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "From Spencer on the list:\r\n\r\n> Before I read this ^ paragraph, I was planning to ask you whether \"blocking QUIC\" merited a mention in https://tools.ietf.org/html/draft-ietf-quic-manageability-06, because we are in the awkward position with HTTP/3 that operators will face less blowback blocking HTTP/3-QUIC and forcing a fallback to HTTP/2-TCP than they will face blocking almost any non-HTTP/3 QUIC protocol (with less clearly defined fallbacks) (see: MASQUE). \r\n> ISTM that at a minimum, the \"accidental invariants\" might be mentioned in https://tools.ietf.org/html/draft-ietf-quic-manageability-06, which targets operators. \r\n",
      "createdAt": "2020-07-02T13:43:12Z",
      "updatedAt": "2020-07-08T08:55:16Z",
      "closedAt": "2020-07-08T08:55:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by #98 ",
          "createdAt": "2020-07-06T14:49:35Z",
          "updatedAt": "2020-07-06T14:49:35Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU2NTE1NzM2OTA=",
      "title": "DDOS mitigation section should reference LB draft for details on retry mechanism",
      "url": "https://github.com/quicwg/ops-drafts/issues/97",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "As noted in discussion on #94.",
      "createdAt": "2020-07-06T14:13:10Z",
      "updatedAt": "2020-07-08T09:03:20Z",
      "closedAt": "2020-07-08T09:03:20Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Quoting:\r\n\r\n> Looks like https://tools.ietf.org/html/draft-ietf-quic-load-balancers-02#section-5 is an excellent discussion of Retry mechanics. It definitely deserves a reference from this doc.\r\n\r\n> The Retry mechanisms described in LB draft are all cooperating boxes, and servers are aware of them.",
          "createdAt": "2020-07-06T14:14:06Z",
          "updatedAt": "2020-07-06T14:14:06Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #101",
          "createdAt": "2020-07-06T14:53:26Z",
          "updatedAt": "2020-07-06T14:53:26Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "MDU6SXNzdWU2NTE1OTQ2NjA=",
      "title": "verify all references to QUIC documents",
      "url": "https://github.com/quicwg/ops-drafts/issues/100",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "The ops drafts often reference the core drafts by section number; make sure these section number references are correct for the WGLC drafts.",
      "createdAt": "2020-07-06T14:41:12Z",
      "updatedAt": "2020-11-18T06:45:50Z",
      "closedAt": "2020-11-18T06:45:50Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU2NjkyODgxNTI=",
      "title": "Applicability introduction is outdated",
      "url": "https://github.com/quicwg/ops-drafts/issues/110",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is editorial, but the whole introduction is written as if the quic drafts are some early concept kicking around in the working group. This will not age well, and the intro should be worded as if it were already a published RFC.\r\n\r\nThe intro still talks about \"HTTP/2 over QUIC\" when it's now HTTP/3.",
      "createdAt": "2020-07-30T23:58:27Z",
      "updatedAt": "2020-08-21T13:37:33Z",
      "closedAt": "2020-08-21T13:37:33Z",
      "comments": []
    },
    {
      "number": 111,
      "id": "MDU6SXNzdWU2NjkyODkyMjA=",
      "title": "Applicability 0RTT section",
      "url": "https://github.com/quicwg/ops-drafts/issues/111",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "While TFO has some 0RTT-like properties, it does not fully replace it, not only because the SYN or option gets scrubbed, but also because you're limited to one packet payload.\r\n\r\nAlso, this ought to mention TLS stacks that offer replay protection.\r\n\r\nI would think a modern QUIC interface would offer a signal to separate 0RTT from 1RTT data, so that both senders and receivers can manage their application data appropriately.",
      "createdAt": "2020-07-31T00:01:22Z",
      "updatedAt": "2020-08-21T14:13:26Z",
      "closedAt": "2020-08-21T14:13:26Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "will be closed by #117 ",
          "createdAt": "2020-08-17T11:52:22Z",
          "updatedAt": "2020-08-17T11:52:22Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "MDU6SXNzdWU2NjkyODk3MDQ=",
      "title": "applicability: resumption v. keepalive",
      "url": "https://github.com/quicwg/ops-drafts/issues/112",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It is odd that this section doesn't mention QUIC's robustness to NAT rebinding at all. While this won't work behind 4-tuple load balancers, middlebox timers may be irrelevant depending on the conesequences of the timeout.",
      "createdAt": "2020-07-31T00:02:44Z",
      "updatedAt": "2020-08-21T14:13:44Z",
      "closedAt": "2020-08-21T14:13:44Z",
      "comments": []
    },
    {
      "number": 113,
      "id": "MDU6SXNzdWU2NjkyOTE1MTg=",
      "title": "applicability: streams section",
      "url": "https://github.com/quicwg/ops-drafts/issues/113",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "1. This document should mention unidirectional streams\r\n\r\n2. Some words about the meaning of an abort signal vs. a clean close would be useful, both ingress and egress.\r\n\r\n3. Maximum stream bytes = 2^62-1.\r\n\r\n4. Saying \"there are special streams for QUIC\" is inaccurate (it's just one stream now, conceptually), and I would not bother to describe the CRYPTO frames this way.",
      "createdAt": "2020-07-31T00:07:19Z",
      "updatedAt": "2020-09-07T08:47:57Z",
      "closedAt": "2020-09-07T08:47:57Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also: stream aborts are always unidirectional.\r\n\r\nwhat can/should applications assume about stream IDs? are they accessible, and does the app have any control over them?",
          "createdAt": "2020-07-31T13:42:57Z",
          "updatedAt": "2020-07-31T13:42:57Z"
        }
      ]
    },
    {
      "number": 114,
      "id": "MDU6SXNzdWU2NzAzMjUyOTY=",
      "title": "Update Packetization reference",
      "url": "https://github.com/quicwg/ops-drafts/issues/114",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The draft says section 8 of quic-transport; it's section 13.",
      "createdAt": "2020-07-31T23:13:02Z",
      "updatedAt": "2020-08-21T14:13:59Z",
      "closedAt": "2020-08-21T14:13:59Z",
      "comments": []
    },
    {
      "number": 115,
      "id": "MDU6SXNzdWU2NzAzNTMwMTE=",
      "title": "connection migration: add server preferred address",
      "url": "https://github.com/quicwg/ops-drafts/issues/115",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "We should probably make it clear what the application can do here (SPA for servers; maybe intentional migration for clients?) I'm not sure if migration is transparent to client applications or not.",
      "createdAt": "2020-07-31T23:54:48Z",
      "updatedAt": "2020-12-21T10:34:59Z",
      "closedAt": "2020-12-21T10:34:59Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The client application might have some knowledge if it's behind a NAT or not and as such might want to indicate to use Conn ID or not. We can make that more explicit in the text.",
          "createdAt": "2020-08-24T13:12:10Z",
          "updatedAt": "2020-08-24T13:12:10Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I did some small edits on the text in the connection migration section but @martinduke maybe you had something more in mind and want to propose more text?",
          "createdAt": "2020-08-24T13:13:08Z",
          "updatedAt": "2020-08-24T13:13:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This whole section should then also be moved to after the Conn ID section.",
          "createdAt": "2020-08-24T13:18:58Z",
          "updatedAt": "2020-08-24T13:18:58Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like the move of text to the manageability draft. If it were me, I'd move \"Server-Generated Connection ID\" as well, as I don't think apps need to worry about it, but it's not a big deal.\r\n\r\nI think adding text about server preferred address is probably more important for this draft.",
          "createdAt": "2020-08-24T16:16:20Z",
          "updatedAt": "2020-08-24T16:16:20Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Added some more text in #127 ",
          "createdAt": "2020-10-27T10:29:29Z",
          "updatedAt": "2020-10-27T10:29:29Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@martinduke we think the current state of the draft addresses this issue; could you check and close this issue if so?",
          "createdAt": "2020-11-18T06:22:06Z",
          "updatedAt": "2020-11-18T06:22:06Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "MDU6SXNzdWU2NzAzNTc0MTE=",
      "title": "Does connection ID stuff belong in applicability draft?",
      "url": "https://github.com/quicwg/ops-drafts/issues/116",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "Is this something application designers need to think about or manage? I would hope QUIC implementations would handle this transparently.\r\n\r\nTo the extent you have to configure something like QUIC-LB, that's a manageability thing.",
      "createdAt": "2020-08-01T00:01:46Z",
      "updatedAt": "2020-09-07T08:49:15Z",
      "closedAt": "2020-09-07T08:49:15Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Connection IDs are weird, in that they are important to both implementors / deployers (so applicability) as opposed to operators of networks that are not necessarily at the endpoints (so manageability)",
          "createdAt": "2020-08-17T11:55:53Z",
          "updatedAt": "2020-08-17T11:55:53Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There is text about Connection ID in both documents. We can double-check though that the text is well aligned and splitter correctly.",
          "createdAt": "2020-08-17T11:58:20Z",
          "updatedAt": "2020-08-17T11:58:20Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, implementors are explicitly out of scope according to the document's introduction. I would hope that apps didn't have to worry about Connection ID properties very much, or at all.\r\n\r\nMaybe there is knob or two for information exposure, at most, but I'd consider most of this text to be extraneous to the applicabilty draft.",
          "createdAt": "2020-08-19T22:54:16Z",
          "updatedAt": "2020-08-19T22:54:16Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we actually put some text in the wrong doc. PR #121 moves this text from applicability to manageability.",
          "createdAt": "2020-08-24T12:47:58Z",
          "updatedAt": "2020-08-24T12:47:58Z"
        }
      ]
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU2ODAxNzM3MTg=",
      "title": "Advise against short idle timeouts?",
      "url": "https://github.com/quicwg/ops-drafts/issues/118",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "in #102, @pravb said:\r\n\r\n> One concern I have with short idle timeout is impact on VM live migration. The current guidance with TCP default timeouts allows LM to have a blackout period of under 9 seconds. Do we need any guidance here to not use very low default timeouts?\r\n\r\nThis probably needs its own discussion...",
      "createdAt": "2020-08-17T11:49:06Z",
      "updatedAt": "2020-11-02T14:48:05Z",
      "closedAt": "2020-11-02T14:48:04Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note that we use the words \"idle timeout\" two different ways in the applicability document:\r\n\r\n(1) the network idle timeout, which is the shortest state timeout of a device on a path between the endpoints\r\n(2) the endpoint idle timeout transport parameter, which is the point at which a connection will simply silently close.\r\n\r\nWhile addressing this question (which I interpret as \"we present session resumption as a solution for clients, but what about servers?), we should also clear up the terminology.",
          "createdAt": "2020-09-07T09:15:25Z",
          "updatedAt": "2020-09-07T09:15:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Setting a QUIC endpoint idle timeout above 30 sec won't have much effect here because of the prevalence of 30s UDP network idle timeouts on middleboxes. So guidance here should max out at 30s.\r\n\r\nGiven the variety of different ways VM live migration is implemented and the variety of network control planes that can be used to steer traffic in this situation, the guidance should also not be too low... so if there is guidance here I'd say it should be in the 10-30s range. @pravb does this seem reasonable?",
          "createdAt": "2020-10-26T14:14:23Z",
          "updatedAt": "2020-10-26T14:14:23Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See also / reference RFC 4787 (for UDP) and RFC 7857 / 2663 (for TCP).",
          "createdAt": "2020-10-26T14:21:11Z",
          "updatedAt": "2020-10-26T14:21:11Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd suggest a min of 30 seconds as being sensible for the public internet, and longer may be preferable if the deployment can consistently survive NAT rebinds.\r\n\r\nWe have applications with much longer(ie: 5 minute) timeouts in production, but they don't do hanging GETs and our infrastructure is designed to correctly handle NAT rebinds.",
          "createdAt": "2020-10-26T14:42:46Z",
          "updatedAt": "2020-10-26T14:42:46Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addressed by #125",
          "createdAt": "2020-11-02T14:48:04Z",
          "updatedAt": "2020-11-02T14:48:04Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "MDU6SXNzdWU3NDUzNTUzNTA=",
      "title": "CI appears broken",
      "url": "https://github.com/quicwg/ops-drafts/issues/130",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "larseggert",
        "britram"
      ],
      "labels": [],
      "body": "Maybe try GitHub Actions.\r\n\r\n```sh\r\ngit -C lib fetch origin\r\ngit -C lib checkout main\r\ncp -R lib/template/.github .\r\ngit add .github\r\ngit commit\r\n```",
      "createdAt": "2020-11-18T05:54:25Z",
      "updatedAt": "2020-11-18T07:27:31Z",
      "closedAt": "2020-11-18T07:27:31Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CircleCI is actually building the docs (and submits on pushed annotated tags), but I also just noticed that ghpages is somehow desynced.\r\n\r\nThe suggestion above would move to GitHub Actions; I presume I'd need to turn CircleCI off as well...",
          "createdAt": "2020-11-18T06:09:43Z",
          "updatedAt": "2020-11-18T06:09:43Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yes, turning off Circle would help avoid having them fight each other.",
          "createdAt": "2020-11-18T06:10:32Z",
          "updatedAt": "2020-11-18T06:10:32Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "hm, the master/main switch seems to be confounding me here:\r\n\r\n```\r\n\u279c  quic-ops-master git:(master) git -C lib fetch origin \r\nremote: Enumerating objects: 453, done.\r\nremote: Counting objects: 100% (448/448), done.\r\nremote: Compressing objects: 100% (162/162), done.\r\nremote: Total 391 (delta 230), reused 358 (delta 199), pack-reused 0\r\nReceiving objects: 100% (391/391), 49.96 KiB | 655.00 KiB/s, done.\r\nResolving deltas: 100% (230/230), completed with 41 local objects.\r\nFrom https://github.com/martinthomson/i-d-template\r\n * [new tag]         v1         -> v1\r\n\u279c  quic-ops-master git:(master) git -C lib fetch origin main\r\nFrom https://github.com/martinthomson/i-d-template\r\n * branch            main       -> FETCH_HEAD\r\n\u279c  quic-ops-master git:(master) git -C lib checkout main    \r\nerror: pathspec 'main' did not match any file(s) known to git\r\n```",
          "createdAt": "2020-11-18T06:20:09Z",
          "updatedAt": "2020-11-18T06:20:09Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "```\r\ngit -C lib checkout main FETCH_HEAD\r\n```\r\n\r\nPerhaps?\r\n\r\n`git reset` might need to be involved.",
          "createdAt": "2020-11-18T06:23:11Z",
          "updatedAt": "2020-11-18T06:23:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "there's also this: \r\n\r\n```\r\nlib/id.mk:3: *************************************************\r\nlib/id.mk:4: ***                                           ***\r\nlib/id.mk:5: ***   You are using the 'master' branch.      ***\r\nlib/id.mk:6: ***   Please update to use 'main'.            ***\r\nlib/id.mk:7: ***                                           ***\r\nlib/id.mk:8: ***   sed -i~ s/master/main/ Makefile         ***\r\nlib/id.mk:9: ***                                           ***\r\nlib/id.mk:10: *************************************************\r\n```\r\n",
          "createdAt": "2020-11-18T06:23:51Z",
          "updatedAt": "2020-11-18T06:23:51Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "That smells like you need to do something drastic.\r\n\r\n```\r\nrm -rf lib\r\ngit clone https://github.com/martinthomson/i-d-template lib\r\n```",
          "createdAt": "2020-11-18T06:39:08Z",
          "updatedAt": "2020-11-18T06:39:08Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yeah I've done an appropriate amount of blasting things away and I've got a PR incoming...",
          "createdAt": "2020-11-18T06:40:45Z",
          "updatedAt": "2020-11-18T06:40:45Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "one cannot ask for a more direct verification that a PR has the intended effect :)\r\n\r\n![github_circle_ci](https://user-images.githubusercontent.com/1884116/99494748-d6fed400-2971-11eb-99a1-4c6841c1d57a.png)\r\n",
          "createdAt": "2020-11-18T06:44:42Z",
          "updatedAt": "2020-11-18T06:44:42Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi Lars, I need an admin to click Stop Building [here](https://app.circleci.com/settings/project/github/quicwg/ops-drafts?return-to=https%3A%2F%2Fapp.circleci.com%2Fpipelines%2Fgithub%2Fquicwg%2Fops-drafts) to finish migrating off CircleCI; is that you?",
          "createdAt": "2020-11-18T06:48:59Z",
          "updatedAt": "2020-11-18T06:48:59Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(There might also be settings on the GitHub repository side that would disable this, but the UI has changed since the last time I did this and I... can't find them, if I'm authorized to use them)",
          "createdAt": "2020-11-18T07:02:04Z",
          "updatedAt": "2020-11-18T07:02:04Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "That link isn't loading for me? Can't you simply remove the circleCI (and Travis) config files?",
          "createdAt": "2020-11-18T07:19:03Z",
          "updatedAt": "2020-11-18T07:19:03Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "OK, the link started working after I logged in separately. Clicked!",
          "createdAt": "2020-11-18T07:21:19Z",
          "updatedAt": "2020-11-18T07:21:19Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "oh wow there was still a travis file. removed that too.\r\n\r\nThanks, Lars, this looks good to me now (and thanks @martinthomson for making HG actions migration so easy after I un-Gitted my repo).",
          "createdAt": "2020-11-18T07:27:31Z",
          "updatedAt": "2020-11-18T07:27:31Z"
        }
      ]
    },
    {
      "number": 131,
      "id": "MDU6SXNzdWU3NDUzNjA4NTE=",
      "title": "QoS support and ECMP section",
      "url": "https://github.com/quicwg/ops-drafts/issues/131",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This section is labeled with \\[EDITOR'S NOTE: this is a bit speculative; keep?]. Should we keep it?",
      "createdAt": "2020-11-18T06:05:10Z",
      "updatedAt": "2020-12-07T13:45:41Z",
      "closedAt": "2020-12-07T13:45:41Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "rolled into #140 because I forgot this issue was here \ud83e\udd26 ",
          "createdAt": "2020-12-07T13:45:41Z",
          "updatedAt": "2020-12-07T13:45:41Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "MDU6SXNzdWU3NDcwNDcxOTk=",
      "title": "2^62-1 is a harder limit than implied",
      "url": "https://github.com/quicwg/ops-drafts/issues/136",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": ">  In the presently unlikely event that this limit is reached by an application, the stream can simply be closed and replaced with a new one.\r\n\r\nThis text in [Section 4](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-2) is incorrect.  When you have sent that much data, the connection flow control limit cannot be increased further.  Consequently, though many additional streams can be opened when a stream hits this limit, you cannot send any bytes on any of those streams.\r\n\r\nI recommend striking this sentence or replacing it with a note about this fundamental limit applying to all data conveyed in streams.",
      "createdAt": "2020-11-20T00:44:54Z",
      "updatedAt": "2020-12-21T10:17:07Z",
      "closedAt": "2020-12-21T10:17:07Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Happy to take a PR :-)",
          "createdAt": "2020-12-04T18:36:17Z",
          "updatedAt": "2020-12-04T18:36:17Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "MDU6SXNzdWU3NDcwNDc5NzI=",
      "title": "You can't close stream ingress",
      "url": "https://github.com/quicwg/ops-drafts/issues/137",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "> However, an endpoint can abruptly close either the ingress or egress direction; these actions are fully independent of each other.\r\n\r\nThis text in [Section 4](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-3) is incorrect.  An endpoint can abruptly close (reset) egress data, but it can only *request* that its peer abruptly close ingress (using STOP_SENDING).",
      "createdAt": "2020-11-20T00:46:46Z",
      "updatedAt": "2020-12-22T11:30:18Z",
      "closedAt": "2020-12-22T11:30:18Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "is there a missing \"not\"? Do you mean: s/An endpoint can abruptly close (reset) egress data/An endpoint cannot abruptly close (reset) egress data/ ?\r\n\r\nAnyway, yes, we need to fix that!",
          "createdAt": "2020-12-04T18:35:09Z",
          "updatedAt": "2020-12-04T18:35:09Z"
        }
      ]
    },
    {
      "number": 138,
      "id": "MDU6SXNzdWU3NDcwNDg1NTA=",
      "title": "Critical streams aren't worth a whole paragraph",
      "url": "https://github.com/quicwg/ops-drafts/issues/138",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "I think that the text on [streams that are critical to an application](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#section-4-4) can be removed.\r\n\r\nThis was an interesting discussion in HTTP/3, but I'm not sure that the applicability statement needs to concern itself with this detail.",
      "createdAt": "2020-11-20T00:48:12Z",
      "updatedAt": "2020-12-22T11:29:37Z",
      "closedAt": "2020-12-22T11:29:37Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intention was, given it was an interesting discussion in H3, it might worth mentioning as other application may have the same \"problem\". I think it doesn't hurt to keep it. Or is there any concern that the term \"critical stream\" is maybe not well enough defined?",
          "createdAt": "2020-12-04T18:31:39Z",
          "updatedAt": "2020-12-04T18:31:39Z"
        }
      ]
    },
    {
      "number": 139,
      "id": "MDU6SXNzdWU3NDcwNTAyMzc=",
      "title": "Normative language in applicability statement",
      "url": "https://github.com/quicwg/ops-drafts/issues/139",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "There are a few instances that might be read as normative statements.  Is that really wise?\r\n\r\nExamples:\r\n\r\n> applications should not assume access to these identifiers\r\n\r\ncannot?\r\n\r\n> fallback MUST not silently violate the application's expectation of confidentiality or integrity of its payload data\r\n\r\nMaybe this isn't something that this document needs to say.  It could just say that fallback to unencrypted TCP might not be a desirable outcome.\r\n\r\nThere is also a bunch of \"MUST\"-level statements in the 0-RTT section, but I've proposed a rewrite that (I hope) eliminates them.",
      "createdAt": "2020-11-20T00:52:28Z",
      "updatedAt": "2020-12-07T13:40:34Z",
      "closedAt": "2020-12-07T13:40:34Z",
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in #132: removed all 2119 language.",
          "createdAt": "2020-12-07T13:40:34Z",
          "updatedAt": "2020-12-07T13:40:34Z"
        }
      ]
    },
    {
      "number": 140,
      "id": "MDU6SXNzdWU3NTg1MDkwODg=",
      "title": "Rewrite QoS and ECMP section to actually talk about DSCP",
      "url": "https://github.com/quicwg/ops-drafts/issues/140",
      "state": "OPEN",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability"
      ],
      "body": "Discussion in closed PR #134 ",
      "createdAt": "2020-12-07T13:30:32Z",
      "updatedAt": "2020-12-07T13:43:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 141,
      "id": "MDU6SXNzdWU3NTg1MTM5MzI=",
      "title": "Double check security considerations sections",
      "url": "https://github.com/quicwg/ops-drafts/issues/141",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "-manageability",
        "final check"
      ],
      "body": "After removing normative language, it occurs to us that there might be other security considerations that we want to highlight from Transport and TLS in Manageability or (especially) Applicability.",
      "createdAt": "2020-12-07T13:37:08Z",
      "updatedAt": "2021-01-11T14:40:59Z",
      "closedAt": "2021-01-11T14:40:59Z",
      "comments": []
    },
    {
      "number": 142,
      "id": "MDU6SXNzdWU3NjA3NzkzNTI=",
      "title": "Integrity Protection is not quite right",
      "url": "https://github.com/quicwg/ops-drafts/issues/142",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "In manageability:\r\n\r\n\"Integrity Protection of the Wire Image {#wire-integrity}\r\nAs soon as the cryptographic context is established, all information in the QUIC header, including information exposed in the packet header, is integrity protected. Further, information that was sent and exposed in handshake packets sent before the cryptographic context was established are validated later during the cryptographic handshake. Therefore, devices on path cannot alter any information or bits in QUIC packet headers, since alteration of header information will lead to a failed integrity check at the receiver, and can even lead to connection termination.\"\r\n\r\nThis isn't precise. The Initial packet is not meaningfully integrity-protected, but the contents of the CRYPTO frame (and the connection IDs) are. An on-path attacker could, for instance, change the ClientHello's Packet Number to from '0' to '1' and then adjust the ACK frame from '1' to '0'. (Why would one do this?)",
      "createdAt": "2020-12-10T00:31:32Z",
      "updatedAt": "2020-12-21T10:33:15Z",
      "closedAt": "2020-12-21T10:33:15Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is the ACK frame in the case not encrypted...?",
          "createdAt": "2020-12-10T11:35:50Z",
          "updatedAt": "2020-12-10T11:35:50Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The Initial is decryptable by anyone, and so could be rewritten.",
          "createdAt": "2020-12-10T16:00:19Z",
          "updatedAt": "2020-12-10T16:00:19Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay. What do we want to write here now?",
          "createdAt": "2020-12-17T17:48:16Z",
          "updatedAt": "2020-12-17T18:27:45Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "how about \"...cannot alter any information or bits in QUIC packet headers, since alteration...\" changing to:\r\n\r\n\"...cannot alter any information or bits in QUIC packet headers, except specific parts of Initial packets, since alteration...\"",
          "createdAt": "2020-12-17T19:38:44Z",
          "updatedAt": "2020-12-17T19:38:44Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "WFM. I can change that as soon as your PR landed (or you add it to your PR).",
          "createdAt": "2020-12-18T09:14:31Z",
          "updatedAt": "2020-12-18T09:14:31Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "MDU6SXNzdWU3NjA3ODA2NDI=",
      "title": "Do clients really use zero-length CIDs?",
      "url": "https://github.com/quicwg/ops-drafts/issues/143",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"Connection ID and rebinding\"\r\n\"typically, however, only the server will request a connection ID for the lifetime of the connection.\"\r\n\r\nWhile I totally accept that this would be reasonable in the real world, is this remotely true about existing client implementations? I admit to not checking recently, but I suspect client CIDs are predominant.\r\n",
      "createdAt": "2020-12-10T00:34:36Z",
      "updatedAt": "2020-12-10T15:58:10Z",
      "closedAt": "2020-12-10T15:58:10Z",
      "comments": [
        {
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "body": "For what it's worth, MsQuic uses zero-length CIDs on the client by default. Only when explicitly sharing the local UDP port does it use CIDs to differentiate between the different connections.",
          "createdAt": "2020-12-10T01:37:37Z",
          "updatedAt": "2020-12-10T01:37:37Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "We plan to use zero-length connection IDs.  At least initially.  There are use cases where we would want to use a different strategy.",
          "createdAt": "2020-12-10T03:00:29Z",
          "updatedAt": "2020-12-10T03:00:29Z"
        },
        {
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Chrome/Cronet also use zero-length CIDs and have for years.  I don't see any motivation to change this anytime soon in those clients.",
          "createdAt": "2020-12-10T12:55:23Z",
          "updatedAt": "2020-12-10T12:55:23Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed, as I am obviously misinformed as to what clients are doing.",
          "createdAt": "2020-12-10T15:58:10Z",
          "updatedAt": "2020-12-10T15:58:10Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "MDU6SXNzdWU3NjA3ODI5MjI=",
      "title": "Does the length self-encoding scheme actually work?",
      "url": "https://github.com/quicwg/ops-drafts/issues/144",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-manageability",
        "editor-ready"
      ],
      "body": "In \"Connection ID and Rebinding\":\r\n\r\n\"Even when encrypted, a scheme could embed the unencrypted length of the Connection ID in the Connection ID itself, instead of remembering it, e.g. by using the first few bits to indicate a certain size of a well-known set of possible sizes with multiple values that indicate the same size but are selected randomly.\"\r\n\r\nI almost went and filed an issue against quic-lb to do this instead of just encoding a plaintext length like it does currently. But is this a good recommended practice? ISTM that long headers would provide a bit of a Rosetta Stone for this mapping, making it not particularly effective for the complexity.\r\n\r\n",
      "createdAt": "2020-12-10T00:40:10Z",
      "updatedAt": "2020-12-21T10:33:26Z",
      "closedAt": "2020-12-21T10:33:26Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The idea was not to conceal the length but to avoid likability by identifying linked connection based on the existence of a certain length field. This might look slightly more random but I guess you also have to change your mapping more time to time. So not sure. I'm fine to remove that half sentence and maybe add a sentence about likability instead...?",
          "createdAt": "2020-12-17T17:45:40Z",
          "updatedAt": "2020-12-17T17:45:40Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, I would prefer deleting the quoted text, as I think it's a solution that adds complexity for little apparent benefit.",
          "createdAt": "2020-12-17T19:22:39Z",
          "updatedAt": "2020-12-17T19:22:39Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay, will do that change after your PR has landed.",
          "createdAt": "2020-12-18T09:13:31Z",
          "updatedAt": "2020-12-18T09:13:31Z"
        }
      ]
    },
    {
      "number": 145,
      "id": "MDU6SXNzdWU3NjA3ODcxNjc=",
      "title": "Ask people not to drop new versions?",
      "url": "https://github.com/quicwg/ops-drafts/issues/145",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [],
      "body": "The VN section suggests that observers not use the version number to detect QUIC.\r\n\r\nWould it be futile to ask them to admit QUIC versions they don't recognize rather than drop them?",
      "createdAt": "2020-12-10T00:49:51Z",
      "updatedAt": "2020-12-22T11:22:37Z",
      "closedAt": "2020-12-22T11:22:37Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Probably.",
          "createdAt": "2020-12-10T02:58:14Z",
          "updatedAt": "2020-12-10T02:58:14Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Not sure. Depends on the function you implement. I guess there could be security functions that decide to only allow certain versions... not sure if that is justified but I don't think we can stop it.",
          "createdAt": "2020-12-10T11:30:25Z",
          "updatedAt": "2020-12-10T11:30:25Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Any further opinions here?",
          "createdAt": "2020-12-17T17:37:50Z",
          "updatedAt": "2020-12-17T17:37:50Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We can stop it with greasing,  I guess. IMO the draft should specify best practices that don't break extensibility and if people don't follow it it's on them. That's the approach I took in QUIC-LB.",
          "createdAt": "2020-12-17T17:41:50Z",
          "updatedAt": "2020-12-17T17:41:50Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The best practice is to not block any unknown traffic as blocking hinders evolution. However, I guess there might be security reasons why some will not do that. I guess allowing for certain versions of QUIC is better than blocking UDP entirely...? ",
          "createdAt": "2020-12-17T18:24:38Z",
          "updatedAt": "2020-12-17T18:24:38Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1... I don't think that putting text in this document saying \"don't wholesale block versions of QUIC you don't understand\" will actually change the behavior of the boxes that will ship this behavior, since drop-unknown is taken as a security best practice. But I still think it's worth putting that advice in the document nonetheless, if only to have \"I told you so\" in an RFC.\r\n\r\n(I do still tend to think that we'll see only two behaviors emerge in the wild: (1) permit anything with a QUIC wire image since there's not much to grab on to there (and rely on the LB implementation to eat DoS hiding behind that wire image) and (2) block anything that smells like QUIC (because it is easy to implement in the default case and it forces fallback to TCP, which already has lots of running security monitoring code).)",
          "createdAt": "2020-12-21T08:57:22Z",
          "updatedAt": "2020-12-21T08:57:22Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "will work up a PR for us to discuss",
          "createdAt": "2020-12-21T10:27:20Z",
          "updatedAt": "2020-12-21T10:27:20Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "MDU6SXNzdWU3NjA3OTgwNTg=",
      "title": "Add Considerations for NAT",
      "url": "https://github.com/quicwg/ops-drafts/issues/146",
      "state": "OPEN",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [],
      "body": "Per feedback at IETF 109, Martin will take his quic-natsupp draft and put it somewhere in quic-manageability.",
      "createdAt": "2020-12-10T01:17:11Z",
      "updatedAt": "2020-12-10T11:28:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks!",
          "createdAt": "2020-12-10T11:28:58Z",
          "updatedAt": "2020-12-10T11:28:58Z"
        }
      ]
    },
    {
      "number": 147,
      "id": "MDU6SXNzdWU3NjA4MDM1Mjk=",
      "title": "DDoS guidance is inaccurate about QUIC-LB",
      "url": "https://github.com/quicwg/ops-drafts/issues/147",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "britram"
      ],
      "labels": [
        "-manageability"
      ],
      "body": "\"QUIC's linkability resistance ensures that a deliberate connection migration is accompanied by a change in the connection ID and necessitate that connection ID aware DDoS defense system must have the same information about connection IDs as the load balancer {{?I-D.ietf-quic-load-balancers}}. This may be complicated where mitigation and load balancing environments are logically separate.\"\r\n\r\nThis is insufficient. Even the load balancer is only able to identify the end server, not the connection.",
      "createdAt": "2020-12-10T01:31:06Z",
      "updatedAt": "2020-12-22T11:23:22Z",
      "closedAt": "2020-12-22T11:23:22Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On a related note, the suggestion to use the \"first 8 bytes\" of a server's connection ID is somewhat strange. Why not observe the CIDL it's using in long headers, or just have common configuration?",
          "createdAt": "2020-12-10T01:32:36Z",
          "updatedAt": "2020-12-10T01:32:36Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "How about if we just remove any wording about load balancers here? Like this maybe:\r\n\r\n```\r\nQUIC's linkability resistance ensures that a deliberate connection migration is accompanied by a change in the connection ID and necessitate that DDoS defense system are connection ID aware.\r\n```",
          "createdAt": "2020-12-17T17:35:08Z",
          "updatedAt": "2020-12-17T17:35:08Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On the 8 bytes: I actually not sure where this comes from, however, I assume that the thinking was that using the first 8 bytes might be good enough to avoid collisions if you don't know the connection ID length. But I guess we can remove it or add some more explanation... any thoughts?",
          "createdAt": "2020-12-17T17:37:05Z",
          "updatedAt": "2020-12-17T17:37:05Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If you read the Retry Services section of QUIC-LB, you'll see that there is no dependence on the Connection ID encoding at all. It is a common format for Retry Tokens that allows servers to (at a minimum) extract the original CIDs necessary for verification.\r\n\r\nCertainly, no device should drop packets simply because the CID has changed, which is maybe what you're trying to say here? But I'm not sure that this is a DDoS thing.",
          "createdAt": "2020-12-17T19:17:54Z",
          "updatedAt": "2020-12-17T19:17:54Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The point is when a DDoS attack is on-going you want to make sure that on-going connections keep running while new connections are handled more carefully. So you have to be flow aware. However, maybe it's acceptable if connectivity breaks during a DDoS when the 5 tuple changes...? Otherwise you would need to be CID aware.",
          "createdAt": "2020-12-18T09:12:35Z",
          "updatedAt": "2020-12-18T09:12:35Z"
        }
      ]
    },
    {
      "number": 148,
      "id": "MDU6SXNzdWU3NjA4MDQ0MzU=",
      "title": "Should DDoS section talk about Retry Services?",
      "url": "https://github.com/quicwg/ops-drafts/issues/148",
      "state": "OPEN",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "martinduke"
      ],
      "labels": [],
      "body": "I am not really sure at all that the existing DDoS guidance is good advice; we have a somewhat more robust plan in quic-lb, which perhaps we should reference?",
      "createdAt": "2020-12-10T01:33:30Z",
      "updatedAt": "2020-12-10T19:21:41Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "for that matter, the Retry packet does not make an appearance in this section at all, which seems like an oversight.",
          "createdAt": "2020-12-10T01:34:23Z",
          "updatedAt": "2020-12-10T01:34:23Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes to both. Can you provide an PR?",
          "createdAt": "2020-12-10T11:27:37Z",
          "updatedAt": "2020-12-10T11:27:37Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes, please assign this issue to me.",
          "createdAt": "2020-12-10T16:01:32Z",
          "updatedAt": "2020-12-10T16:01:32Z"
        }
      ]
    },
    {
      "number": 149,
      "id": "MDU6SXNzdWU3NjA4MDU3MzQ=",
      "title": "Delete QoS and ECMP",
      "url": "https://github.com/quicwg/ops-drafts/issues/149",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I do not feel comfortable at all that QoS treatment based on Connection ID, or ECMP within flows, is a good idea with no horrible implications for privacy and performance.",
      "createdAt": "2020-12-10T01:37:06Z",
      "updatedAt": "2020-12-10T15:59:16Z",
      "closedAt": "2020-12-10T15:59:16Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "we have issue #140 to rewrite this section. It's on my todo list. ",
          "createdAt": "2020-12-10T11:26:49Z",
          "updatedAt": "2020-12-10T11:26:49Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed as duplicate.",
          "createdAt": "2020-12-10T15:59:16Z",
          "updatedAt": "2020-12-10T15:59:16Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "MDU6SXNzdWU3NjE4MDI4NDQ=",
      "title": "Connection ID linkability is missing a premise",
      "url": "https://github.com/quicwg/ops-drafts/issues/151",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [
        "-applicability",
        "editor-ready"
      ],
      "body": "[Mitigating Timing Linkability with Connection ID Migration](https://quicwg.org/ops-drafts/draft-ietf-quic-applicability.html#name-mitigating-timing-linkabili) launches right into discussion of how linkability protections might be inadequate without really establishing what the requirements are or why they exist.  This needs an introduction paragraph. ",
      "createdAt": "2020-12-11T02:22:43Z",
      "updatedAt": "2020-12-21T10:52:11Z",
      "closedAt": "2020-12-21T10:52:11Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note sure how much more we want to say here or can say at this point in time....\r\n\r\n@martinthomson if you have a more concrete idea what we should say here, can you give it a try and propose a PR?",
          "createdAt": "2020-12-17T17:29:53Z",
          "updatedAt": "2020-12-17T17:29:53Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Something like:\r\n\r\n> QUIC requires that endpoints generate fresh connection IDs for use on new network paths.  Choosing values that are unlinkable to an outside observer ensures that activity on different paths cannot be trivially correlated using the connection ID.\r\n\r\nThen launch into the existing discussion.",
          "createdAt": "2020-12-18T02:25:15Z",
          "updatedAt": "2020-12-18T02:25:15Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sounds good to me. I can add that after you PR landed or you can add it to your PR.",
          "createdAt": "2020-12-18T09:16:15Z",
          "updatedAt": "2020-12-18T09:16:15Z"
        }
      ]
    },
    {
      "number": 152,
      "id": "MDU6SXNzdWU3NjE4MDM2NzY=",
      "title": "In prose, it is \"connection ID\"",
      "url": "https://github.com/quicwg/ops-drafts/issues/152",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [
        "mirjak"
      ],
      "labels": [],
      "body": "We've not been capitalizing this in the main spec; so nor should this document.  I've fixed those cases that I've touched in my upcoming PR, but it's going to need more work to clean up properly.",
      "createdAt": "2020-12-11T02:23:55Z",
      "updatedAt": "2021-01-06T07:57:40Z",
      "closedAt": "2021-01-06T07:57:40Z",
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yep, will do that after we merged the PRs. Thanks!",
          "createdAt": "2020-12-17T17:27:45Z",
          "updatedAt": "2020-12-17T17:27:45Z"
        }
      ]
    },
    {
      "number": 165,
      "id": "MDU6SXNzdWU3NzMwODY0NzE=",
      "title": "Transport parameter are not really listed in section 3",
      "url": "https://github.com/quicwg/ops-drafts/issues/165",
      "state": "OPEN",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "which is about \"Network-visible information about QUIC flows\". \r\n\r\nThey are mentioned once, based on a recent edit, but the text before that does not introduce them or explain what they are. Maybe we can add a few more sentences also making sure that even though they could be observed in the client initial, they cannot be changed nor observed form the server (to understand final negotiation/support).",
      "createdAt": "2020-12-22T16:40:11Z",
      "updatedAt": "2020-12-22T16:40:11Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2MjM2NTQ3",
      "title": "contributing/readme, rename drafts (-00 in progress), add missing commit on 0rtt",
      "url": "https://github.com/quicwg/ops-drafts/pull/1",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-06-19T07:10:52Z",
      "updatedAt": "2017-06-19T07:28:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cb4423b432fc110e4cd2b0365561e336f1511ddf",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "draft-rename-reorg",
      "headRefOid": "12fe83118b75719a05bb71ef8c58e2d1e579b04c",
      "closedAt": "2017-06-19T07:28:34Z",
      "mergedAt": "2017-06-19T07:28:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5d8aa7b0f15b955c8245f99d84f0738806748368"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2MjQwMzQ2",
      "title": "Fix README links",
      "url": "https://github.com/quicwg/ops-drafts/pull/2",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I wonder if this isn't a consequence of an editor configuration issue, maybe in @mnot's editor, because there was definitely no spaces in the script that generated this file.",
      "createdAt": "2017-06-19T07:38:44Z",
      "updatedAt": "2017-10-20T12:56:35Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5d8aa7b0f15b955c8245f99d84f0738806748368",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "fix_readme_links",
      "headRefOid": "2b2888a0c72f18b9b834e9e001c7f728427c1211",
      "closedAt": "2017-06-21T08:13:42Z",
      "mergedAt": "2017-06-21T08:13:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c0091865c64170353491d819af85264969f8b24d"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "this was my editor, my bad... need to hack vs code's reflow stuff to be nice to links.",
          "createdAt": "2017-06-21T08:14:12Z",
          "updatedAt": "2017-06-21T08:14:12Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI2NjcyNTM4",
      "title": "Cleanup",
      "url": "https://github.com/quicwg/ops-drafts/pull/4",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This brings the ops drafts into line with the base ones.  The configuration (circle.yml, Makefile, .editorconfig) is copied over.\r\n\r\nI removed trailing whitespace from the drafts and reflowed paragraphs.\r\n\r\nI changed the references so that they are a little cleaner.  Other than the reflow, I didn't touch the text, other than to change \"section\" to \"Section\" where I noticed some errors.",
      "createdAt": "2017-06-21T03:29:01Z",
      "updatedAt": "2017-06-21T08:14:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5d8aa7b0f15b955c8245f99d84f0738806748368",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "cleanup",
      "headRefOid": "5d07e1a68f86ececd7c4a65666aaff473d064550",
      "closedAt": "2017-06-21T08:14:21Z",
      "mergedAt": "2017-06-21T08:14:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6ddd33975d3e9cbbced93e72ba8fda1dcd22fe74"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks!",
          "createdAt": "2017-06-21T08:14:26Z",
          "updatedAt": "2017-06-21T08:14:26Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MTI4Mzg3MDky",
      "title": "Language for Zero RTT subsection in applicability",
      "url": "https://github.com/quicwg/ops-drafts/pull/7",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "@janaiyengar -- you mentioned wanting to have a more balanced view of zero RTT in the applicability draft: is this something like what you had in mind?",
      "createdAt": "2017-06-30T14:51:16Z",
      "updatedAt": "2017-07-03T08:21:44Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "96fffa33720ce62f1b4a2129f4bedef48dd5a01a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "thinking-in-0rtt",
      "headRefOid": "1c3e69de1abe4aa56b23ff26a3847736c7f7f352",
      "closedAt": "2017-07-03T08:21:44Z",
      "mergedAt": "2017-07-03T08:21:44Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "fcb1a06e4f4dcf39653f23c27430d8387f9b2e95"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll go ahead and merge this to have one less editor's note in the ietf-00 submission; file an issue if this doesn't address the \"thinking in 0rtt\" point adequately.\r\n\r\nCloses #5.",
          "createdAt": "2017-07-03T08:17:29Z",
          "updatedAt": "2017-07-03T08:17:29Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzYyNjQy",
      "title": "Draft reorg: add section on network-visible information",
      "url": "https://github.com/quicwg/ops-drafts/pull/16",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T10:01:25Z",
      "updatedAt": "2017-10-20T12:31:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4feffd045bc2f424ae108029a7dba3f5b8a0f8cb",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "observables",
      "headRefOid": "a82f6ffba3d67f942fbf15dc3a693c7a43bd322f",
      "closedAt": "2017-10-20T12:31:45Z",
      "mergedAt": "2017-10-20T12:31:45Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "2d3f3317f562299b2439fb0b285e557604917cda"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA4MjYxMTQ=",
          "commit": {
            "abbreviatedOid": "a82f6ff"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-10-20T12:28:37Z",
          "updatedAt": "2017-10-20T12:28:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzYzODg0",
      "title": "reflow applicability draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/17",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T10:07:15Z",
      "updatedAt": "2017-10-20T10:16:53Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4feffd045bc2f424ae108029a7dba3f5b8a0f8cb",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "app-linting-00",
      "headRefOid": "cf2e7e080d097ff5d43431a470116dff7e27781d",
      "closedAt": "2017-10-20T10:16:42Z",
      "mergedAt": "2017-10-20T10:16:42Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "11d88b4d0981843dd42355e5f4c0aa2656a61108"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzkxMjA2",
      "title": "Update of wire image to transport draft version 07",
      "url": "https://github.com/quicwg/ops-drafts/pull/18",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T12:44:41Z",
      "updatedAt": "2017-10-20T12:45:38Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2d3f3317f562299b2439fb0b285e557604917cda",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "update-of-wire-image-to-transport-draft-version-07-1",
      "headRefOid": "4c1a700c2f65327d0874634af6b7a62906c8b9ba",
      "closedAt": "2017-10-20T12:45:28Z",
      "mergedAt": "2017-10-20T12:45:28Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "0f539f6e8996fe40e7e72de097af712b8240c976"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ3NzkyODcx",
      "title": "Update authors of draft-ietf-quic-manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/19",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-10-20T12:53:13Z",
      "updatedAt": "2017-10-24T09:50:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "0f539f6e8996fe40e7e72de097af712b8240c976",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "authors-changed",
      "headRefOid": "a326273f138cd2893b41ac063ce6817793ba7d93",
      "closedAt": "2017-10-24T09:50:18Z",
      "mergedAt": "2017-10-24T09:50:18Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "a737531da4e0350a567c2a40ffca590ebac52ce9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MTQ4Nzg4NDA2",
      "title": "- Minor fixes around spell checks",
      "url": "https://github.com/quicwg/ops-drafts/pull/20",
      "state": "MERGED",
      "author": "hirenp",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "- Tried to make '4.  Use of Streams' a little more readable around\r\nexposing max allowed/used/open stream info to applications.\r\n\r\n(Not a native speaker but my best-effort after reading the draft.)",
      "createdAt": "2017-10-25T21:41:13Z",
      "updatedAt": "2017-11-02T06:10:27Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ef9c2bb761f96d8cbc7f23e20d070978da07baa4",
      "headRepository": "hirenp/ops-drafts",
      "headRefName": "draft-ietf-quic-applicability-01",
      "headRefOid": "ba544596d17ba783ddba45573221619d7bbc2dbc",
      "closedAt": "2017-11-02T06:10:27Z",
      "mergedAt": "2017-11-02T06:10:27Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7f3b3f5dcf783557dbb28b08f578b357320e28f3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwMDcwMzQ4",
      "title": "add application identification section",
      "url": "https://github.com/quicwg/ops-drafts/pull/21",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-01T15:40:13Z",
      "updatedAt": "2017-11-03T10:08:20Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ef9c2bb761f96d8cbc7f23e20d070978da07baa4",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "handshake-is-clear",
      "headRefOid": "6f84cba1e10346865eaac085a0f9494bb4d0b350",
      "closedAt": "2017-11-03T10:08:20Z",
      "mergedAt": "2017-11-03T10:08:20Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "9059ce7b9b37b7d74bb73750ee22d2e78ab79fb1"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Re SNI and ALPN: we can certainly point at the work in progress in TLS that will encrypt this information, but IMO the document should describe the current state of the world.\r\n\r\nI've just added something pointing to the SNI encryption document; while it seems that the tunneling technique described there could pretty clearly be applied to ALPN fronting as well, is there a reference for encrypting ALPN we can use here that doesn't leave details as an exercise for the reader?",
          "createdAt": "2017-11-02T07:38:25Z",
          "updatedAt": "2017-11-02T07:52:52Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would actually prefer to describe the wire image of TLS and associated protocols in a separate document and just point to it because that's actually not only applicable for quic",
          "createdAt": "2017-11-02T09:21:00Z",
          "updatedAt": "2017-11-02T09:21:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I don't have a reference for encrypting ALPN.  We don't have one.  Maybe I should write one...  On the plus side, it's something that benefits from the same techniques as SNI (and less likely to cause deployment issues, though that is only because we haven't ossified around it as much).\r\n\r\nAs for the general point about now vs. later.  One of the things we've tried to do is be very clear about what the invariants are, or what promises we are making.  It's not the same thing as true ossification defense, but if we make it clear what we are committing to, maybe we won't have people relying on stuff we might want to change.",
          "createdAt": "2017-11-02T22:38:47Z",
          "updatedAt": "2017-11-02T22:38:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2MDIwOTU=",
          "commit": {
            "abbreviatedOid": "6a72b5a"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I'm a little reluctant to say that the SNI and ALPN are in the Initial packet.  The TLS working group is actively working on finding ways to avoid these being exposed.  This probably needs to be a little more nuanced.",
          "createdAt": "2017-11-01T20:08:14Z",
          "updatedAt": "2017-11-01T20:12:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "We just changed the name of these packets.  Sorry.",
              "createdAt": "2017-11-01T20:08:14Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            },
            {
              "originalPosition": 27,
              "body": "This isn't accurate.  The client list of ALPN options is in the clear, but the server choice from that list is not.",
              "createdAt": "2017-11-01T20:08:46Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM2OTI3MDM=",
          "commit": {
            "abbreviatedOid": "6a72b5a"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2017-11-02T06:15:30Z",
          "updatedAt": "2017-11-02T06:15:30Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "NP, was tracking -07. \r\n\r\nThe change also affects other bits of the document, which I'll address in a separate PR.",
              "createdAt": "2017-11-02T06:15:30Z",
              "updatedAt": "2017-11-02T07:47:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM5ODA2NjU=",
          "commit": {
            "abbreviatedOid": "6f84cba"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2017-11-03T00:58:15Z",
          "updatedAt": "2017-11-03T00:58:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MTUwMjIxNzAz",
      "title": "Change packet names to track post -07",
      "url": "https://github.com/quicwg/ops-drafts/pull/22",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2017-11-02T07:36:00Z",
      "updatedAt": "2017-11-03T10:07:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "7f3b3f5dcf783557dbb28b08f578b357320e28f3",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "there-can-be-only-one-initial",
      "headRefOid": "6cb5b77efd6cdbf95c31ed3c2175f71956e4b9b0",
      "closedAt": "2017-11-03T10:07:45Z",
      "mergedAt": "2017-11-03T10:07:45Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "49171c4fae881171b9221ea13afd2399d862dd4e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 24,
      "id": "MDExOlB1bGxSZXF1ZXN0MTYxOTAxOTIx",
      "title": "Use of the Latency Spin Bit",
      "url": "https://github.com/quicwg/ops-drafts/pull/24",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR takes text from [draft-trammell-quic-spin](https://tools.ietf.org/html/draft-trammell-quic-spin) to explain the on-path use of the latency spin bit. It is the manageability draft companion of the new [latency spin bit PR](https://github.com/quicwg/base-drafts/pull/1046).",
      "createdAt": "2018-01-09T15:33:05Z",
      "updatedAt": "2018-07-03T07:34:33Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "9059ce7b9b37b7d74bb73750ee22d2e78ab79fb1",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "spin-bit-2018-edition",
      "headRefOid": "fbc84902329824c9fb8086eb8c30f7180d1e8e73",
      "closedAt": "2018-07-02T10:19:34Z",
      "mergedAt": "2018-07-02T10:19:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5158113364b61d5213c368a7f9fb839fdd9c2f6e"
      },
      "comments": [
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "I don't think we want to merge this until we have consensus that the spin bit itself is merged?",
          "createdAt": "2018-07-02T10:22:37Z",
          "updatedAt": "2018-07-02T10:22:37Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@larseggert: fbc8490 changes this to point to the experiment (quic-spin-exp), not to the protocol, and to be clear that it's an experiment. It also pretends the VEC doesn't exist, since quic-spin-exp does so as well.\r\n\r\nIf the experiment merges into the protocol, then we update this draft to point to it; if not, then the text changes in a subsequent draft to omit in-flow RTT.",
          "createdAt": "2018-07-02T11:22:30Z",
          "updatedAt": "2018-07-02T11:25:03Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "To further clarify, the draft was mentioning that there is a discussion about the spin bit before. This PR mainly only now points to the respective draft. I think it is far to have this pointer in there for now.",
          "createdAt": "2018-07-02T11:35:31Z",
          "updatedAt": "2018-07-02T11:35:31Z"
        },
        {
          "author": "larseggert",
          "authorAssociation": "MEMBER",
          "body": "Well, as long as you are prepared to possibly remove this, fine",
          "createdAt": "2018-07-02T15:14:06Z",
          "updatedAt": "2018-07-02T15:14:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The nice thing about Internet-Drafts is that they are endlessly mutable. :)",
          "createdAt": "2018-07-03T07:34:33Z",
          "updatedAt": "2018-07-03T07:34:33Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNTYwNDQz",
          "commit": {
            "abbreviatedOid": "fbc8490"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-07-02T09:52:15Z",
          "updatedAt": "2018-07-02T09:52:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4NjMyOTg2",
      "title": "packet number and CID changes",
      "url": "https://github.com/quicwg/ops-drafts/pull/32",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T10:14:53Z",
      "updatedAt": "2018-07-02T14:10:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "afabc1373d52c00fc0e679290ef21b089edb0ecd",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "header-13",
      "headRefOid": "93c02b1ed6f1fafe59d8fc194763c8d9d0e69a19",
      "closedAt": "2018-07-02T14:10:54Z",
      "mergedAt": "2018-07-02T14:10:54Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "48d3ee29d66b9c978e3fefcc450a38d60717d5fc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNTcwMDA3",
          "commit": {
            "abbreviatedOid": "8a62f52"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-07-02T10:19:40Z",
          "updatedAt": "2018-07-02T10:29:09Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "s/from version/from version to version/",
              "createdAt": "2018-07-02T10:19:40Z",
              "updatedAt": "2018-07-02T14:10:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk4NjM5NjM1",
      "title": "remove pmtu heading, close #8",
      "url": "https://github.com/quicwg/ops-drafts/pull/33",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-02T10:41:36Z",
      "updatedAt": "2018-07-02T10:53:32Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5158113364b61d5213c368a7f9fb839fdd9c2f6e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "icmp-and-pmtu-8-23",
      "headRefOid": "8e8feb3c40c0234a3218dd1cf04e3c11dc825f05",
      "closedAt": "2018-07-02T10:53:27Z",
      "mergedAt": "2018-07-02T10:53:27Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "afabc1373d52c00fc0e679290ef21b089edb0ecd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAzMDEwNjYy",
      "title": "Clarity/grammar nits",
      "url": "https://github.com/quicwg/ops-drafts/pull/36",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A pass of clarity/grammar nits in applicability draft after reading through",
      "createdAt": "2018-07-21T13:53:46Z",
      "updatedAt": "2018-10-17T14:37:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "ea7f971b290bc78ffd3690d16398ea20c9988707",
      "headRepository": "tfpauly/ops-drafts",
      "headRefName": "tfp/nits",
      "headRefOid": "e8711853410a1074283548b25ed20935608c8a2c",
      "closedAt": "2018-10-17T14:37:51Z",
      "mergedAt": "2018-10-17T14:37:51Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjY2NDIz",
          "commit": {
            "abbreviatedOid": "e871185"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-17T14:37:26Z",
          "updatedAt": "2018-10-17T14:37:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjQ2MDE4",
      "title": "Text to section on keep-alives vs. resumption",
      "url": "https://github.com/quicwg/ops-drafts/pull/41",
      "state": "CLOSED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "address issue #6",
      "createdAt": "2018-10-17T15:17:00Z",
      "updatedAt": "2020-08-21T13:41:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "keep-alives",
      "headRefOid": "25497df34cc63f0e8fc6b18add9b36d46037427d",
      "closedAt": "2018-10-22T08:24:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T08:24:56Z",
          "updatedAt": "2018-10-22T08:24:56Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T08:51:39Z",
          "updatedAt": "2018-10-22T08:51:39Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:04:11Z",
          "updatedAt": "2018-10-22T09:04:11Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:04:51Z",
          "updatedAt": "2018-10-22T09:04:51Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "replaced by #50 ",
          "createdAt": "2018-10-22T09:08:05Z",
          "updatedAt": "2018-10-22T09:08:05Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjkwMDAz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T15:19:31Z",
          "updatedAt": "2018-10-17T15:19:32Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "s/time-out/time out/",
              "createdAt": "2018-10-17T15:19:31Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NjkwMjcz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T15:20:03Z",
          "updatedAt": "2018-10-17T15:20:03Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "s/re-connection/reconnect/",
              "createdAt": "2018-10-17T15:20:03Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1ODY4MTA2",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "The structure of the argument here is a bit stilted.\r\n\r\nYou want to start with the problem: UDP, middleboxes, short timers, connections become unusable.  Then, explain that QUIC provides PING, a mechanism that allows endpoints to test if a path is live and - where there are middleboxes with state that is refreshed by activity - keep any state in the path alive.\r\n\r\nThen you can say that this is extremely expensive if pinging is constant.  Mention bandwidth and also cost to battery-powered devices where maintaining an open radio channel is energy-intensive.\r\n\r\nNote then that it might be appropriate to limit use of keep-alives, but that will depend on application.  In HTTP, the recommendation is to only use them when there are outstanding requests.  At other times, allowing connections to time out or shutdown is preferable.  Then note that - with 0-RTT - the latency impact of opening a new connection is not that high.\r\n\r\nYou start and end with comments about keep-alives being application-specific.  That's not really the key point here.  You are simply trying to explain what the constraints are.  By making this your book-end statements, you shift a ton of emphasis onto the point, when it is really just a consequence of understanding the constraints you operate under.  Concentrate on documenting those constraints first and foremost, and then explain what options are available.",
          "createdAt": "2018-10-17T22:53:45Z",
          "updatedAt": "2018-10-17T22:53:45Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MDE2NzMz",
          "commit": {
            "abbreviatedOid": "7aad275"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T10:02:44Z",
          "updatedAt": "2018-10-18T10:02:45Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nand simply reconnect for the next message exchange. Such an approach can\r\n```",
              "createdAt": "2018-10-18T10:02:45Z",
              "updatedAt": "2018-10-18T14:53:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjUxMDQy",
      "title": "removing/adding/changing section refs to other quic docs",
      "url": "https://github.com/quicwg/ops-drafts/pull/42",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also addresses #38",
      "createdAt": "2018-10-17T15:30:24Z",
      "updatedAt": "2018-10-18T14:39:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "section-refs",
      "headRefOid": "7ab7658a45256df4bf635d4bd067f602e40007f9",
      "closedAt": "2018-10-18T14:39:34Z",
      "mergedAt": "2018-10-18T14:39:34Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "17b19d61ed9646494862242b6cf7841915731265"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MDE3MjA5",
          "commit": {
            "abbreviatedOid": "4caa371"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2018-10-18T10:03:59Z",
          "updatedAt": "2018-10-18T10:03:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjY3NTYx",
      "title": "New Section on Port Selection",
      "url": "https://github.com/quicwg/ops-drafts/pull/43",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "hopefully addresses issue #26",
      "createdAt": "2018-10-17T16:15:24Z",
      "updatedAt": "2020-08-21T13:41:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "port-selection",
      "headRefOid": "bb253d23d77716649dbb7c00ab2fdd87b6d19cfc",
      "closedAt": "2018-10-22T14:41:19Z",
      "mergedAt": "2018-10-22T14:41:19Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "0d240836e0afe9166864051c2bea107cb0e43b5f"
      },
      "comments": [
        {
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "body": "I don't think \"the same port number as would be used for the same application over TCP\" is necessary general-purpose guidance.  I would argue for something more like:\r\n\r\n> As QUIC is a general purpose transport protocol, there is no requirement that servers use a particular UDP port for all QUIC traffic.  Instead, applications which use QUIC can specify a port number to represent the combination of that application protocol and the QUIC transport, if desired.  Using the same port number that the application uses over TCP can be a useful mnemonic in some cases.",
          "createdAt": "2018-10-17T16:57:25Z",
          "updatedAt": "2018-10-17T17:01:16Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTg4MjMy",
          "commit": {
            "abbreviatedOid": "a4b4b02"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T16:35:09Z",
          "updatedAt": "2018-10-18T16:39:38Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I'd put a sentence break after \"...in general.  Instead, the same port number is used as....\"",
              "createdAt": "2018-10-18T16:35:09Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 16,
              "body": "\"In **the** case\"",
              "createdAt": "2018-10-18T16:35:27Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 17,
              "body": "\"is used**,** which has already been register**ed**....\"",
              "createdAt": "2018-10-18T16:36:13Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 20,
              "body": "\"announce ~~of~~ a\"",
              "createdAt": "2018-10-18T16:36:31Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 22,
              "body": "\"In general**,**\"",
              "createdAt": "2018-10-18T16:36:50Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 28,
              "body": "\"...less true today due to encapsulation, mechanism**s** for **dynamic** port assignments, and NATs.\"",
              "createdAt": "2018-10-18T16:37:35Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 30,
              "body": "non~~e~~**-**standard\r\n\"used which\"",
              "createdAt": "2018-10-18T16:39:23Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTQ5Nzc3",
          "commit": {
            "abbreviatedOid": "3b84977"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm, minor edits",
          "createdAt": "2018-10-19T14:28:10Z",
          "updatedAt": "2018-10-19T14:29:25Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "typofix:\r\n\r\n```suggestion\r\nHowever, whenever a non-standard port is used which does not enable simple\r\n```",
              "createdAt": "2018-10-19T14:28:11Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 4,
              "body": "no longer necessary, RFC references can happen inline:\r\n```suggestion\r\n```",
              "createdAt": "2018-10-19T14:28:46Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            },
            {
              "originalPosition": 25,
              "body": "make this explicitly informative:\r\n```suggestion\r\nprotocol and associated service to which processes connect\" {{?RFC6335}}.\r\n```",
              "createdAt": "2018-10-19T14:29:11Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTE4MzY0",
          "commit": {
            "abbreviatedOid": "6bef3c7"
          },
          "author": "dtikhonov",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T13:04:37Z",
          "updatedAt": "2018-10-22T13:04:37Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Two sentences in a row begin with \"however.\"",
              "createdAt": "2018-10-22T13:04:37Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTMxMzgw",
          "commit": {
            "abbreviatedOid": "6bef3c7"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T13:44:13Z",
          "updatedAt": "2018-10-22T13:44:13Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "With QUIC, multiple different application layers can easily be multiplexed on the same port, by ALPN. For instance, all the different services on a single server could be run over UDP 443. Should this be called out in this section?",
              "createdAt": "2018-10-22T13:44:13Z",
              "updatedAt": "2018-10-22T13:55:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTUwMDg0",
          "commit": {
            "abbreviatedOid": "bb253d2"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T14:38:26Z",
          "updatedAt": "2018-10-22T14:38:26Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I think this is a related point -- is there anything we should say in general about ALPN in this document? Probably. Prefer to file a new issue and land this one now, though...",
              "createdAt": "2018-10-22T14:38:26Z",
              "updatedAt": "2018-10-22T14:38:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzNjczMTM3",
      "title": "Section on use of ports",
      "url": "https://github.com/quicwg/ops-drafts/pull/44",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "also to address issue #26",
      "createdAt": "2018-10-17T16:33:21Z",
      "updatedAt": "2018-10-19T13:21:46Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "89d3f71df11a9fa40ea15aa65971712c5e31ab14",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "manage-ports",
      "headRefOid": "065c3c3e00ddf75209cfdd2cee0cb1e0ece84237",
      "closedAt": "2018-10-19T13:21:41Z",
      "mergedAt": "2018-10-19T13:21:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NzM2NDUx",
          "commit": {
            "abbreviatedOid": "e6d91d2"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2018-10-17T16:57:48Z",
          "updatedAt": "2018-10-17T17:00:36Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I disagree; see comment on #43.",
              "createdAt": "2018-10-17T16:57:48Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 7,
              "body": "s/similar as today for/as with/",
              "createdAt": "2018-10-17T16:58:36Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 8,
              "body": "s/are/is/",
              "createdAt": "2018-10-17T16:58:51Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 10,
              "body": "or *that* ... belong*ing*",
              "createdAt": "2018-10-17T16:59:07Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 14,
              "body": "**h**as a",
              "createdAt": "2018-10-17T16:59:59Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 15,
              "body": "connection**s**",
              "createdAt": "2018-10-17T17:00:24Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY1NzQzNjcx",
          "commit": {
            "abbreviatedOid": "e6d91d2"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-17T17:15:34Z",
          "updatedAt": "2018-10-17T17:15:34Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "RFC3556 say \"IANA strives to assign only one assigned port number per service or application\" which implies that you use the same port for the same service even if a different transport is used. What is wrong about this sentence is that I talk about two/both services because it's the same service effectively",
              "createdAt": "2018-10-17T17:15:34Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTkwODk2",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-18T16:41:38Z",
          "updatedAt": "2018-10-18T16:43:27Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "\"information **is** encrypted\"",
              "createdAt": "2018-10-18T16:41:39Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 9,
              "body": "\"there **is** no guarantee\" or \"there are no guarantee**s**\"; \"specific application will use the\"",
              "createdAt": "2018-10-18T16:42:46Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            },
            {
              "originalPosition": 11,
              "body": "I'm not sure \"Respectively\" is the word you want here.  \"For example,\" perhaps?",
              "createdAt": "2018-10-18T16:43:17Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzMjY4",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:05:51Z",
          "updatedAt": "2018-10-19T13:05:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nTCP-based services, especially when application layer information is\r\n```",
              "createdAt": "2018-10-19T13:05:51Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzNDEw",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:06:11Z",
          "updatedAt": "2018-10-19T13:06:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nencrypted, there is no guarantee that a specific application will use the\r\n```",
              "createdAt": "2018-10-19T13:06:11Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTEzNjU0",
          "commit": {
            "abbreviatedOid": "f6b83c5"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:06:52Z",
          "updatedAt": "2018-10-19T13:06:52Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nrespective registered service. For example, {{QUIC-TRANSPORT}} specifies\r\n```",
              "createdAt": "2018-10-19T13:06:52Z",
              "updatedAt": "2018-10-19T13:21:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 45,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIzODk1MjQz",
      "title": "Timing and CID linkability",
      "url": "https://github.com/quicwg/ops-drafts/pull/45",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add a section about being careful with timing with respect to CID migration if you actually care about linkability.",
      "createdAt": "2018-10-18T10:01:24Z",
      "updatedAt": "2018-10-19T10:13:42Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d6365344c89b463819d6c4c2b49d9ef1a13faf66",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "timing-link-anonset-31",
      "headRefOid": "f41fbeffe6b1b16de3717c1f8c85f7852c77fe25",
      "closedAt": "2018-10-19T10:13:39Z",
      "mergedAt": "2018-10-19T10:13:39Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "8e5e6bc2bb7bcbc8bcb0777c423986f7d93a89d1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MTQ2NDU1",
          "commit": {
            "abbreviatedOid": "f768c51"
          },
          "author": "chris-wood",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-18T15:09:59Z",
          "updatedAt": "2018-10-18T15:10:03Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Perhaps: In practice, a finite set of flows will be undergoing migration within any one time window from the perspective of a given observation point in the network. A key insight here is that any migration must keep at least one endpoint address constant during the migration. This finite set...\r\n\r\nThe key insight here is that , a finite ",
              "createdAt": "2018-10-18T15:09:59Z",
              "updatedAt": "2018-10-19T10:05:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MjMzMzQ4",
      "title": "Illustration of the observable part of the QUIC handshake",
      "url": "https://github.com/quicwg/ops-drafts/pull/46",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability"
      ],
      "body": "fix #35 ",
      "createdAt": "2018-10-19T10:01:44Z",
      "updatedAt": "2018-10-20T22:54:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "17b19d61ed9646494862242b6cf7841915731265",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "illustrate-handshake-35",
      "headRefOid": "66d802d847782f0bf0e1dd274eb517fcb0daeb8e",
      "closedAt": "2018-10-19T13:07:31Z",
      "mergedAt": "2018-10-19T13:07:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "89d3f71df11a9fa40ea15aa65971712c5e31ab14"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NDYwODYy",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-19T10:15:57Z",
          "updatedAt": "2018-10-19T10:24:07Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "maybe add more sentence that the clear text handshake information can/should not be sent in the same quic packet as the encrypted stuff for security reason and therefore coalescing makes sense here (compared to just sending everything in one packet). ",
              "createdAt": "2018-10-19T10:15:58Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 19,
              "body": "remove the word 'sent'",
              "createdAt": "2018-10-19T10:17:21Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 21,
              "body": "Add \"the number of 0-RTT is limited by the initial congestion windows which is usually 10.\"...?",
              "createdAt": "2018-10-19T10:18:13Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 51,
              "body": "missing word, maybe 'regard'",
              "createdAt": "2018-10-19T10:19:17Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 53,
              "body": "maybe s/handshake/initial handshake exchange/ -> it just confusing because the packets are called Handshake",
              "createdAt": "2018-10-19T10:20:40Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            },
            {
              "originalPosition": 59,
              "body": "s/stream/context/",
              "createdAt": "2018-10-19T10:22:18Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTA3MjU4",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T12:49:50Z",
          "updatedAt": "2018-10-19T12:49:50Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nper-version constant; we therefore consider these as visible in our illustration. The\r\n```",
              "createdAt": "2018-10-19T12:49:50Z",
              "updatedAt": "2018-10-19T12:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTA3Mzkx",
          "commit": {
            "abbreviatedOid": "9e19345"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T12:50:15Z",
          "updatedAt": "2018-10-19T12:50:15Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nillustration, as shown in {{fig-handshake}}. As shown here, the client can\r\n```",
              "createdAt": "2018-10-19T12:50:15Z",
              "updatedAt": "2018-10-19T12:58:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTIxMDc2",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:25:14Z",
          "updatedAt": "2018-10-19T13:25:15Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Is this `(optional 0RTT completion)` referring to EOED? That was removed from the spec in draft 15. I believe this should be removed.",
              "createdAt": "2018-10-19T13:25:15Z",
              "updatedAt": "2018-10-19T13:25:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTIyMTUw",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:27:43Z",
          "updatedAt": "2018-10-19T13:27:43Z",
          "comments": [
            {
              "originalPosition": 181,
              "body": "Where the padding is placed is implementation specific. For instance, with WinQuic the last QUIC packet always gets the padding (the 0-RTT one in this case).",
              "createdAt": "2018-10-19T13:27:43Z",
              "updatedAt": "2018-10-19T13:27:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI0MzYy",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:32:55Z",
          "updatedAt": "2018-10-19T13:32:56Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "No, should probably just be \"optional 0RTT continuation\".",
              "createdAt": "2018-10-19T13:32:55Z",
              "updatedAt": "2018-10-19T13:32:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI0NTY1",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:33:21Z",
          "updatedAt": "2018-10-19T13:33:21Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Ah, yep. (It's still in section 6.5 of -15, which I used as a reference here). Will fix in a new PR.",
              "createdAt": "2018-10-19T13:33:21Z",
              "updatedAt": "2018-10-19T13:33:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI1MzM0",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:35:09Z",
          "updatedAt": "2018-10-19T13:35:10Z",
          "comments": [
            {
              "originalPosition": 181,
              "body": "hm, point. so there's a balance between completeness and usefulness of the illustration here (which is why I use \"Typical\" a lot). Will do a new PR to make it clear that the padding isn't always in the Initial domain.",
              "createdAt": "2018-10-19T13:35:09Z",
              "updatedAt": "2018-10-19T13:35:10Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NzY0Nzgy",
          "commit": {
            "abbreviatedOid": "66d802d"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "The problem with examples is that they might be typical, but they rarely capture the breadth of options well.  Maybe you should purposefully diverge from established practice in these to avoid certain illusions from being formed. For instance, put PADDING first. ",
          "createdAt": "2018-10-20T22:41:24Z",
          "updatedAt": "2018-10-20T22:54:28Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Datagams",
              "createdAt": "2018-10-20T22:41:24Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 33,
              "body": "Be consistent in your use of hyphens on these. QWIK uses hyphens.",
              "createdAt": "2018-10-20T22:42:36Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 79,
              "body": "This sets a dangerous pattern.  I am going to strongly recommend that people a. Put PADDING frames before CRYPTO, and b. Split CRYPTO frames.\r\n\r\nAlso there are multiple PADDING frames. ",
              "createdAt": "2018-10-20T22:46:48Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 86,
              "body": "Minimum",
              "createdAt": "2018-10-20T22:47:32Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 99,
              "body": " the ordering here is similarly problematic",
              "createdAt": "2018-10-20T22:48:40Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            },
            {
              "originalPosition": 206,
              "body": "s/even//",
              "createdAt": "2018-10-20T22:51:20Z",
              "updatedAt": "2018-10-20T22:54:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0Mjg5ODQx",
      "title": "move ConnID generation language to -applicability",
      "url": "https://github.com/quicwg/ops-drafts/pull/47",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability",
        "-manageability"
      ],
      "body": "-manageablility has guidelines on how to select ConnIDs at a server, which is really more an -applicability thing. This fixes that.",
      "createdAt": "2018-10-19T13:36:32Z",
      "updatedAt": "2018-10-19T13:51:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "move-cid-applicability",
      "headRefOid": "e4ad8dbcf261667dc9419a5d5ea1506e434b7175",
      "closedAt": "2018-10-19T13:51:37Z",
      "mergedAt": "2018-10-19T13:51:37Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "65b31e2208ede833eab4f747387a3c052ebff30a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI2NTMw",
          "commit": {
            "abbreviatedOid": "1038651"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:38:00Z",
          "updatedAt": "2018-10-19T13:38:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nServer-generated Connection IDs must not encode any information other than that\r\n```",
              "createdAt": "2018-10-19T13:38:00Z",
              "updatedAt": "2018-10-19T13:47:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI4NTI3",
          "commit": {
            "abbreviatedOid": "7fcee92"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "It does seem a bit weird that you start talking about Server-generated Connection IDs here and then immediately follow it with a new section called `Server-Generated Connection IDs`. Perhaps this entire section (`Information exposure and the Connection ID`) should be after the `Server-Generated Connection IDs`?",
          "createdAt": "2018-10-19T13:42:23Z",
          "updatedAt": "2018-10-19T13:42:23Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTI5NDQ3",
          "commit": {
            "abbreviatedOid": "7fcee92"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:44:31Z",
          "updatedAt": "2018-10-19T13:44:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Hey, wait... this entire blurb is already in the following section it looks like. Right?",
              "createdAt": "2018-10-19T13:44:32Z",
              "updatedAt": "2018-10-19T13:47:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTMwNzkw",
          "commit": {
            "abbreviatedOid": "e4ad8db"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-19T13:47:38Z",
          "updatedAt": "2018-10-19T13:47:39Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "oh, indeed. we already copied this over, but didn't remove it from -manageability.",
              "createdAt": "2018-10-19T13:47:39Z",
              "updatedAt": "2018-10-19T13:47:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 48,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MjkyNjUx",
      "title": "followup to #46 addressing @nibanks handshake comments",
      "url": "https://github.com/quicwg/ops-drafts/pull/48",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-19T13:45:45Z",
      "updatedAt": "2018-10-19T13:51:52Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d4fd96607ff30fea1a19f13b6d50161e1b81d607",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "handshake-fixes",
      "headRefOid": "ce59ee970c3dd044db7ab3bc66bcad09d7259b03",
      "closedAt": "2018-10-19T13:51:52Z",
      "mergedAt": "2018-10-19T13:51:52Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NTMwMzQ4",
          "commit": {
            "abbreviatedOid": "ce59ee9"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2018-10-19T13:46:36Z",
          "updatedAt": "2018-10-19T13:46:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MzEzMjE1",
      "title": "Remove irrelevant text from security considerations",
      "url": "https://github.com/quicwg/ops-drafts/pull/49",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-manageability",
        "editorial"
      ],
      "body": "The last two paragraphs of the security considerations section were for a (much earlier, probably pre-WG) version of the document. Now that -manageability is basically a wire image users' guide, they don't belong. So let's cut them.",
      "createdAt": "2018-10-19T14:49:44Z",
      "updatedAt": "2018-10-22T13:45:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "fix-seccon",
      "headRefOid": "6fe14bb275521941d8812268eb57afeadb5a38fa",
      "closedAt": "2018-10-22T13:45:10Z",
      "mergedAt": "2018-10-22T13:45:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "784f599c4dbd11c7a0b33da36762497e0c8d30d8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0MzIzNjgz",
      "title": "Keepalives versus 0RTT, remix",
      "url": "https://github.com/quicwg/ops-drafts/pull/50",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "-applicability"
      ],
      "body": "An alternate approach to #41, following from @martinthomson's comment thereon.",
      "createdAt": "2018-10-19T15:19:44Z",
      "updatedAt": "2018-10-22T21:48:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "alternate-keepalive",
      "headRefOid": "efa01ffd0bc53a7bb0b6464de1985ea1e91e43de",
      "closedAt": "2018-10-22T14:41:35Z",
      "mergedAt": "2018-10-22T14:41:35Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6a76919f999db4a61597cc104ea8b5f40d92263f"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the new text is now missing two points: \r\n1) It might make sense to send keep-alives if the application know that is there is new data coming, e.g. an outstating reply or a following request. I think this is what is recommended for http.\r\n2) as meantion in the transport draft we should probably say again that it must be clearly specified which party is performing the active ping-ing\r\n\r\nAlso the text basically \"just\" explains the situation but doesn't really make any recommendation. Do we maybe what to say more than that?",
          "createdAt": "2018-10-22T09:00:00Z",
          "updatedAt": "2018-10-22T09:00:00Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yay, unicorns mean that I can't see @mirjak's comments here, though they appeared in email.\r\n\r\nIn response to those, maybe it is OK to point to HTTP/QUIC's recommendations about keep-alives.  There, it recommends limiting use of PING for keep-alive to while a request is outstanding.",
          "createdAt": "2018-10-22T11:15:44Z",
          "updatedAt": "2018-10-22T11:15:44Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 51,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI0NTE5ODg2",
      "title": "Added text on generating CIDs.",
      "url": "https://github.com/quicwg/ops-drafts/pull/51",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Tries to resolve #12. I resisted the urge to reference the QUIC-LB draft, which isn't adopted.\r\n\r\nThe major substantive change is that I removed the prohibition on non-routing information in the CID. I'm happy to discuss this if people have object.",
      "createdAt": "2018-10-21T05:46:28Z",
      "updatedAt": "2018-11-17T06:02:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "3f9281d7e233abfc5afc4e6537ea3ec4ba7f719a",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-1",
      "headRefOid": "6d6eb1a201811ff634ede43d9e156f19b126938c",
      "closedAt": "2018-10-22T13:54:18Z",
      "mergedAt": "2018-10-22T13:54:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cf0292450f0d3c78d4dabda2dfcca99eb2c6f441"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "LGTM. will go ahead and land this, then fix up the lint issues.",
          "createdAt": "2018-10-22T13:54:03Z",
          "updatedAt": "2018-10-22T13:54:03Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@ianswett missed this during the inconsistency, will fix in working copy",
          "createdAt": "2018-10-23T06:32:06Z",
          "updatedAt": "2018-10-23T06:32:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(this is done)",
          "createdAt": "2018-10-23T13:16:02Z",
          "updatedAt": "2018-10-23T13:16:02Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "BTW, this was meant to address #29 ",
          "createdAt": "2018-11-17T06:02:03Z",
          "updatedAt": "2018-11-17T06:02:03Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2ODExMDE3",
          "commit": {
            "abbreviatedOid": "6d6eb1a"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2018-10-22T00:58:51Z",
          "updatedAt": "2018-10-22T15:58:28Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "nit: propose a -> change the \r\n\r\nAlso, there's an extra space after 'to'",
              "createdAt": "2018-10-22T15:58:27Z",
              "updatedAt": "2018-10-22T15:58:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI1OTUwNjA2",
      "title": "Upgrade and rollback processes",
      "url": "https://github.com/quicwg/ops-drafts/pull/52",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "@kazuho should probably double-check my work here.\r\n\r\nThis assumes that we take the compatible version upgrade stuff, but if we don't, there's only one sentence to remove.  I've tried to keep it abstract enough that the details won't matter.\r\n\r\nCloses #28.\r\n\r\n",
      "createdAt": "2018-10-26T01:25:56Z",
      "updatedAt": "2018-10-31T09:36:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8488b32e895195f989280eb565a4de19debd2b4a",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "version-rollout",
      "headRefOid": "9632d31b23f39cc2b5bf6d82706d32e41c2107a3",
      "closedAt": "2018-10-31T09:36:06Z",
      "mergedAt": "2018-10-31T09:36:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "98cbd7f5536cb31874dfc6557c87915c3129c719"
      },
      "comments": [
        {
          "author": "kazuho",
          "authorAssociation": "MEMBER",
          "body": "LGTM. Thank you for writing it down!",
          "createdAt": "2018-10-26T01:48:49Z",
          "updatedAt": "2018-10-26T01:48:49Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY4OTgwNDQ2",
          "commit": {
            "abbreviatedOid": "9632d31"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2018-10-26T20:04:45Z",
          "updatedAt": "2018-10-26T20:04:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0MjI3MTI1MjUw",
      "title": "Flow control deadlocks",
      "url": "https://github.com/quicwg/ops-drafts/pull/53",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This provides some advice about flow control and how it might produce\r\ndeadlocks.  This was originally quicwg/base-drafts#1927.",
      "createdAt": "2018-10-31T00:41:26Z",
      "updatedAt": "2018-11-06T07:52:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8488b32e895195f989280eb565a4de19debd2b4a",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "flow-control-deadlocks",
      "headRefOid": "178c8cce71d4f3ffeb1a0ffee2de1ca8cf02cfc5",
      "closedAt": "2018-11-06T07:52:04Z",
      "mergedAt": "2018-11-06T07:52:04Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "eb677854c1c22ef20ddd757bd93d7782e6943a84"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcwMDYwNjk5",
          "commit": {
            "abbreviatedOid": "7c3af0e"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "nits.",
          "createdAt": "2018-10-31T01:07:06Z",
          "updatedAt": "2018-10-31T01:08:20Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nwhich it depends.  A deadlock can occur if the first stream is left unread,\r\n```",
              "createdAt": "2018-10-31T01:07:06Z",
              "updatedAt": "2018-10-31T23:04:20Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nsender should ensure that dependent data is not sent until the data\r\n```",
              "createdAt": "2018-10-31T01:08:00Z",
              "updatedAt": "2018-10-31T23:04:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcwMTYwMDAx",
          "commit": {
            "abbreviatedOid": "7c3af0e"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm modulo @janaiyengar's nits",
          "createdAt": "2018-10-31T09:37:31Z",
          "updatedAt": "2018-10-31T09:37:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "MDExOlB1bGxSZXF1ZXN0MjMwNzI3Njc0",
      "title": "For privacy concerns, the spin bit may be disabled in specific use cases.",
      "url": "https://github.com/quicwg/ops-drafts/pull/55",
      "state": "CLOSED",
      "author": "loganaden",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-11-14T06:46:57Z",
      "updatedAt": "2019-04-17T13:38:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "cyberstormdotmu/ops-drafts",
      "headRefName": "master",
      "headRefOid": "cec507ba3c4c9058a160951e3e969fe1c24404d1",
      "closedAt": "2019-04-17T13:38:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "ping",
          "createdAt": "2018-12-20T04:12:06Z",
          "updatedAt": "2018-12-20T04:12:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "pong, back from leave, looking at these drafts this week...",
          "createdAt": "2019-01-09T09:47:41Z",
          "updatedAt": "2019-01-09T09:47:41Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The document definitely needs to be updated to reflect this decision from BKK (see #58), but I think the reasons here are more comprehensive than just proxies.",
          "createdAt": "2019-01-09T10:19:18Z",
          "updatedAt": "2019-01-09T10:19:18Z"
        },
        {
          "author": "loganaden",
          "authorAssociation": "NONE",
          "body": "Thank you for your feedback. I will update the proposed patch.",
          "createdAt": "2019-01-09T10:30:49Z",
          "updatedAt": "2019-01-09T10:30:49Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "AFAICT this has been overtaken by changes to the spin bit text in -transport as well as by #66 ",
          "createdAt": "2019-04-17T13:38:57Z",
          "updatedAt": "2019-04-17T13:38:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQzMzQzOTQ3",
      "title": "update to recent header changes and quic-transport restructure",
      "url": "https://github.com/quicwg/ops-drafts/pull/59",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #57.",
      "createdAt": "2019-01-09T14:02:38Z",
      "updatedAt": "2019-01-24T09:11:15Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "header-updates-57",
      "headRefOid": "9ce2058a694cbcf7da67895abff09592b3693d77",
      "closedAt": "2019-01-24T09:11:15Z",
      "mergedAt": "2019-01-24T09:11:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "865a567eba77947a9ca799d2e63832ca320e69be"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwOTY2NjQy",
          "commit": {
            "abbreviatedOid": "5ac3e3e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-09T22:19:21Z",
          "updatedAt": "2019-01-09T22:22:22Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Is this style of statement something you want to keep?  You could just say:\r\n\r\n> The following information is exposed is QUIC packet headers:\r\n\r\nAnd allow for the possibility of some skew.  That seems increasingly unlikely now though.",
              "createdAt": "2019-01-09T22:19:21Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 25,
              "body": "list construction isn't parallel here",
              "createdAt": "2019-01-09T22:19:45Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 50,
              "body": "add the token field (with accompanying length) from the Initial packet",
              "createdAt": "2019-01-09T22:20:49Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            },
            {
              "originalPosition": 70,
              "body": "Separately observe that Retry and Version Negotiation packets are not encrypted or obfuscated in any way.",
              "createdAt": "2019-01-09T22:21:11Z",
              "updatedAt": "2019-01-14T15:07:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4Mjky",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:14Z",
          "updatedAt": "2019-01-14T15:11:14Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "done, ignoring skew possibility...",
              "createdAt": "2019-01-14T15:11:14Z",
              "updatedAt": "2019-01-14T15:11:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NDUw",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:29Z",
          "updatedAt": "2019-01-14T15:11:29Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "yeah that annoyed me as i typed it. fixed.",
              "createdAt": "2019-01-14T15:11:29Z",
              "updatedAt": "2019-01-14T15:11:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NTM3",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:37Z",
          "updatedAt": "2019-01-14T15:11:37Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "done.",
              "createdAt": "2019-01-14T15:11:37Z",
              "updatedAt": "2019-01-14T15:11:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkyMTk4NjI0",
          "commit": {
            "abbreviatedOid": "9ce2058"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-01-14T15:11:45Z",
          "updatedAt": "2019-01-14T15:11:45Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "also done",
              "createdAt": "2019-01-14T15:11:45Z",
              "updatedAt": "2019-01-14T15:11:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0MjQ0NDc3MDU3",
      "title": "upgrade to circleci 2.0 from template",
      "url": "https://github.com/quicwg/ops-drafts/pull/60",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-01-14T15:09:30Z",
      "updatedAt": "2019-01-14T15:10:32Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "eb677854c1c22ef20ddd757bd93d7782e6943a84",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "circleci-2",
      "headRefOid": "34a26ca0f2123641bb1cdd156efcc6d92b666eb9",
      "closedAt": "2019-01-14T15:10:32Z",
      "mergedAt": "2019-01-14T15:10:32Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "349dd9060409c73378250eb4fb63ad18aa96a455"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 64,
      "id": "MDExOlB1bGxSZXF1ZXN0MjY3Njg3NzE1",
      "title": "Explain how QUIC simplifies troubleshooting",
      "url": "https://github.com/quicwg/ops-drafts/pull/64",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Address #63.",
      "createdAt": "2019-04-05T04:38:13Z",
      "updatedAt": "2019-04-17T11:43:28Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "865a567eba77947a9ca799d2e63832ca320e69be",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "patch-2",
      "headRefOid": "3b3e6c7d2e8a20b408b0d696b0a5fa9307b43203",
      "closedAt": "2019-04-17T11:43:28Z",
      "mergedAt": "2019-04-17T11:43:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "358d090efed011258cdeada966862bafac2cef77"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI0MDQwNDA2",
          "commit": {
            "abbreviatedOid": "3b3e6c7"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "One nit, but LGTM. The nit is to avoid ambiguity that might arise from \"transport\" -- one might read that QUIC integrity-protects UDP headers as well, since those are technically transport.",
          "createdAt": "2019-04-08T19:25:10Z",
          "updatedAt": "2019-04-08T19:26:58Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\ncan modify QUIC's transport layer information.\r\n```",
              "createdAt": "2019-04-08T19:25:10Z",
              "updatedAt": "2019-04-08T19:26:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzAxMzg1",
          "commit": {
            "abbreviatedOid": "3b3e6c7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM, will fix Jana's suggestion manually.",
          "createdAt": "2019-04-17T11:43:19Z",
          "updatedAt": "2019-04-17T11:43:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcxMjc1MzQw",
      "title": "Add note about small packets not being ACKs",
      "url": "https://github.com/quicwg/ops-drafts/pull/65",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "...addressing @janaiyengar's #61",
      "createdAt": "2019-04-17T11:57:38Z",
      "updatedAt": "2019-04-18T07:14:07Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "358d090efed011258cdeada966862bafac2cef77",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "small-packets-61",
      "headRefOid": "23851d6f40a3e4c758f71df2965b159a5df34e36",
      "closedAt": "2019-04-18T07:14:07Z",
      "mergedAt": "2019-04-18T07:14:07Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "0fbbdb7dd237eb849656f02907337e1f0ed87ffc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzI3ODA2",
          "commit": {
            "abbreviatedOid": "23851d6"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-04-17T12:43:32Z",
          "updatedAt": "2019-04-17T12:43:32Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3ODcxNzQw",
          "commit": {
            "abbreviatedOid": "23851d6"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for writing this up!",
          "createdAt": "2019-04-17T16:42:17Z",
          "updatedAt": "2019-04-17T16:42:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcxMjg0MDgw",
      "title": "Update and restructuring on spin bit text",
      "url": "https://github.com/quicwg/ops-drafts/pull/66",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Merge/update based on text from spin-exp draft + new subsections for spin based RTT measurement and initial RTT measurement + new text on disabled spin bit ",
      "createdAt": "2019-04-17T12:24:34Z",
      "updatedAt": "2020-08-21T13:41:56Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "358d090efed011258cdeada966862bafac2cef77",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "spin-bit-text",
      "headRefOid": "541accb8219cfffdee3287e8213aca4db8aba085",
      "closedAt": "2019-04-23T15:10:06Z",
      "mergedAt": "2019-04-23T15:10:06Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "cf4cbdb0b030a7a992a5614e89e4f9972e04b2ce"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Includes PR #55 and address #58 ",
          "createdAt": "2019-04-17T12:32:06Z",
          "updatedAt": "2019-04-17T12:32:06Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "merging, though this needs some 80col cleanup (will fix in subsequent commit)",
          "createdAt": "2019-04-23T15:10:00Z",
          "updatedAt": "2019-04-23T15:10:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3NzI3Nzgy",
          "commit": {
            "abbreviatedOid": "efe5ff4"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm, thanks!",
          "createdAt": "2019-04-17T12:43:29Z",
          "updatedAt": "2019-04-17T12:43:29Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI3ODcyOTY2",
          "commit": {
            "abbreviatedOid": "efe5ff4"
          },
          "author": "janaiyengar",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "drive by",
          "createdAt": "2019-04-17T16:44:41Z",
          "updatedAt": "2019-04-17T16:56:37Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nThe spin bit provides an additional method to measure per-flow RTT\r\n```",
              "createdAt": "2019-04-17T16:44:41Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 79,
              "body": "You may want to clarify what \"support\" means. How about:\r\n\"Supporting the spin bit is an optional feature in QUIC.  That is, while its location is fixed in this version of QUIC, an endpoint can unilaterally choose to not support \"spinning\" the bit.  Use of the spin bit for RTT measurement by devices on path is only possible when both endpoints enable it.\"",
              "createdAt": "2019-04-17T16:49:49Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nidentifiable based on the usage of the spin bit, it is recommended that all endpoints\r\n```",
              "createdAt": "2019-04-17T16:51:46Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\ndisable \"spinning\" randomly for at least one eighth of connections, even if\r\n```",
              "createdAt": "2019-04-17T16:52:27Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 88,
              "body": "This last sentence needs work.",
              "createdAt": "2019-04-17T16:52:58Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nand/or application layer delay (e.g., waiting for a response to be generated). It\r\n```",
              "createdAt": "2019-04-17T16:54:13Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\nSince the spin bit logic at each endpoint considers only samples from packets\r\n```",
              "createdAt": "2019-04-17T16:55:02Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\nthat advance the largest packet number, signal generation itself is\r\n```",
              "createdAt": "2019-04-17T16:55:12Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            },
            {
              "originalPosition": 115,
              "body": "```suggestion\r\nreordering occurs across a spin-bit flip in the stream.\r\n```",
              "createdAt": "2019-04-17T16:55:44Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMyMDAw",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:19:08Z",
          "updatedAt": "2019-04-18T07:19:08Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "maybe \"Endpoint participation in spin bit signaling is optional in QUIC.\" as the first sentence, but yep...",
              "createdAt": "2019-04-18T07:19:08Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMyNTYw",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:20:48Z",
          "updatedAt": "2019-04-18T07:20:49Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n{{QUIC-TRANSPORT}}, section 17.3.1.\r\n```\r\n(This is the present location in the editor's draft. Otherwise, we can omit the section reference.)",
              "createdAt": "2019-04-18T07:20:48Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTMzMTA0",
          "commit": {
            "abbreviatedOid": "93f0727"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T07:22:20Z",
          "updatedAt": "2019-04-18T07:22:20Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "how about \"An endpoint not participating in spin bit signaling for a given connection can use a fixed spin value for the duration of the connection, or can set the bit randomly on each packet sent.\"",
              "createdAt": "2019-04-18T07:22:20Z",
              "updatedAt": "2019-04-18T08:06:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTQ5NjQw",
          "commit": {
            "abbreviatedOid": "541accb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T08:06:26Z",
          "updatedAt": "2019-04-18T08:06:27Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "Done",
              "createdAt": "2019-04-18T08:06:26Z",
              "updatedAt": "2019-04-18T08:06:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI4MTQ5Nzk2",
          "commit": {
            "abbreviatedOid": "541accb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-04-18T08:06:50Z",
          "updatedAt": "2019-04-18T08:06:50Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "Sorry there were a bunch of nits in this sentence but used Brian's proposal now.",
              "createdAt": "2019-04-18T08:06:50Z",
              "updatedAt": "2019-04-18T08:06:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 67,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcyNzc2Mjc2",
      "title": "fix 80col, minor wording tweaks to #66",
      "url": "https://github.com/quicwg/ops-drafts/pull/67",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-23T15:13:50Z",
      "updatedAt": "2019-04-23T15:14:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "cf4cbdb0b030a7a992a5614e89e4f9972e04b2ce",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "spinbit-fixup",
      "headRefOid": "39cd5a4fb903be78e8308bf3c97e0f0b1b891ec9",
      "closedAt": "2019-04-23T15:14:54Z",
      "mergedAt": "2019-04-23T15:14:54Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "edefb8a8c5018f1642f81b159de61558be33527c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczMDQ3NjM5",
      "title": "fix section organization in -manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/69",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-24T09:29:51Z",
      "updatedAt": "2019-04-24T09:31:48Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "edefb8a8c5018f1642f81b159de61558be33527c",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "section-fix",
      "headRefOid": "8bc7c14f8fc602bff6eb34112137087bb7617239",
      "closedAt": "2019-04-24T09:31:48Z",
      "mergedAt": "2019-04-24T09:31:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0MjczNDk2NDEy",
      "title": "change editor affiliations",
      "url": "https://github.com/quicwg/ops-drafts/pull/70",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Mirja's at Ericsson and Brian's at Google now.",
      "createdAt": "2019-04-25T12:06:14Z",
      "updatedAt": "2019-07-02T14:13:51Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "editor-affiliation",
      "headRefOid": "ba48b2e580bccd902762007f7653636935b5da48",
      "closedAt": "2019-07-02T14:13:51Z",
      "mergedAt": "2019-07-02T14:13:51Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "2be57594844bbb6be6ef7a30cb52d1f41880fb63"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2OTIxMTc2",
          "commit": {
            "abbreviatedOid": "ba48b2e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-02T14:13:46Z",
          "updatedAt": "2019-07-02T14:13:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgxMjQyMDYy",
      "title": "fix a bunch of typos",
      "url": "https://github.com/quicwg/ops-drafts/pull/73",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-05-22T15:14:13Z",
      "updatedAt": "2019-05-23T10:00:34Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a3efc734e5859988e26aedfdc5dd0f65b09f1c1a",
      "headRepository": "thomas-fossati/ops-drafts",
      "headRefName": "typos",
      "headRefOid": "2d610f18c49d0f425e11a44f8a03fb0ca4c05aab",
      "closedAt": "2019-05-23T10:00:34Z",
      "mergedAt": "2019-05-23T10:00:34Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "bec11fb6a724e50dc445fdf03cd2e45b25b94ae0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQxMTAzMjU5",
          "commit": {
            "abbreviatedOid": "2d610f1"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "excellent, thanks!",
          "createdAt": "2019-05-23T09:59:22Z",
          "updatedAt": "2019-05-23T09:59:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "MDExOlB1bGxSZXF1ZXN0MjgxNTI1OTU3",
      "title": "@thomas-fossati editorial pass: manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/74",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-05-23T09:53:52Z",
      "updatedAt": "2019-07-02T14:14:29Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "bec11fb6a724e50dc445fdf03cd2e45b25b94ae0",
      "headRepository": "thomas-fossati/ops-drafts",
      "headRefName": "edit-pass-manageability",
      "headRefOid": "3859f4a81d2bc5c659dd76aed3635d4836c2f660",
      "closedAt": "2019-07-02T14:14:29Z",
      "mergedAt": "2019-07-02T14:14:29Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "42576be7d6ac1d4bc3e8a0c5603860766c7098f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQxMTAxMTg5",
          "commit": {
            "abbreviatedOid": "01df32c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This is good, thanks. A couple of nits to address.\r\n\r\n(@mirjak can you review and approve? i can't since GitHub thinks it's my PR :) )",
          "createdAt": "2019-05-23T09:55:29Z",
          "updatedAt": "2019-05-23T09:57:51Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "\"ascribable\" is possibly confusing to non-native speakers; suggest simplification.\r\n\r\n```suggestion\r\ncaused by the asymmetric crypto operations associated with the TLS\r\n```",
              "createdAt": "2019-05-23T09:55:29Z",
              "updatedAt": "2019-05-23T10:14:37Z"
            },
            {
              "originalPosition": 81,
              "body": "rewrap this para (and possibly a few others); the 80col linter will choke on it.",
              "createdAt": "2019-05-23T09:56:42Z",
              "updatedAt": "2019-05-23T10:14:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU2OTIwNjI3",
          "commit": {
            "abbreviatedOid": "3859f4a"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-02T14:12:55Z",
          "updatedAt": "2019-07-02T14:12:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0MzAxMTk5",
      "title": "Changes from Tuesday editor's call: fix #3, fix #23",
      "url": "https://github.com/quicwg/ops-drafts/pull/77",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-03T19:28:14Z",
      "updatedAt": "2019-07-04T14:35:25Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "sync-rollup",
      "headRefOid": "29339155689a7d60a599fc9df041ab3341004ee7",
      "closedAt": "2019-07-04T14:35:25Z",
      "mergedAt": "2019-07-04T14:35:25Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU3ODQxMzIw",
          "commit": {
            "abbreviatedOid": "4a6638e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T06:04:33Z",
          "updatedAt": "2019-07-04T06:04:33Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "How old is this PR?  omit_connection_id was removed in draft-ietf-quic-transport-09.",
              "createdAt": "2019-07-04T06:04:33Z",
              "updatedAt": "2019-07-04T14:32:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU3ODk3NzM0",
          "commit": {
            "abbreviatedOid": "4a6638e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T08:25:04Z",
          "updatedAt": "2019-07-04T08:25:04Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Ups, this was meant to address issue #23 which was like to an old PR... we will fix that.",
              "createdAt": "2019-07-04T08:25:04Z",
              "updatedAt": "2019-07-04T14:32:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 78,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTgwNzQy",
      "title": "Text on connection closure",
      "url": "https://github.com/quicwg/ops-drafts/pull/78",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This section was still empty so far. This PR also address issue #14.",
      "createdAt": "2019-07-04T13:23:03Z",
      "updatedAt": "2020-08-21T13:41:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "conn-closure",
      "headRefOid": "8ae4676476cf33747ca0a67a73503e7b75e37ba9",
      "closedAt": "2019-07-04T14:16:59Z",
      "mergedAt": "2019-07-04T14:16:59Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "982851b2909a3afcb0e225a755e317b599a54f69"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY0MTgy",
          "commit": {
            "abbreviatedOid": "12099cb"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This is good, modulo typos (all edits as suggestions)",
          "createdAt": "2019-07-04T14:07:54Z",
          "updatedAt": "2019-07-04T14:11:20Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nQUIC connections are closed either by expiration of an idle timeout or by an\r\n```",
              "createdAt": "2019-07-04T14:07:54Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nis that an immediate close was negotiated at the application layer and\r\n```",
              "createdAt": "2019-07-04T14:08:20Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\ndefine application-specific error codes, e.g. see {{QUIC-HTTP}} section 8.1. In\r\n```",
              "createdAt": "2019-07-04T14:08:53Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nlayer negotiation, a NO_ERROR code is expected. Further, the CONNECTION_CLOSE frame\r\n```",
              "createdAt": "2019-07-04T14:09:16Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nprovides an optional reason field, that can be used to append human-readable\r\n```",
              "createdAt": "2019-07-04T14:09:31Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\ninformation to an error code. Note that QUIC RESET_STREAM and STOP_SENDING frames\r\n```",
              "createdAt": "2019-07-04T14:10:05Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nAlternatively, a QUIC connection will be silently closed by each endpoint\r\n```",
              "createdAt": "2019-07-04T14:10:24Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\napplication. If an application desires to keep the connection open for longer\r\n```",
              "createdAt": "2019-07-04T14:10:40Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nthan the announced timeout, it can send keep-alives messages. See\r\n```",
              "createdAt": "2019-07-04T14:11:01Z",
              "updatedAt": "2019-07-04T14:16:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTg5MTA4",
      "title": "Text on packet sizes",
      "url": "https://github.com/quicwg/ops-drafts/pull/80",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR also moves the whole section on Packetization as it shouldn't be under \"Use of Streams\" and adds an additional paragraph on packet sizes and padding.",
      "createdAt": "2019-07-04T13:45:07Z",
      "updatedAt": "2020-08-21T13:41:58Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "8a197fec30831f4f36c361d3f6c8398e64b4136e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "packet-sizes",
      "headRefOid": "f7fb3c557c3394a164a5f2af7cd618bcb95d00d9",
      "closedAt": "2019-07-04T14:19:30Z",
      "mergedAt": "2019-07-04T14:19:30Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "83c32c7d8d39d9a4c208c1d0bf6711e0f57a67f4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY2OTE4",
          "commit": {
            "abbreviatedOid": "6dd6815"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "also good modulo typos.",
          "createdAt": "2019-07-04T14:13:09Z",
          "updatedAt": "2019-07-04T14:15:08Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nimpact the packet size. This is mainly used by QUIC itself in the first packet\r\n```",
              "createdAt": "2019-07-04T14:13:09Z",
              "updatedAt": "2019-07-04T14:18:52Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nin order to ensure that the path is capable of transferring packets of at least\r\n```",
              "createdAt": "2019-07-04T14:13:22Z",
              "updatedAt": "2019-07-04T14:18:52Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\ngreedy. Note the initial packet must have a minimum size of 1200 bytes\r\n```",
              "createdAt": "2019-07-04T14:14:14Z",
              "updatedAt": "2019-07-04T14:18:53Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\naccording to the QUIC specification. A receiver of a smaller initial packet may reject\r\n```",
              "createdAt": "2019-07-04T14:14:26Z",
              "updatedAt": "2019-07-04T14:18:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 81,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NTk2NTQ3",
      "title": "New section on connection migration",
      "url": "https://github.com/quicwg/ops-drafts/pull/81",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #68",
      "createdAt": "2019-07-04T14:04:29Z",
      "updatedAt": "2020-08-21T13:42:00Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "83c32c7d8d39d9a4c208c1d0bf6711e0f57a67f4",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "migration-sec",
      "headRefOid": "d7c8a4b542ddb045f9582e01a7705f29e1f5a65a",
      "closedAt": "2019-07-04T14:24:28Z",
      "mergedAt": "2019-07-04T14:24:28Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "99477cbb6c549f69940086fc05cdddfff71de5bf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MDY4NDA2",
          "commit": {
            "abbreviatedOid": "0ce6873"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "good modulo typos",
          "createdAt": "2019-07-04T14:16:05Z",
          "updatedAt": "2019-07-04T14:17:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nQUIC supports connection migration. Even if lower-layer\r\n```",
              "createdAt": "2019-07-04T14:16:06Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\naddresses (usually the 4-tuple of IP addresses and ports) changes,\r\n```",
              "createdAt": "2019-07-04T14:16:26Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nQUIC packets can still be associated with an existing connection based on the\r\n```",
              "createdAt": "2019-07-04T14:16:43Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nrebinding or change of the local interface. Currently QUIC only supports\r\n```",
              "createdAt": "2019-07-04T14:17:01Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nfailover cases. Only one \"path\" can be used at a time, and as soon\r\n```",
              "createdAt": "2019-07-04T14:17:22Z",
              "updatedAt": "2019-07-04T14:24:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 82,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjE3MzY4",
      "title": "Make it clear in the intro that we don't do proxies here.",
      "url": "https://github.com/quicwg/ops-drafts/pull/82",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-04T15:01:04Z",
      "updatedAt": "2019-07-04T20:07:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "britram/quic-ops-drafts",
      "headRefName": "mitm-just-say-no",
      "headRefOid": "872c5dad313b821da26199714dd934d28c96c837",
      "closedAt": "2019-07-04T20:06:41Z",
      "mergedAt": "2019-07-04T20:06:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "62c8be583f6f9d64d0af75e0ba2baf35562a0bde"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTAxOTY4",
          "commit": {
            "abbreviatedOid": "761f586"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-04T15:27:44Z",
          "updatedAt": "2019-07-04T15:27:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Maybe add another half sentence saying something like \"and therefore should follow guidance provided in the QUIC base specs {{...}} and the applicability statement {{...}}\"...?",
              "createdAt": "2019-07-04T15:27:45Z",
              "updatedAt": "2019-07-04T19:57:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTU4NjM4",
          "commit": {
            "abbreviatedOid": "761f586"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-07-04T19:46:21Z",
          "updatedAt": "2019-07-04T19:46:21Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "yep",
              "createdAt": "2019-07-04T19:46:21Z",
              "updatedAt": "2019-07-04T19:57:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 83,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjE3ODA5",
      "title": "Use of Conn ID for entropy for stateful firewalls",
      "url": "https://github.com/quicwg/ops-drafts/pull/83",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #56",
      "createdAt": "2019-07-04T15:02:19Z",
      "updatedAt": "2020-08-21T13:42:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "conn-id-entropy",
      "headRefOid": "85bbb9fda66c94812d61edfd4342293dcb8a4568",
      "closedAt": "2019-07-04T16:26:44Z",
      "mergedAt": "2019-07-04T16:26:44Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "628004c2497f963177f56c07422e3bcd800cf2c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTIwMTY2",
          "commit": {
            "abbreviatedOid": "c55dcee"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "lgtm modulo wording",
          "createdAt": "2019-07-04T16:21:23Z",
          "updatedAt": "2019-07-04T16:24:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nadditional entropy beyond the 5-tuple, if needed. The QUIC handshake needs\r\n```",
              "createdAt": "2019-07-04T16:21:23Z",
              "updatedAt": "2019-07-04T16:25:53Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nto be observed in order to understand whether the Connection ID is present and\r\n```",
              "createdAt": "2019-07-04T16:21:41Z",
              "updatedAt": "2019-07-04T16:25:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTIxMDM0",
          "commit": {
            "abbreviatedOid": "c55dcee"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-07-04T16:24:54Z",
          "updatedAt": "2019-07-04T16:24:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 84,
      "id": "MDExOlB1bGxSZXF1ZXN0Mjk0NjIxNjQx",
      "title": "Use of one stream to achieve in-order delivery",
      "url": "https://github.com/quicwg/ops-drafts/pull/84",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "One sentences added to address remaining bits for #39",
      "createdAt": "2019-07-04T15:14:05Z",
      "updatedAt": "2020-08-21T13:42:01Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c961da0cc14cb1eca3dfaa57688d6a6fde9fc88e",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "in-order-delivery",
      "headRefOid": "b274d6071809891e056533678562071caccb9dea",
      "closedAt": "2019-07-05T08:42:21Z",
      "mergedAt": "2019-07-05T08:42:21Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "03b30687f036638f843373efacb0c216e3033234"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@britram I didn't replace \"five-tuple\" with \"connection\" in this sentence in this PR:\r\n\"QUIC\u2019s stream multiplexing feature allows applications to run multiple streams over a single connection, without head-of-line blocking between streams, associated at a point in time with a single five-tuple. \"\r\nbecause it already has connection in the sentence; so we could only remove the last half sentence, but I actually think there is a value in leaving this in because some application may actually care about the 5-tuple.\r\n\r\n",
          "createdAt": "2019-07-04T15:20:25Z",
          "updatedAt": "2019-07-04T15:20:25Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "WFM. We should probably do an editorial pass to make sure we're using terms like \"5-tuple\" and \"connection\" and \"path\" properly everywhere anyway.",
          "createdAt": "2019-07-04T19:42:50Z",
          "updatedAt": "2019-07-04T19:42:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjU4MTU4MjU3",
          "commit": {
            "abbreviatedOid": "6bfc940"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "lgtm modulo editorial. circleci doesn't like this but can fix after it lands.",
          "createdAt": "2019-07-04T19:43:34Z",
          "updatedAt": "2019-07-04T19:45:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nand therefore would suffer from head of line blocking if forced to be received\r\n```",
              "createdAt": "2019-07-04T19:43:34Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nin order, should be transmitted over different streams. If the application\r\n```",
              "createdAt": "2019-07-04T19:43:50Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nrequires certain data to be received in order, the same stream should\r\n```",
              "createdAt": "2019-07-04T19:44:02Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nchunk/message. If one message is mapped to a single stream, resetting the stream\r\n```",
              "createdAt": "2019-07-04T19:44:21Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nto expire an unacknowledged message can be used to emulate partial reliability\r\n```",
              "createdAt": "2019-07-04T19:45:11Z",
              "updatedAt": "2019-07-05T08:41:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUwNzUzMjUz",
      "title": "No CIDs for NATs, addresses #87",
      "url": "https://github.com/quicwg/ops-drafts/pull/88",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-12-09T14:44:26Z",
      "updatedAt": "2020-08-21T13:42:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "03b30687f036638f843373efacb0c216e3033234",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-nat-cid-87",
      "headRefOid": "1a9fe848663534d12b4b5bd09b7fadc3a02c4255",
      "closedAt": "2020-01-06T13:24:38Z",
      "mergedAt": "2020-01-06T13:24:38Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ba185424199ffa8b6689b77f1b3830c31e502fab"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "At Gorry's suggestion I put the NAT guidance into a different draft:\r\nhttps://datatracker.ietf.org/doc/draft-duke-quic-natsupp/\r\n\r\nSorry, I thought the notification went out automatically. Regardless, this change is fine.",
          "createdAt": "2019-12-09T16:21:47Z",
          "updatedAt": "2019-12-09T16:21:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTg3NjUw",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Looks good to me. It might be worth adding a bit more (see my detailed comment).",
          "createdAt": "2019-12-09T15:08:33Z",
          "updatedAt": "2019-12-09T15:08:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Perhaps it should be explicitly mentioned that even the length of the CIDs can change. A change in length could break any logic that observes a handshake and assumes all CIDs have the same length.\r\n\r\nNot to mention that the tuple itself could be shared by several parallel connections, each with different CIDs (possibly with different lengths).",
              "createdAt": "2019-12-09T15:08:33Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDQ0Mjg3",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2019-12-09T16:22:09Z",
          "updatedAt": "2019-12-09T16:22:09Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDc0MjQ2",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-09T17:02:19Z",
          "updatedAt": "2019-12-09T17:02:20Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nof state in the middle of a connection. Use of Connection ID is specifically \r\n```",
              "createdAt": "2019-12-09T17:02:19Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MDc0NDg3",
          "commit": {
            "abbreviatedOid": "bdb1f59"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-12-09T17:02:38Z",
          "updatedAt": "2019-12-09T17:02:38Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Or maybe you want the is below, but I think something is missing?",
              "createdAt": "2019-12-09T17:02:38Z",
              "updatedAt": "2020-01-06T13:24:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 89,
      "id": "MDExOlB1bGxSZXF1ZXN0MzUwNzU5NjY0",
      "title": "Don't look at version numbers. We mean it.",
      "url": "https://github.com/quicwg/ops-drafts/pull/89",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-12-09T14:56:57Z",
      "updatedAt": "2020-08-21T13:42:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "03b30687f036638f843373efacb0c216e3033234",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-version-peeking-62",
      "headRefOid": "4dae240674e92b6f0c9f9a1236da88ebe39a5973",
      "closedAt": "2020-01-06T13:27:04Z",
      "mergedAt": "2020-01-06T13:27:04Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "601878b4f4cdb81ee1995df7ff3f85c99092b75c"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixes #62 when merged.",
          "createdAt": "2019-12-09T20:00:44Z",
          "updatedAt": "2019-12-09T20:00:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTg5MjQz",
          "commit": {
            "abbreviatedOid": "48adc57"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I'm wondering if we should use even stronger language; not that anything can really enforce it.",
          "createdAt": "2019-12-09T15:10:32Z",
          "updatedAt": "2019-12-09T15:10:32Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4OTk1Nzcx",
          "commit": {
            "abbreviatedOid": "48adc57"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I think we should make this stronger, so I made some suggestions.  Feel free to ignore or rework them.",
          "createdAt": "2019-12-09T15:19:10Z",
          "updatedAt": "2019-12-09T15:21:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nQUIC is expected to evolve rapidly, so new versions, both experimental and IETF standard versions, will be deployed in the\r\n```",
              "createdAt": "2019-12-09T15:19:10Z",
              "updatedAt": "2020-01-06T13:26:25Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nUsing a particular version number to recognize valid QUIC traffic is likely to persistently miss a fraction of QUIC flows and completely fail in the multi-year timeframe so \r\n```",
              "createdAt": "2019-12-09T15:21:11Z",
              "updatedAt": "2020-01-06T13:26:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI5MTk2MDA3",
          "commit": {
            "abbreviatedOid": "a87cb9d"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "My comments left the lines >80 characters, but otherwise LG",
          "createdAt": "2019-12-09T20:24:27Z",
          "updatedAt": "2019-12-09T20:24:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0MzYyMDIxMDQ2",
      "title": "remove stale link to flow end flag discussion",
      "url": "https://github.com/quicwg/ops-drafts/pull/90",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-01-13T09:44:33Z",
      "updatedAt": "2020-08-21T13:42:05Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "601878b4f4cdb81ee1995df7ff3f85c99092b75c",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "no-stop-bit",
      "headRefOid": "b11f129db6863395d19dec9912a87489d101a856",
      "closedAt": "2020-01-27T14:06:15Z",
      "mergedAt": "2020-01-27T14:06:15Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c41bd139038d6bf4ddd9b225461b45d05d2be394"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "MDExOlB1bGxSZXF1ZXN0NDI1MzAwNzcy",
      "title": "DDoS mitigations - linking after NAT rebinding and UDP Policing",
      "url": "https://github.com/quicwg/ops-drafts/pull/94",
      "state": "MERGED",
      "author": "igorlord",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR describes how a stateful DDoS system may link flows after a NAT rebinding event.\r\n\r\nAlso, the PR adds a section on how to police QUIC packets to minimize disruption to application that are able to failover to TCP.  Namely, avoid blocking a random fraction of UDP packets and, instead, focus on either blocking all packets from a subset of users or none at all.\r\n\r\nThis is related to areas discussed in #93.",
      "createdAt": "2020-05-29T20:00:40Z",
      "updatedAt": "2020-07-06T18:56:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c41bd139038d6bf4ddd9b225461b45d05d2be394",
      "headRepository": "igorlord/quic-ops-drafts",
      "headRefName": "ilubashe/ddos-mitigations",
      "headRefOid": "170feceddb079b921577ef0e4398035320f9e01d",
      "closedAt": "2020-07-06T14:14:28Z",
      "mergedAt": "2020-07-06T14:14:28Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443"
      },
      "comments": [
        {
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "body": "There's no mention of the QUIC Retry mechanism here. At the very least, for long header packets, a cooperating DDoS protection device can maintain a white-list of peer IP addresses, and only let through those addresses that successfully go through the Retry scenario.\r\n\r\nThe question then is what to do with short header packets. The backend server will not have any connection state for any junk short header packets, so the server should either quickly discard the packet silently or send a stateless reset if it happens to look like a valid QUIC packet. Assuming the short header packet traffic is enough to overwhelm the server, then this PR's text would come into play. Though it'd be interesting to see some perf numbers on what kind of CPU cost there is to just reject these packets. From my previous tests with the QUIC server running in the Windows kernel, the network was the limiting factor in these type of attacks, not the CPU. So if the network is the bottleneck, does it really matter if you drop it at the server or just in front of it?",
          "createdAt": "2020-05-29T22:18:17Z",
          "updatedAt": "2020-05-29T22:18:17Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@nibanks I think this section could be expanded a lot more, and Retry mechanism with a cooperating DDoS protection device definitely has a place. I am happy to give it a try in a different PR, or I can leave it to you, since you've likely thought more about this topic. The cooperation should include an agreement on the format of the Token to:\r\n1. For a Retry tokens generated by DDoS protection device, decode original_destination_connection_id.\r\n1. DDoS protection device to understand and validate server's token provided by a NEW_TOKEN frame\r\n1. DDoS protection device to understand and validate server's Retry tokens\r\n\r\nAs for the CPU cost, this consideration only comes into play, if the attack was allowed to reach backend servers.  Volumetric DDoS can saturate network links and/or be targeting networking infrastructure and not just backend servers.  As @britram is saying in #93, volumetric attacks are often mitigated further away from the edge of the network.  This kind of mitigation is the focus of UDP Policing section.",
          "createdAt": "2020-05-31T17:03:21Z",
          "updatedAt": "2020-05-31T17:10:39Z"
        },
        {
          "author": "igorlord",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks like https://tools.ietf.org/html/draft-ietf-quic-load-balancers-02#section-5 is an excellent discussion of Retry mechanics.  It definitely deserves a reference from this doc.\r\n\r\nThe Retry mechanisms described in LB draft are all cooperating boxes, and servers are aware of them.\r\n\r\nUnfortunately, Retry system protects only server's memory state and some CPU cycles spent on crypto.  (Servers still need to decrypt CID to decide it is invalid, and if the attacker is clever enough to establish one valid connection and use that CID in a flood, the server will also be decrypting packets.)  Retry does nothing to protect network resources.\r\n\r\nThis PR is about transparent boxes that try to mitigate volumetric attacks.",
          "createdAt": "2020-06-19T14:59:06Z",
          "updatedAt": "2020-06-19T14:59:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjg5MDYy",
          "commit": {
            "abbreviatedOid": "170fece"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-02T13:41:02Z",
          "updatedAt": "2020-07-02T13:41:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODA3OTg0",
      "title": "make clear we're serious about invariants",
      "url": "https://github.com/quicwg/ops-drafts/pull/98",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:21:05Z",
      "updatedAt": "2020-07-06T15:05:02Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "invariants-we-mean-it",
      "headRefOid": "9c179c3fce4358b1cf5684cff5615f27b7355182",
      "closedAt": "2020-07-06T15:04:58Z",
      "mergedAt": "2020-07-06T15:04:58Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "273a562abfb38920a0a854e11963e65a4258ca29"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "addresses #96 ",
          "createdAt": "2020-07-06T14:40:11Z",
          "updatedAt": "2020-07-06T14:40:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODE4MzI4",
      "title": "Edits on UDP policing section",
      "url": "https://github.com/quicwg/ops-drafts/pull/99",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:38:30Z",
      "updatedAt": "2020-07-07T11:11:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-udp-pol",
      "headRefOid": "599e4762244eccbe588e7f6ed31f287dd004a14d",
      "closedAt": "2020-07-06T15:05:31Z",
      "mergedAt": "2020-07-06T15:05:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b7f558cd8362fbd37b8c8690445b5a7ae2ed77d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTYxNDIz",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-06T15:05:24Z",
          "updatedAt": "2020-07-06T15:05:24Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTc5MTg1",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Belated",
          "createdAt": "2020-07-07T05:50:11Z",
          "updatedAt": "2020-07-07T05:51:48Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "\"When then\"",
              "createdAt": "2020-07-07T05:50:11Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            },
            {
              "originalPosition": 31,
              "body": "\"may\" only really applies if there is a path to TCP.  If you have addressed that point elsewhere, fine, but otherwise you need to say something about that.",
              "createdAt": "2020-07-07T05:50:58Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            },
            {
              "originalPosition": 34,
              "body": "\"a severe\" might be better as \"from severe\" or just \"severe\"",
              "createdAt": "2020-07-07T05:51:43Z",
              "updatedAt": "2020-07-07T05:51:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc1ODI5",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:32:15Z",
          "updatedAt": "2020-07-07T08:32:16Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "done. thanks!",
              "createdAt": "2020-07-07T08:32:16Z",
              "updatedAt": "2020-07-07T08:32:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc1ODU0",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:32:19Z",
          "updatedAt": "2020-07-07T08:32:22Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "done",
              "createdAt": "2020-07-07T08:32:21Z",
              "updatedAt": "2020-07-07T08:32:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjc2ODAy",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T08:33:29Z",
          "updatedAt": "2020-07-07T08:33:30Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "What do you mean by \"path to TCP\"? Doesn't \"may\" already include that is may also not work (for whatever reason)? Should we just say \"may try to failover\"? ",
              "createdAt": "2020-07-07T08:33:29Z",
              "updatedAt": "2020-07-07T08:33:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzkwMDY0",
          "commit": {
            "abbreviatedOid": "599e476"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-07T11:11:16Z",
          "updatedAt": "2020-07-07T11:11:17Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "This usage of \"may\" implies that this is an option.  As in \"can\". As does your \"try to\". This is more about the various ways in which failures are handled. Even in HTTP, we don't fall back, we just fail to upgrade to QUIC.  Implying that callbacks are involved might be a convenient colloquialism, but it isn't accurate. And then there are those protocols that might come to only use QUIC, which will just fail.",
              "createdAt": "2020-07-07T11:11:16Z",
              "updatedAt": "2020-07-07T11:11:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 101,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODI3MTY3",
      "title": "add ref to load balancers doc",
      "url": "https://github.com/quicwg/ops-drafts/pull/101",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-06T14:53:09Z",
      "updatedAt": "2020-08-21T13:41:47Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "4540f2d82001fa5f61c6f3db96c89f827cbbf443",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-ref-lb",
      "headRefOid": "3cc454d537297e120bddae66e7b58a8170a7b946",
      "closedAt": "2020-07-06T15:06:17Z",
      "mergedAt": "2020-07-06T15:06:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "76ec5c29655726704d268242f9213ce61f97f680"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTAyNTA0",
      "title": "More guidance on idle timeouts",
      "url": "https://github.com/quicwg/ops-drafts/pull/102",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-07T15:51:42Z",
      "updatedAt": "2020-08-21T13:41:35Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-idle-timeout",
      "headRefOid": "73f77f3cb85514d909639aef8abc074ffa429dfa",
      "closedAt": "2020-08-17T11:48:44Z",
      "mergedAt": "2020-08-17T11:48:44Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "43c5695112b7604735cfe1e1ea2beb211dd5f418"
      },
      "comments": [
        {
          "author": "pravb",
          "authorAssociation": "NONE",
          "body": "One concern I have with short idle timeout is impact on VM live migration. The current guidance with TCP default timeouts allows LM to have a blackout period of under 9 seconds. Do we need any guidance here to not use very low default timeouts?",
          "createdAt": "2020-07-29T14:49:50Z",
          "updatedAt": "2020-07-29T14:49:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgxMzQ0",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T03:05:39Z",
          "updatedAt": "2020-07-08T03:07:35Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I don\u2019t understand why an implementation needs access to the computed value. A reasonable QUIC implementation could take the application\u2019s idle timeout and then take care of sending PINGs to the peer to keep the connection open. ",
              "createdAt": "2020-07-08T03:05:39Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 21,
              "body": "Not every application protocol has a keep-alive option. I view keep-alives as the responsibility of the QUIC stack instead. ",
              "createdAt": "2020-07-08T03:07:32Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTI0NjUx",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T08:30:37Z",
          "updatedAt": "2020-07-08T08:30:37Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "The text here, I think, is appropriate for general-purpose QUIC implementations (atop which multiple applications could be bound), but yeah, it could be either-or for applications tightly bound to their implementation, based on application keepalive logic.",
              "createdAt": "2020-07-08T08:30:37Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODQ5Mjc2",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T14:54:49Z",
          "updatedAt": "2020-07-08T14:54:50Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Both might have benefits depending on the application, e.g. if you anyway need to exchange certain status update messages on application layer. Should be more explicit about that in the text?",
              "createdAt": "2020-07-08T14:54:50Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTk3NDg4",
          "commit": {
            "abbreviatedOid": "5e3060b"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This is reasonable advice.  A little redundant with the advice in the spec, but not overly so, I think.",
          "createdAt": "2020-07-08T23:37:06Z",
          "updatedAt": "2020-07-08T23:40:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nseparately after an idle timeout. If enabled as indicated by a transport\r\n```",
              "createdAt": "2020-07-08T23:37:07Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nconnection is the minimum of the two advertised values. An application\r\n```",
              "createdAt": "2020-07-08T23:37:22Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nimplementation may provide an option to defer the time-out to avoid unnecessary\r\n```",
              "createdAt": "2020-07-08T23:38:04Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 22,
              "body": "Be aware that this anchor is likely to change to 10.1.2.",
              "createdAt": "2020-07-08T23:38:21Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nSee {{resumption-v-keepalive}} for further guidance on keep-alives.\r\n```",
              "createdAt": "2020-07-08T23:38:35Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            },
            {
              "originalPosition": 16,
              "body": "I think that - at the level of this document - this is fine advice.  Applications do benefit from knowing when a timeout is imminent because they might want to manage the risk of failure for transactions that can't be easily retried.  At or near the timeout is not a great time to start something.",
              "createdAt": "2020-07-08T23:39:55Z",
              "updatedAt": "2020-07-21T15:55:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTE0MjA5",
      "title": "Recommend longer timeouts",
      "url": "https://github.com/quicwg/ops-drafts/pull/103",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "But how long...?",
      "createdAt": "2020-07-07T16:12:35Z",
      "updatedAt": "2020-08-21T13:41:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-nat-timeout",
      "headRefOid": "b8df688c346340efefcb0cc6167f6d138adada66",
      "closedAt": "2020-07-08T08:37:24Z",
      "mergedAt": "2020-07-08T08:37:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ae07a96b21a252d2523e511d96df8fd6651744de"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 104,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTIxOTY0",
      "title": "retry service and validation token",
      "url": "https://github.com/quicwg/ops-drafts/pull/104",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "References to quic-load-balancers and RFC5077 (due to lack of a better reference) added",
      "createdAt": "2020-07-07T16:26:57Z",
      "updatedAt": "2020-08-17T11:36:03Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-retry-token",
      "headRefOid": "32898e2eca0b3886df3cd7abb9314d7a809b3e01",
      "closedAt": "2020-08-17T11:35:56Z",
      "mergedAt": "2020-08-17T11:35:56Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f8af11ac94eff91d5c91f76fcf4882948bb93e49"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought the plan was to have a dependency on the load balancing draft rather than merging this part into the applicability draft. However, I would also be fine to add more text here and only have an informational reference, if some is willing to provide text!",
          "createdAt": "2020-07-21T15:53:21Z",
          "updatedAt": "2020-07-21T15:53:21Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjM1MjMy",
          "commit": {
            "abbreviatedOid": "9441dac"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Are you prepared to take a dependency on QUIC-LB?",
          "createdAt": "2020-07-09T01:42:47Z",
          "updatedAt": "2020-07-09T01:43:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I would use \"cryptographic\".",
              "createdAt": "2020-07-09T01:42:47Z",
              "updatedAt": "2020-07-21T15:52:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTk5NDA4",
          "commit": {
            "abbreviatedOid": "32898e2"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-21T15:53:30Z",
          "updatedAt": "2020-07-21T15:53:30Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Done",
              "createdAt": "2020-07-21T15:53:30Z",
              "updatedAt": "2020-07-21T15:53:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 105,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTI4MDc3",
      "title": "mention possibility to embed length in CID and point to quic-load-bal\u2026",
      "url": "https://github.com/quicwg/ops-drafts/pull/105",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026ancers for further algos",
      "createdAt": "2020-07-07T16:38:53Z",
      "updatedAt": "2020-08-17T11:36:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-cid-generate",
      "headRefOid": "e6f01326875c751b9f7b78c7b7ac251b44fbaf68",
      "closedAt": "2020-08-17T11:36:46Z",
      "mergedAt": "2020-08-17T11:36:46Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1a9e362961af92283b45a06c7f45cff69880b5e5"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intention was not to encrypt the length (as you say that would not be helpful) but you should probably \"grease\" the length such that those bit can not be used to identify a certain system. That was the intention here. However, maybe this is too much detail and we should remove that sentence and only refer to the load-balancer draft instead...?",
          "createdAt": "2020-07-08T14:52:38Z",
          "updatedAt": "2020-07-08T14:52:38Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NzkxNzQw",
          "commit": {
            "abbreviatedOid": "191b603"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I'm not sure if it's intended, but this paragraph implies that the length is encrypted, which is definitely not the case. The length self-encoding is there specifically to facilitate hardware lookup to obtain the keys.",
          "createdAt": "2020-07-08T13:57:29Z",
          "updatedAt": "2020-07-08T14:03:05Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "instead [of]",
              "createdAt": "2020-07-08T13:57:29Z",
              "updatedAt": "2020-07-21T15:46:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODQ3ODU0",
          "commit": {
            "abbreviatedOid": "6eb2dcb"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T14:53:23Z",
          "updatedAt": "2020-07-08T14:53:23Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "done. thx.",
              "createdAt": "2020-07-08T14:53:23Z",
              "updatedAt": "2020-07-21T15:46:11Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODUxMjQy",
          "commit": {
            "abbreviatedOid": "6eb2dcb"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Reading this again, I'm not sure how I would improve the phrasing. Perhaps \"embed the length of the connection ID in plaintext ...\".\r\n",
          "createdAt": "2020-07-08T14:56:42Z",
          "updatedAt": "2020-07-08T14:56:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjQyOTEz",
      "title": "Wire image specifics editorial changes",
      "url": "https://github.com/quicwg/ops-drafts/pull/106",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #86 (which didn't require any non-editorial changes; the review is done now)",
      "createdAt": "2020-07-07T20:09:14Z",
      "updatedAt": "2020-08-21T13:41:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "fix-86-editorial",
      "headRefOid": "62d2951cf756ebdcaa667586d75b8af3810fad3b",
      "closedAt": "2020-07-08T08:43:16Z",
      "mergedAt": "2020-07-08T08:43:16Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "d41d5c1178693ea76dcfb4bd4de2f15dbe0591a8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 107,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjU1MTQy",
      "title": "Improvements to section 4.4 on DDoS",
      "url": "https://github.com/quicwg/ops-drafts/pull/107",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #93 ",
      "createdAt": "2020-07-07T20:27:15Z",
      "updatedAt": "2020-08-21T13:41:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "more-better-ddos-93",
      "headRefOid": "7fb294630d46eec47dbe5e6fb83f3f583e174521",
      "closedAt": "2020-07-08T08:48:25Z",
      "mergedAt": "2020-07-08T08:48:25Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "4fdb4c7806c283db5a6e729bd14e38f916d2ddfc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 108,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjYxNDcy",
      "title": "More improvements to QUIC identification",
      "url": "https://github.com/quicwg/ops-drafts/pull/108",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #96 ",
      "createdAt": "2020-07-07T20:37:02Z",
      "updatedAt": "2020-08-21T13:41:39Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "more-invariants-96",
      "headRefOid": "faf0890511e4cbe4500b14baa8fdc86788a3a155",
      "closedAt": "2020-07-08T08:55:16Z",
      "mergedAt": "2020-07-08T08:55:16Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "e3b77b54feb3b96b5104b17d398c6e3f83c63a88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzU0OTkz",
          "commit": {
            "abbreviatedOid": "c37db56"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-07-08T01:35:42Z",
          "updatedAt": "2020-07-08T01:38:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Not only is the specification work ongoing, but other protocols are already being deployed in the wild (and have been for quite a while).",
              "createdAt": "2020-07-08T01:35:43Z",
              "updatedAt": "2020-07-08T08:53:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 109,
      "id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDc5MjYx",
      "title": "Clarify port selection and recommend ALPN or equivalent",
      "url": "https://github.com/quicwg/ops-drafts/pull/109",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #79",
      "createdAt": "2020-07-08T08:24:48Z",
      "updatedAt": "2020-08-21T13:41:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "d570bd150028bc23ac003cc43f78679d23e32ffe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "ports-alpn-79",
      "headRefOid": "df302f46b77a7d8a7bc5e5b5e9da38a79a7d52de",
      "closedAt": "2020-07-08T09:02:30Z",
      "mergedAt": "2020-07-08T09:02:30Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "aab494ab4fde0b017091b0f8a60087342098f194"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 117,
      "id": "MDExOlB1bGxSZXF1ZXN0NDYyNDEwNDk0",
      "title": "Revision of Applicability draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/117",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Intended to close #110, #111, #112, #114",
      "createdAt": "2020-08-03T21:39:04Z",
      "updatedAt": "2020-08-21T13:37:34Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "aab494ab4fde0b017091b0f8a60087342098f194",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "editorial-pass",
      "headRefOid": "4c3b507b28f92a4d54acccd40580a8cb372e8503",
      "closedAt": "2020-08-21T13:37:33Z",
      "mergedAt": "2020-08-21T13:37:33Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "83f5ba1bb4564fef73c557d553185e572a2185ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4Mzg3NjY0",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM modulo nits.",
          "createdAt": "2020-08-17T11:38:47Z",
          "updatedAt": "2020-08-17T11:40:25Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nuses the address/port four-tuple to direct traffic. Furthermore, middleboxes\r\n```",
              "createdAt": "2020-08-17T11:38:47Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nsection 13 of {{!QUIC}}). If there is not enough data available to fill a \r\npacket,\r\n```",
              "createdAt": "2020-08-17T11:39:55Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            },
            {
              "originalPosition": 108,
              "body": "(80-char limit, we can rewrap after submit)",
              "createdAt": "2020-08-17T11:40:13Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4Mzg5Njc0",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T11:42:32Z",
          "updatedAt": "2020-08-17T11:42:33Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\n  with no or very short idle periods, or the application's resistance \r\n  to NAT\r\n```",
              "createdAt": "2020-08-17T11:42:32Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MzkxNDQ4",
          "commit": {
            "abbreviatedOid": "659f2bd"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-17T11:45:21Z",
          "updatedAt": "2020-08-17T11:45:22Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "Not sure I understand this point. Isn't \"simply reconnect\" on application layer point three below?",
              "createdAt": "2020-08-17T11:45:21Z",
              "updatedAt": "2020-08-19T16:11:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzMxNDA4",
          "commit": {
            "abbreviatedOid": "4c3b507"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-19T18:28:52Z",
          "updatedAt": "2020-08-19T18:28:52Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "what this bullet means is the QUIC NAT rebinding mechanism is working fine -- there is no 4-tuple router breaking everything. So this suggested change breaks the meaning, though perhaps it's a better or equally relevant point.",
              "createdAt": "2020-08-19T18:28:52Z",
              "updatedAt": "2020-08-19T18:28:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 119,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcxNjM5NDc4",
      "title": "whitespace fix",
      "url": "https://github.com/quicwg/ops-drafts/pull/119",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-21T13:38:17Z",
      "updatedAt": "2020-08-21T13:41:04Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "83f5ba1bb4564fef73c557d553185e572a2185ae",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "hey-look-a-whitespace-fix",
      "headRefOid": "040390eacd52986c91e8d597d7834479d58cfc79",
      "closedAt": "2020-08-21T13:41:00Z",
      "mergedAt": "2020-08-21T13:41:00Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "f1b10231917d72247327450bac262521c19509fe"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 120,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcxNjUzNDMw",
      "title": "address @martinduke comments on streams",
      "url": "https://github.com/quicwg/ops-drafts/pull/120",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fix #113",
      "createdAt": "2020-08-21T14:04:18Z",
      "updatedAt": "2020-09-07T08:47:57Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "streams-113",
      "headRefOid": "4deb991b95ac91a424a4b6e18a3f15260180f017",
      "closedAt": "2020-09-07T08:47:57Z",
      "mergedAt": "2020-09-07T08:47:57Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "feab1f221b0591104e94622ba964e8a460c60c7b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTkyMjQ2",
          "commit": {
            "abbreviatedOid": "f8fcfe3"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The other item mentioned in the issue is whether or not stream IDs are available to the application; maybe that's not a good thing to put in here, but I would like acknowledgment that the comment was ignored rather than lost.",
          "createdAt": "2020-08-21T15:34:49Z",
          "updatedAt": "2020-08-21T15:43:33Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "of (a) unidirectional stream",
              "createdAt": "2020-08-21T15:34:50Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 26,
              "body": "s/applciation/application",
              "createdAt": "2020-08-21T15:36:09Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 56,
              "body": "The 2^62 point is listed a few paragraphs above; not sure which you want to keep,",
              "createdAt": "2020-08-21T15:37:14Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            },
            {
              "originalPosition": 23,
              "body": "This paragraph is still obscuring the fundamental directionality of all of these events. I suggest this:\r\n\r\n\"An application can gracefully close the egress direction of a stream by instructing QUIC to send a FIN bit in a STREAM frame. It cannot gracefully close the ingress direction without a peer-generated FIN, much like in TCP. However, an endpoint can abruptly close either the ingress or egress direction; these actions are fully independent of each other.\"",
              "createdAt": "2020-08-21T15:41:52Z",
              "updatedAt": "2020-09-07T08:26:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjMxNTU2",
          "commit": {
            "abbreviatedOid": "f04551b"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-08-24T15:50:47Z",
          "updatedAt": "2020-08-24T15:50:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyNDg5Nzg3",
      "title": "Move text on Conn ID generation",
      "url": "https://github.com/quicwg/ops-drafts/pull/121",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #116 ",
      "createdAt": "2020-08-24T12:42:20Z",
      "updatedAt": "2020-08-24T13:09:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-1",
      "headRefOid": "cab3839439d2408f79886a89061f1e2b5dc0f60f",
      "closedAt": "2020-08-24T13:09:18Z",
      "mergedAt": "2020-08-24T13:09:18Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5560c1860600a538ad43e836dcd9d8f9aafd314b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 122,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyNTA0ODU3",
      "title": "Update section on path migration",
      "url": "https://github.com/quicwg/ops-drafts/pull/122",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #115 (partially at least)",
      "createdAt": "2020-08-24T13:08:45Z",
      "updatedAt": "2020-10-12T13:59:19Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "f1b10231917d72247327450bac262521c19509fe",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-2",
      "headRefOid": "f631cb84438ef67b6e59cf727fa1f0aead581b57",
      "closedAt": "2020-10-12T13:59:19Z",
      "mergedAt": "2020-10-12T13:59:19Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "b08a75c10fdebe72e5d510bb895448ded6581be7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNDQ5Nzkz",
          "commit": {
            "abbreviatedOid": "0e5c0a9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "if we want to talk about preheating, then this looks good...",
          "createdAt": "2020-08-24T13:12:06Z",
          "updatedAt": "2020-08-24T13:14:49Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nchanges, a QUIC endpoint can still associate packets with an existing connection\r\n```",
              "createdAt": "2020-08-24T13:12:06Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nto the next path. For intentional migrations the client can send probing packets\r\n```",
              "createdAt": "2020-08-24T13:12:48Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nwill also be reset on path miragtion. Therefore migration usually has a performance\r\n```",
              "createdAt": "2020-08-24T13:14:16Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDE2MTM3",
          "commit": {
            "abbreviatedOid": "344c859"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-25T00:36:00Z",
          "updatedAt": "2020-08-25T00:39:17Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nbased on the Connection ID (see also {{connid}}) in the QUIC header,\r\n```",
              "createdAt": "2020-08-25T00:36:00Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 12,
              "body": "Avoid \"e.g.\" used in this way.  Try to say things like \"such as\" instead.",
              "createdAt": "2020-08-25T00:36:49Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 22,
              "body": "\"pre-heat\" is a colloquialism that should be avoided.  Note that probing does very little to allow the congestion window to open, so this is questionable anyway.",
              "createdAt": "2020-08-25T00:37:58Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nbefore use in order to avoid address spoofing attacks. Path validation takes one\r\n```",
              "createdAt": "2020-08-25T00:38:06Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nRTT and congestion control will also be reset on path migration. Therefore\r\n```",
              "createdAt": "2020-08-25T00:38:27Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 24,
              "body": "And maybe:\r\n\r\n```suggestion\r\nbefore use in order to avoid address spoofing attacks. Path validation takes at least one\r\n```",
              "createdAt": "2020-08-25T00:38:40Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            },
            {
              "originalPosition": 33,
              "body": "\"will\" or \"needs to\"?",
              "createdAt": "2020-08-25T00:39:14Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjkxMzU4",
          "commit": {
            "abbreviatedOid": "10803f3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-08-25T09:13:52Z",
          "updatedAt": "2020-08-25T09:13:52Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "We discussed this ones in a multipath related discussion. The idea here was to send multiple probing packets (and II guess padding). If that is seen as a viable approach for e.g. mobile handovers, it would be good to mention is somewhere. However, I guess we would then need to say more. I believe @erickinnear brought this up... otherwise if people think it's too early to say anything like that,  can also remove the half sentence. ",
              "createdAt": "2020-08-25T09:13:52Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI2OTI4",
          "commit": {
            "abbreviatedOid": "5307ddb"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:37:55Z",
          "updatedAt": "2020-10-12T13:37:56Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nthe peer omitting the connection ID needs to use the same local address for the\r\n```",
              "createdAt": "2020-10-12T13:37:55Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI3OTA1",
          "commit": {
            "abbreviatedOid": "d3c72b9"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:39:07Z",
          "updatedAt": "2020-10-12T13:39:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nif present. This supports cases where address information changes, such as\r\n```",
              "createdAt": "2020-10-12T13:39:07Z",
              "updatedAt": "2020-10-12T13:57:36Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI4MTI0",
          "commit": {
            "abbreviatedOid": "8a5b44b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-12T13:39:22Z",
          "updatedAt": "2020-10-12T13:39:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0NDgxMjY5NDMw",
      "title": "Minor update on initial encryption wording",
      "url": "https://github.com/quicwg/ops-drafts/pull/123",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "However, we also use the terms Server/Client Hello datagram to cover all QUIC Packets of the first two datagrams sent. This term is not used in the transport draft (anymore) and I find it confusing given the TLS terminology. Should we maybe use a different term?",
      "createdAt": "2020-09-07T10:34:01Z",
      "updatedAt": "2020-10-12T13:55:14Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "feab1f221b0591104e94622ba964e8a460c60c7b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-1",
      "headRefOid": "ad1b3d257f8b19deb117d1f3bc3014c9d92c5d41",
      "closedAt": "2020-10-12T13:55:14Z",
      "mergedAt": "2020-10-12T13:55:14Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "6108267e30d436b3b29736dc48a1330c610c3d37"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjI1NDQ3",
          "commit": {
            "abbreviatedOid": "c4a42f4"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "one spelling nit, otherwise lgtm",
          "createdAt": "2020-10-12T13:36:04Z",
          "updatedAt": "2020-10-12T13:36:32Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nInitial secret. The QUIC PADDING frame shown here may be present to ensure the\r\n```",
              "createdAt": "2020-10-12T13:36:05Z",
              "updatedAt": "2020-10-12T13:51:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjM4MDM5",
          "commit": {
            "abbreviatedOid": "7c89706"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:51:11Z",
          "updatedAt": "2020-10-12T13:51:12Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nwhich is obfuscated using the Initial secret.\r\n```",
              "createdAt": "2020-10-12T13:51:12Z",
              "updatedAt": "2020-10-12T13:51:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0NDgxNTQwMjQ1",
      "title": "New section on SNI parsing and appendix on Google QUIC",
      "url": "https://github.com/quicwg/ops-drafts/pull/124",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This PR adds a new section on extracting the SNI. I also copied (most of) the pseudo code from Davids document into the appendix. We need to decide if we want to keep this and if so, potentially add some more explanation there.\r\n\r\nAlso we could further strengthen the point out that both the 5-tuple and conn ID can change (as in David's doc). There is already text directly following the new SNI section on \"flow association\". If we want stronger text there, maybe we can capture that in a separate issue though.",
      "createdAt": "2020-09-07T16:44:08Z",
      "updatedAt": "2020-10-12T13:59:55Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "feab1f221b0591104e94622ba964e8a460c60c7b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-3",
      "headRefOid": "8723ebc2a4346f765565ea3d606c132c66a4ce1b",
      "closedAt": "2020-10-12T13:59:54Z",
      "mergedAt": "2020-10-12T13:59:54Z",
      "mergedBy": "mirjak",
      "mergeCommit": {
        "oid": "2ea9437089ce4d72bddff1a31c2c118962097dce"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "fixes #75",
          "createdAt": "2020-10-12T13:54:53Z",
          "updatedAt": "2020-10-12T13:54:53Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzMwODQx",
          "commit": {
            "abbreviatedOid": "bf87ad7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I don't think that you should include the entirety of David's code.  There are ways in which that will contribute to ossification.  Indeed, I don't think that it is helpful to list draft versions here either.",
          "createdAt": "2020-09-08T00:09:59Z",
          "updatedAt": "2020-09-08T00:11:29Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Who is this person?",
              "createdAt": "2020-09-08T00:09:59Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nThis appendix uses the following conventions:\r\n```",
              "createdAt": "2020-09-08T00:10:46Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODcxOTU1",
          "commit": {
            "abbreviatedOid": "bf87ad7"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "thanks for this! one major comment agreeing with @martinthomson: the appendix should drop some details of parsing Google QUIC, especially crypto frame extraction. otherwise a few nits.",
          "createdAt": "2020-09-08T07:39:23Z",
          "updatedAt": "2020-09-08T07:53:13Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nIf the SNI is not encrypted it can be derived from the QUIC Initial packet \r\n```",
              "createdAt": "2020-09-08T07:39:23Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nQUIC CRYPTO Frame containing the TLS ClientHello.\r\n```",
              "createdAt": "2020-09-08T07:39:47Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 80,
              "body": "I agree with @martinthomson here: beyond this section (mentioning the version numbers) and its first subsection (explaining how to differentiate Google and IETF QUIC), I'd scrub references to Google QUIC from the rest of the pseudocode, and split the appendix in two (first appendix: recognizing google quic; second appendix: initial salt (IETF only) and crypto frame extraction (IETF only)",
              "createdAt": "2020-09-08T07:46:06Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 84,
              "body": "Add something here noting that the rest of this document says nothing about Google QUIC.",
              "createdAt": "2020-09-08T07:46:33Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 19,
              "body": "(\"with\" sounds a little like one uses a ClientHello to parse the crypto frame, which would be a neat trick. :) )",
              "createdAt": "2020-09-08T07:49:11Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\ndependent on the frame type. Usually for QUIC version 1, the packet is expected \r\n```",
              "createdAt": "2020-09-08T07:50:40Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nwhich is one byte of zeros, may also occur before or after the CRYPTO frame.\r\n```\r\n\r\nhaving trouble parsing \"padding which is one byte of zeroes\" -- is the only allowable padding here exactly one byte long? haven't dug into this in a while.",
              "createdAt": "2020-09-08T07:51:53Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTAzMTc5",
          "commit": {
            "abbreviatedOid": "e154220"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T08:21:14Z",
          "updatedAt": "2020-09-08T08:21:15Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "sorry, sorry, sorry",
              "createdAt": "2020-09-08T08:21:14Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTExMzEx",
          "commit": {
            "abbreviatedOid": "b5e4a33"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T08:31:21Z",
          "updatedAt": "2020-09-08T08:31:21Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Okay, I removed the salt section entirely (because I think that value should be in the tls draft and only there) and cut down the crypto frame part to IETF QUIC only.",
              "createdAt": "2020-09-08T08:31:21Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjMzOTg1",
          "commit": {
            "abbreviatedOid": "d40de06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:46:24Z",
          "updatedAt": "2020-10-12T13:46:25Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\nThis section contains algorithms that allows parsing versions from both\r\n```",
              "createdAt": "2020-10-12T13:46:24Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjQwNjM4",
          "commit": {
            "abbreviatedOid": "d9f3660"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-12T13:54:07Z",
          "updatedAt": "2020-10-12T13:54:07Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nGoogle QUIC. And the purpose of this appendix is merely to distinguish IETF QUIC \r\nfrom any versions of Google QUIC.\r\n```",
              "createdAt": "2020-10-12T13:54:07Z",
              "updatedAt": "2020-10-12T13:56:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjQyNjk3",
          "commit": {
            "abbreviatedOid": "66bde06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-10-12T13:56:24Z",
          "updatedAt": "2020-10-12T13:56:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMDYzNzU0",
      "title": "Clarify \"idle timeout\"",
      "url": "https://github.com/quicwg/ops-drafts/pull/125",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "\"Idle period\", \"network idle timeout\", and \"idle timeout\" are distinct; addresses a comment in #118.",
      "createdAt": "2020-10-26T14:20:11Z",
      "updatedAt": "2020-11-03T01:33:06Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "118-idle-ist-nicht-gleich-idle",
      "headRefOid": "226a88869aeee0a955385d9f239a4164621523c5",
      "closedAt": "2020-11-02T14:47:10Z",
      "mergedAt": "2020-11-02T14:47:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6d8e1ea8101d9d3f9128c0b006d171fb304307df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTEyMDQ3",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Some small suggestions, but looks good.",
          "createdAt": "2020-10-26T19:34:34Z",
          "updatedAt": "2020-10-26T19:41:07Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "'will' seems a bit strong.  Suggestion below\r\n\r\n```suggestion\r\nstate entry can expire after just thirty seconds of inactivity.\r\n```",
              "createdAt": "2020-10-26T19:34:34Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTI0MDM2",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2020-10-27T09:57:40Z",
          "updatedAt": "2020-10-27T16:51:14Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nmuch shorter idle periods than for TCP (which recommended to be at least 2 hours 4 minutes in {{?RFC5382}}). According to a 2010 study\r\n```",
              "createdAt": "2020-10-27T09:57:40Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nstate entry will be expired after just thirty seconds of inactivity. Section 3.5 of {{!RFC8085}} further discusses keep-alive intervals for UDP and requires a minimum value of 15 seconds but recommends larger values or no use of keep-alive at all. \r\n```",
              "createdAt": "2020-10-27T09:59:55Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "Not sure if this fits here best but we should have reference to RFC8085 somewhere.",
              "createdAt": "2020-10-27T10:08:11Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjI5MTI1",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T23:43:09Z",
          "updatedAt": "2020-10-27T23:45:22Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Do we have any evidence that this recommendation is followed?  It seems safer to avoid mention of specifics for TCP, especially since they aren't really relevant to the current discussion.",
              "createdAt": "2020-10-27T23:43:09Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 13,
              "body": "This is a fine suggestion, but I worry that this is starting to load up on text that is duplicative of the main spec.",
              "createdAt": "2020-10-27T23:43:50Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nQUIC connections are closed either by expiration of an idle timeout, as\r\ndetermined by transport parameters, or by an\r\n```",
              "createdAt": "2020-10-27T23:44:15Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTA0NDg3",
          "commit": {
            "abbreviatedOid": "b1f324e"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-31T02:11:33Z",
          "updatedAt": "2020-10-31T02:11:33Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "I believe there's strong evidence it's not followed.  I believe I discussed this with @MikeBishop at some point, but I don't know if there's any relevant public data?",
              "createdAt": "2020-10-31T02:11:33Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQxMDMz",
          "commit": {
            "abbreviatedOid": "3ede78c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T11:19:06Z",
          "updatedAt": "2020-11-02T11:19:07Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Taking this suggestion but editing it a bit to reflect state of the literature AIUI.",
              "createdAt": "2020-11-02T11:19:06Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTQzNjA5",
          "commit": {
            "abbreviatedOid": "109610c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T11:23:05Z",
          "updatedAt": "2020-11-02T11:23:05Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "In this case, it's more illustrative than duplicative (establishing context for UDP keepalive and why we make the recommendations we do in the doc), so I'd suggest adding the ref (and have done in another commit)",
              "createdAt": "2020-11-02T11:23:05Z",
              "updatedAt": "2020-11-02T14:44:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzAyMTEw",
          "commit": {
            "abbreviatedOid": "226a888"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T14:55:21Z",
          "updatedAt": "2020-11-02T14:55:21Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Based on my vague memories of a study done at Microsoft several years ago, a 30-minute idle period on a TCP connection was tolerated by most firewalls, but beyond that you start finding your connection silently closed.",
              "createdAt": "2020-11-02T14:55:21Z",
              "updatedAt": "2020-11-02T14:55:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTQzMzQ4",
          "commit": {
            "abbreviatedOid": "226a888"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-03T01:33:06Z",
          "updatedAt": "2020-11-03T01:33:06Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "When I was at Microsoft I learned that 30 minutes (if I remember correctly, it was more like 28 or 29 for some unknown reason) was only available on certain ports (those used for push notifications) in mobile networks. Wired networks did tend to tolerate longer periods more broadly.",
              "createdAt": "2020-11-03T01:33:06Z",
              "updatedAt": "2020-11-03T01:33:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwNjMyNzM2",
      "title": "Further text on idle timeout/keep alive frequency",
      "url": "https://github.com/quicwg/ops-drafts/pull/126",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-10-27T10:14:39Z",
      "updatedAt": "2020-11-02T14:37:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "118-idle-ist-nicht-gleich-idle",
      "baseRefOid": "b1f324e3435e939482cd2b39b08b29defa3e4248",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-4",
      "headRefOid": "069188e9582e6cadab4e78462968930d040c31f2",
      "closedAt": "2020-11-02T14:37:10Z",
      "mergedAt": "2020-11-02T14:37:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "b7781a35bf9194446a2fd5ff59563d566536f52c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODAwNjIz",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T14:57:19Z",
          "updatedAt": "2020-10-27T14:57:20Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Wording suggestion, but I'm not sure what 'mobility' is in this context.  Is that moving connection migration(ie: Cell to Wifi) or something else?\r\n\r\n```suggestion\r\ndata centres in order to lower network and computational load. Sending PING\r\nframes more frequently than every 30 seconds over long idle periods may result\r\nin a too much unproductive traffic and power usage for some situations. Additionally,\r\ntime-outs shorter than 30 seconds can make it harder to handle short network\r\ninterruptions, such as VM migration or coverage loss during mobilty.\r\n```",
              "createdAt": "2020-10-27T14:57:19Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODcyMzQx",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "nibanks",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T15:58:44Z",
          "updatedAt": "2020-10-27T15:58:45Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think `a` is unnecessary here.\r\n```suggestion\r\nin too much unproductive traffic and power usage for some situations. Further\r\n```\r\nThough `too much unproductive` might also be better replaced with `unacceptable` as well.",
              "createdAt": "2020-10-27T15:58:45Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTIyNTAy",
          "commit": {
            "abbreviatedOid": "076aa62"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:46:57Z",
          "updatedAt": "2020-10-27T16:46:57Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "No necessarily mitigation (but could be as well) but in taps we recently discussed this example where you walk into an elevator and loose connectivity for a few seconds but then are connected immediately again to the same network when you step out. Maybe that not worth mentioning explicitly?",
              "createdAt": "2020-10-27T16:46:57Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTIzMjE5",
          "commit": {
            "abbreviatedOid": "4af90bf"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:47:38Z",
          "updatedAt": "2020-10-27T16:47:39Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Yes, I was looking for better wording here as well!",
              "createdAt": "2020-10-27T16:47:38Z",
              "updatedAt": "2020-10-27T16:49:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwNjQxODM4",
      "title": "More text on SPA",
      "url": "https://github.com/quicwg/ops-drafts/pull/127",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-10-27T10:28:58Z",
      "updatedAt": "2020-11-02T15:00:45Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-5",
      "headRefOid": "f287e9b40f474ac7a2160c9b76c59f7288aaf605",
      "closedAt": "2020-11-02T15:00:41Z",
      "mergedAt": "2020-11-02T15:00:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e6a044711ae2b33647241c4bd535a1bc46b07a30"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note: fixes #115 when merged.",
          "createdAt": "2020-11-02T14:59:24Z",
          "updatedAt": "2020-11-02T14:59:24Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjMyNjEz",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:09:01Z",
          "updatedAt": "2020-10-27T12:09:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\ngenerally recommended when migration is supported.\r\n```",
              "createdAt": "2020-10-27T12:09:01Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjMyOTE0",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:09:24Z",
          "updatedAt": "2020-10-27T12:09:24Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nConnection ID is strongly recommended. A non-empty Connection ID is\r\n```",
              "createdAt": "2020-10-27T12:09:24Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjM1MjA1",
          "commit": {
            "abbreviatedOid": "b959954"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T12:12:24Z",
          "updatedAt": "2020-10-27T12:12:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This is pretty woolly.  I think that you want to say why: identifying the connection that packets are destined for is more challenging if they don't include a connection ID and the source address might have changed.  An empty connection ID is only appropriate if the local address is unique, which opens up some negative consequences in terms of providing obvious linkability (though in practice this only works with limited numbers of connections on the target IP+port, so linkability is pretty much a given at that point.)",
              "createdAt": "2020-10-27T12:12:24Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3OTI1NTY0",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T16:50:01Z",
          "updatedAt": "2020-10-27T16:50:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I mainly wanted to give a recommendation that if you have no idea if you want/need a connection ID, you should probably have it (assuming that people agree that the right recommendation to give). I can add more explanation and also say something about linkability but I wanted to keep it simple... happy to take suggestions",
              "createdAt": "2020-10-27T16:50:01Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDE5MzAw",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "ekinnear",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T18:28:43Z",
          "updatedAt": "2020-10-27T18:28:44Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Tiny nit\r\n```suggestion\r\naddress as transport paramenter during the TLS handshake and the client can \r\nselect between the two if both are provided. See also Section 9.6 of {{!QUIC}}.\r\n```",
              "createdAt": "2020-10-27T18:28:43Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjMwMjcy",
          "commit": {
            "abbreviatedOid": "6e1915e"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-27T23:46:36Z",
          "updatedAt": "2020-10-27T23:51:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nconnection ID is strongly recommended. A non-empty connection ID is\r\n```\r\nI know that this likely offends some proper noun sensibilities, but we use lowercase for connection ID.",
              "createdAt": "2020-10-27T23:46:36Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\naddress as transport parameter during the TLS handshake and the client can \r\nselect between the two if both are provided. See also Section 9.6 of {{!QUIC}}.\r\n```\r\nWithout the typo.",
              "createdAt": "2020-10-27T23:47:06Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nafter the handshake, e.g., to move from an address that is shared by multiple\r\n```",
              "createdAt": "2020-10-27T23:47:23Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nafter the handshake, e.g., to move from an anycast address to a unicast\r\naddress. The server can provide an IPv4 and an IPv6\r\n```\r\n\r\nThough it might be better to instead say.\r\n\r\n```suggestion\r\nafter the handshake, e.g. to move from an address that is shared by multiple\r\nservers to an address that is unique to the server instance. The server can\r\nprovide an IPv4 and an IPv6\r\n```\r\n\r\n...as that allows for the possibility of both anycast -> unicast transitions and load balanced to non-load balanced transitions both.",
              "createdAt": "2020-10-27T23:48:17Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDQ2MDcz",
          "commit": {
            "abbreviatedOid": "f708df4"
          },
          "author": "ianswett",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-10-28T20:13:34Z",
          "updatedAt": "2020-10-28T20:35:58Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nconnection ID by the server is strongly recommended. A non-empty server\r\nconnection ID is also strongly recommended when migration is supported.\r\n```",
              "createdAt": "2020-10-28T20:13:34Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 4,
              "body": "Even if the client knows, it can't communicate that to the server in v1.\r\n\r\n```suggestion\r\nAs such if the client is known or likely to sit behind a NAT, use of the\r\n```",
              "createdAt": "2020-10-28T20:15:25Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nOnly the client can actively migrate. However, servers can indicate during the\r\n```",
              "createdAt": "2020-10-28T20:34:52Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nprovide an IPv4 and an IPv6 address in a transport parameter during the TLS\r\n```",
              "createdAt": "2020-10-28T20:35:40Z",
              "updatedAt": "2020-11-02T14:58:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzA3MTk4",
          "commit": {
            "abbreviatedOid": "f287e9b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-02T15:00:30Z",
          "updatedAt": "2020-11-02T15:00:30Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "We're going to go ahead and merge this for the 109 document deadline submission; please open another issue / provide a PR / haunt us otherwise if this needs more discussion.",
              "createdAt": "2020-11-02T15:00:30Z",
              "updatedAt": "2020-11-02T15:00:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 128,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0MDI2NzMy",
      "title": "Make applicability to V1 more emphatic.",
      "url": "https://github.com/quicwg/ops-drafts/pull/128",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #95.",
      "createdAt": "2020-11-02T12:31:31Z",
      "updatedAt": "2020-11-02T14:58:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "2ea9437089ce4d72bddff1a31c2c118962097dce",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "95-v1-for-reals-yo",
      "headRefOid": "2a50410dad9c2650c5a85175604c912956bcfb2d",
      "closedAt": "2020-11-02T14:58:50Z",
      "mergedAt": "2020-11-02T14:58:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "997cf66ff3758bf7f85dfb9cb62de7ad59f8514e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjkyNDky",
          "commit": {
            "abbreviatedOid": "548cc90"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-02T14:45:26Z",
          "updatedAt": "2020-11-02T14:45:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTI1NDA2",
      "title": "Review and fix section references into other QUIC docs.",
      "url": "https://github.com/quicwg/ops-drafts/pull/129",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "fixes #100",
      "createdAt": "2020-11-18T05:33:32Z",
      "updatedAt": "2020-11-18T06:45:50Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e6a044711ae2b33647241c4bd535a1bc46b07a30",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "100-section-references",
      "headRefOid": "cb06cb3a8bb87e693c59f4ec19c8138711d3b96c",
      "closedAt": "2020-11-18T06:45:50Z",
      "mergedAt": "2020-11-18T06:45:50Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "33f242ff2705cd363564c3f257ff9c80c9517401"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTIwNDQ4",
          "commit": {
            "abbreviatedOid": "4ab94b7"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-18T05:47:01Z",
          "updatedAt": "2020-11-18T05:47:01Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTIwODYz",
          "commit": {
            "abbreviatedOid": "4ab94b7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Correcting overcorrections regarding capitalization, but this seems benign.",
          "createdAt": "2020-11-18T05:48:13Z",
          "updatedAt": "2020-11-18T05:49:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nidentifiers to the application (see, for example, {{QUIC-HTTP}}, Section 6)\r\n```",
              "createdAt": "2020-11-18T05:48:14Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\ndefine application-specific error codes (see, for example, {{QUIC-HTTP}},\r\n```",
              "createdAt": "2020-11-18T05:48:22Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nSection 8.1). In the case of a grateful shut-down initiated by the application\r\n```",
              "createdAt": "2020-11-18T05:48:28Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            },
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n0-RTT MUST be idempotent (as specified in Section 5.6 in {{!QUIC-TLS}}).\r\n```",
              "createdAt": "2020-11-18T05:49:00Z",
              "updatedAt": "2020-11-18T06:28:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 132,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTM5MDIw",
      "title": "Remove normative language from the drafts",
      "url": "https://github.com/quicwg/ops-drafts/pull/132",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #85 ",
      "createdAt": "2020-11-18T06:07:38Z",
      "updatedAt": "2020-12-07T13:37:31Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "81aefccab30ae1d1b0d0771cbe18d95fceb833ac",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "85-no-normative",
      "headRefOid": "b64fdbea0b0b8a949800846be24aa3401f606bba",
      "closedAt": "2020-12-07T13:37:31Z",
      "mergedAt": "2020-12-07T13:37:30Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "note: don't merge yet, still need to make the pass on applicability but working on the CI issue at the moment",
          "createdAt": "2020-11-18T06:27:52Z",
          "updatedAt": "2020-11-18T06:27:52Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done. mergeable if ok.",
          "createdAt": "2020-11-18T10:16:07Z",
          "updatedAt": "2020-11-18T10:16:07Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 133,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIyOTU1MTU4",
      "title": "Migrate from CircleCI to Github Actions",
      "url": "https://github.com/quicwg/ops-drafts/pull/133",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #130 (but an admin will still need to disable CircleCI to keep it from continually complaining that there's no YAML)",
      "createdAt": "2020-11-18T06:42:02Z",
      "updatedAt": "2020-11-18T06:45:24Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e6a044711ae2b33647241c4bd535a1bc46b07a30",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "ci-github-actions",
      "headRefOid": "74fa8a5990b7bbb0bee62053cbe74c0e1dfc8b47",
      "closedAt": "2020-11-18T06:45:24Z",
      "mergedAt": "2020-11-18T06:45:24Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "a75f210cc3971ff74f158c51b66b59af304b929f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIzMDYyODIx",
      "title": "Remove QOS support and ECMP",
      "url": "https://github.com/quicwg/ops-drafts/pull/134",
      "state": "CLOSED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "proposed to fix #131 \r\n\r\n(if we decide that's what we want to do)",
      "createdAt": "2020-11-18T09:59:13Z",
      "updatedAt": "2020-12-07T13:31:13Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a4cdadc040c94f6f2aca3cfd82aed39bad890acf",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "131-qos-ecmp-bye",
      "headRefOid": "b691a2414d9963ff6ee18cd6afee7bd1914d911a",
      "closedAt": "2020-12-07T13:31:13Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Rolled over to #140, @mirjak to rewrite",
          "createdAt": "2020-12-07T13:31:13Z",
          "updatedAt": "2020-12-07T13:31:13Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzYxNjUw",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-11-18T11:42:15Z",
          "updatedAt": "2020-11-18T11:42:28Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This is likely bad advice anyway.  If we are going to signal intent to the network, it would be done explicitly (DSCP anyone?).  Inference is what gets us into messes.",
              "createdAt": "2020-11-18T11:42:16Z",
              "updatedAt": "2020-11-18T11:42:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc3ODIy",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:04:22Z",
          "updatedAt": "2020-11-18T12:04:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "I think we should keep this first part here. Especially the part saying \"If differential network treatment is desired,\r\n multiple QUIC connections to the same server might be used\" because the idea that QUIC packets of the same connection that carry different stream data could have different DCSPs came up more than once that that really is a bad idea for CC.",
              "createdAt": "2020-11-18T12:04:22Z",
              "updatedAt": "2020-11-18T12:04:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc4NjAx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:05:28Z",
          "updatedAt": "2020-11-18T12:05:29Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This part definitely needs rewriting or removing.",
              "createdAt": "2020-11-18T12:05:28Z",
              "updatedAt": "2020-11-18T12:05:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzc5NTAx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:06:46Z",
          "updatedAt": "2020-11-18T12:06:47Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "This is probably also fine (minus the ConnID part) and probably clearing that not QUIC connections might be equally tolerant to re-ordering. It's just more likely than for TCP that the implementation does that.",
              "createdAt": "2020-11-18T12:06:47Z",
              "updatedAt": "2020-11-18T12:06:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzg2Mjk5",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:16:42Z",
          "updatedAt": "2020-11-18T12:16:43Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "That is probably a deep enough conversation that I don't think it is worth including here.  Multiple connections might not give you what you want either.  And different congestion controllers might tolerate variations in QoS better.  The problem with all of this text is that it is creating the impression that underlying semantics can be inferred.  As a general theme, that is not good and so saying anything more than what is strictly factual is likely to encourage ossification of various sorts.",
              "createdAt": "2020-11-18T12:16:42Z",
              "updatedAt": "2020-11-18T12:16:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzg3NTA3",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:18:23Z",
          "updatedAt": "2020-11-18T12:18:23Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "This is equally bad.  It says that you can ECMP as you please and QUIC will struggle on.  Now, this is probably out of endpoint control anyway, but that doesn't need to be endorsed.  The assumption should be that flows get uniform treatment unless they explicitly request otherwise.",
              "createdAt": "2020-11-18T12:18:23Z",
              "updatedAt": "2020-11-18T12:18:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkwMzEx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:21:47Z",
          "updatedAt": "2020-11-18T12:21:48Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "So what I would like to say somewhere if that if an endpoint want different network treatment based on DSCP (ignoring that DSCP is not usable e2e) it should use different connections and set the same DSCP on all packets of the same connection, instead of getting the idea of setting different DSCP on different packets of the same connection.",
              "createdAt": "2020-11-18T12:21:47Z",
              "updatedAt": "2020-11-18T12:21:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkyMjIx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:24:08Z",
          "updatedAt": "2020-11-18T12:24:09Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Also I think the guidance for ECMP is still to schedule based on 5-tuple (and not on a per-packet base). I think that is still true for QUIC and we should state that.\r\n\r\nAs such if an endpoint wants to somehow make use of ECMP (e.g. in a datacenter setup) on need to consider to use different connections.\r\n\r\nI think we can also say that it is generally recommended to use as few QUIC connections as possible to the same server (for CC reasons).",
              "createdAt": "2020-11-18T12:24:08Z",
              "updatedAt": "2020-11-18T12:24:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzkyODQx",
          "commit": {
            "abbreviatedOid": "b691a24"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-18T12:24:59Z",
          "updatedAt": "2020-11-18T12:24:59Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Yes that's what the text was actually trying to say. As I said I think we need to re-phrase though.",
              "createdAt": "2020-11-18T12:24:59Z",
              "updatedAt": "2020-11-18T12:24:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 135,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIzNzkxNzA4",
      "title": "Edits, first batch",
      "url": "https://github.com/quicwg/ops-drafts/pull/135",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "These are pretty big.  If you would prefer that I create a PR for each individual commit, that can be done.\r\n\r\nIt turns out that there were a lot of things I found needed work.  For instance, this completely redoes the 0-RTT advice.",
      "createdAt": "2020-11-19T09:11:19Z",
      "updatedAt": "2020-12-07T13:24:49Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "a4cdadc040c94f6f2aca3cfd82aed39bad890acf",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "edits",
      "headRefOid": "7a99daf4499980206b6380dedff2111c27c0adfd",
      "closedAt": "2020-12-07T13:24:48Z",
      "mergedAt": "2020-12-07T13:24:48Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "81aefccab30ae1d1b0d0771cbe18d95fceb833ac"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "It did kinda snowball, for which I apologize.  I was trying to get something under your nose before I got swamped by meetings.  I am also on vacation next week.\r\n\r\nI'm reading through and there is some really good stuff in the doc.  I have started to open issues where I don't think the fixes are so simple.",
          "createdAt": "2020-11-20T07:54:44Z",
          "updatedAt": "2020-11-20T07:54:44Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MTQwMDQw",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Aside from the keep-alive tweak and the idempotence change, these are all editorial and LGTM, thanks!\r\n\r\nThe keepalive tweak is also good.\r\n\r\nHaving looked at https://github.com/quicwg/base-drafts/pull/4394, the text here is a good applicability-appropriate view on what's there now. assuming discussion there converges to mostly the same thing, I'd be happy to merge this.\r\n\r\n(in the future, no need to make tiny PRs, but splitting into \"editorial-rollup\" and \"substantive editorial changes\" would be nice to separate discussion, since the former shouldn't need much of it)",
          "createdAt": "2020-11-20T06:15:36Z",
          "updatedAt": "2020-11-20T06:15:36Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MTk4MTMx",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Changes look all ready good. Thanks!\r\n\r\nI just have left one minor comment/question to double-check before we merge.",
          "createdAt": "2020-12-04T18:26:43Z",
          "updatedAt": "2020-12-04T18:29:42Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "The new text does not mention PFS anymore. Do we need to retain that?",
              "createdAt": "2020-12-04T18:26:43Z",
              "updatedAt": "2020-12-04T18:29:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Njg1NDE2",
          "commit": {
            "abbreviatedOid": "7a99daf"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-06T09:11:53Z",
          "updatedAt": "2020-12-06T09:11:53Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "Forward secrecy (or post-compromise security to be precise) can be provided for 0-RTT under some conditions, though they are quite unusual in practice.  Generally, we wouldn't assume PFS for 0-RTT, but you can't claim that it is impossible to achieve.",
              "createdAt": "2020-12-06T09:11:53Z",
              "updatedAt": "2020-12-06T09:11:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 150,
      "id": "MDExOlB1bGxSZXF1ZXN0NTM1NTc4NDI5",
      "title": "Editorial Pass on quic-manageability",
      "url": "https://github.com/quicwg/ops-drafts/pull/150",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This has some updates and clarifications based on protocol evolution, which might be uncontroversial. There are also many typo fixes.\r\n\r\nPTAL",
      "createdAt": "2020-12-10T01:46:43Z",
      "updatedAt": "2020-12-21T10:14:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "martinduke/ops-drafts",
      "headRefName": "editorial",
      "headRefOid": "44ad37497161e900c0bc1eda5ba7cfb499072aa0",
      "closedAt": "2020-12-21T10:14:10Z",
      "mergedAt": "2020-12-21T10:14:10Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "742de9c79fb08a027a0370481ee14b0068fbf0c1"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Alright, everything is resolved except two MT comments about the client Initial ACK.\r\n\r\n- How do we phrase correctly that these cannot be decrypted by using the DCID?\r\n- Do these datagrams need to be 1200B or not? (I contend that there is no real need, but that's not what the spec says).",
          "createdAt": "2020-12-10T18:25:49Z",
          "updatedAt": "2020-12-10T18:25:49Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "body": "No, the greasing is draft-thomson-quic-bit-grease. As you said elsewhere,\nthe v1 standard itself says the fixed bit MUST be fixed.\n\nOn Thu, Dec 17, 2020 at 10:17 AM mirjak <notifications@github.com> wrote:\n\n> *@mirjak* commented on this pull request.\n> ------------------------------\n>\n> In draft-ietf-quic-manageability.md\n> <https://github.com/quicwg/ops-drafts/pull/150#discussion_r545301848>:\n>\n> > @@ -156,7 +151,8 @@ The following information is exposed in QUIC packet headers:\n>\n>  - \"fixed bit\": the second most significant bit of the first octet most QUIC\n>    packets of the current version is currently set to 1, for demultiplexing\n> -  with other UDP-encapsulated protocols.\n> +  with other UDP-encapsulated protocols. Endpoints that do not need this\n> +  demultiplexing function might negotiate the use of arbitrary values.\n>\n> section 3.1? I thought you actually can grease the fixed bit in QUICv1...?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/quicwg/ops-drafts/pull/150#discussion_r545301848>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AF2EYEOFNREU3AVRFTGY6MLSVJDLRANCNFSM4UUKK6VA>\n> .\n>\n",
          "createdAt": "2020-12-17T19:14:25Z",
          "updatedAt": "2020-12-17T19:14:25Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzgzMjUx",
          "commit": {
            "abbreviatedOid": "8522fac"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T03:01:33Z",
          "updatedAt": "2020-12-10T03:16:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The two mentions of h3 here are disjoint.  Suggest moving the \"semantics as needed for HTTP(/3)\" later.",
              "createdAt": "2020-12-10T03:01:33Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nQUIC version 1 packets compared to some pre-standard versions.\r\n```\r\n\r\nNo mention there of Facebook's versions, for instance.",
              "createdAt": "2020-12-10T03:03:03Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 108,
              "body": "Not sure if this is completely wise before it is adopted.  Of course, the statement will remain true nonetheless, even if that is never standardized.",
              "createdAt": "2020-12-10T03:03:24Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\n  For example the QUIC version 1 uses version 0x00000001. Operators\r\n```\r\n\r\nIf you are removing \"QUIC is a moving target\", then this will be the case.\r\n\r\nUnless it isn't, but that will be a minor catastrophe that we can work through if it happens.",
              "createdAt": "2020-12-10T03:04:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 153,
              "body": "```suggestion\r\nthe use of Alt-Svc for discovery of HTTP/3 services on other ports.\r\n```",
              "createdAt": "2020-12-10T03:05:48Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 151,
              "body": "Alt-Svc use is defined in QUIC-HTTP:\r\n\r\n```suggestion\r\nrespective registered service. For example, {{QUIC-HTTP}} specifies\r\n```",
              "createdAt": "2020-12-10T03:06:09Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 162,
              "body": "It is possible that the client will not include an Initial packet in its second flight.  Perhaps more importantly, if the client sends a Handshake in the same datagram, it is not required to pad that datagram.",
              "createdAt": "2020-12-10T03:07:56Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 235,
              "body": "```suggestion\r\nVersion Negotiation packets are not intrinsically protected, but QUIC versions\r\n```",
              "createdAt": "2020-12-10T03:09:31Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 238,
              "body": "Not sure if this is the reaction is correct.  \"The connection\" isn't a notion that makes sense when VN is involved because there are multiple connection attempts involved: one that elicited the VN, and one that used the VN.  Neither will result in a connection being established if there was tampering.\r\n\r\nMaybe \"might terminate the connection attempt\".",
              "createdAt": "2020-12-10T03:11:18Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 308,
              "body": "It really does include Retry.  Though those don't include TLS handshake messages.",
              "createdAt": "2020-12-10T03:12:00Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 315,
              "body": "```suggestion\r\nheuristics similar to those used to detect TLS over TCP. A client initiating a\r\n```",
              "createdAt": "2020-12-10T03:12:11Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 318,
              "body": "```suggestion\r\nmay be reordered in the network, 0-RTT Protected data packets could be\r\n```",
              "createdAt": "2020-12-10T03:12:44Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 383,
              "body": "```suggestion\r\nlength integer as specified in Section 16 of {{QUIC-TRANSPORT}}.\r\n```",
              "createdAt": "2020-12-10T03:13:52Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 397,
              "body": "I read this at first and thought \"wat?\", but I think that you just have an extra negation here:\r\n\r\n```suggestion\r\nNote that client Initial packets that contain the Client Hello message\r\n```",
              "createdAt": "2020-12-10T03:14:52Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 398,
              "body": "```suggestion\r\ndo not always use the Destination Connection ID that was used to\r\n```",
              "createdAt": "2020-12-10T03:15:06Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 423,
              "body": "```suggestion\r\ntimers can be lower, in the range of 15 to 30 seconds. In contrast,\r\n```",
              "createdAt": "2020-12-10T03:15:48Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MDk0Mjgw",
          "commit": {
            "abbreviatedOid": "8522fac"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks. These look good. I agree with MT's comments and suggestions.",
          "createdAt": "2020-12-10T11:16:46Z",
          "updatedAt": "2020-12-10T11:25:45Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Yes, I agree that we should not cite the draft here. However, we could say that the network cannot rely on this bit as the endpoint might decide to not support it (if not needed).",
              "createdAt": "2020-12-10T11:16:46Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 14,
              "body": "I would move only the reference to the quic-http draft. Because the first mention if https is the protocol in general, while later it specifically takes about h3.",
              "createdAt": "2020-12-10T11:16:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 423,
              "body": "I think \"often\" is correct here but fine...",
              "createdAt": "2020-12-10T11:23:35Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzYwNDE0",
          "commit": {
            "abbreviatedOid": "a6e5ec0"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T16:13:10Z",
          "updatedAt": "2020-12-10T16:13:11Z",
          "comments": [
            {
              "originalPosition": 397,
              "body": "What I'm trying to refer to here is the Initial ACK. Observers should expect that a stateless DPI will like fail to decrypt ~50% of client Initial packets. I think this proposed change inverts the meaning?",
              "createdAt": "2020-12-10T16:13:10Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzY1NDE0",
          "commit": {
            "abbreviatedOid": "d62255e"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-10T16:17:56Z",
          "updatedAt": "2020-12-10T16:17:56Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "Did we make the Initial ACK formally optional, or are clients just omitting it as an optimization?\r\n\r\nSec 14.1 says \"A client MUST expand the payload of all UDP datagrams carrying Initial packets to at least the smallest allowed maximum datagram size of 1200 bytes by adding PADDING frames to the Initial packet or by coalescing the Initial packet\" without any qualification about Handshake.\r\n\r\nMy reading of the text is that it has to be 1200B, whether via PADDING or coalescing up to that point. I understand that there is little point to requiring that padding.\r\n\r\n",
              "createdAt": "2020-12-10T16:17:56Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDE2NzM5",
          "commit": {
            "abbreviatedOid": "9420351"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T22:41:52Z",
          "updatedAt": "2020-12-15T22:41:53Z",
          "comments": [
            {
              "originalPosition": 397,
              "body": "ACK.  I just misread this.  The double-negation caught me out.  I think that you might want to try to work on this.  Maybe \"client Initial packets other than those in the very first flight sent by the client\"\r\n\r\nIt's got nothing to do with the ClientHello, it's whether the client has seen packets from the server yet.",
              "createdAt": "2020-12-15T22:41:53Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDI2Mjk2",
          "commit": {
            "abbreviatedOid": "9420351"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T22:48:14Z",
          "updatedAt": "2020-12-15T22:48:15Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "Yes, if the client sends an Initial packet, it needs to be padded.  That's pretty clear.  My point is that it might not send it and so not cause that rule to apply.\r\n\r\nLet's say that the client does send an Initial ACK before it discards keys.  That is lost.  It doesn't retransmit it because the keys are gone.  The observer won't see that; they only see the Handshake+ packet that is sent later.\r\n\r\nAnd if the client does discard keys too soon, the protocol doesn't stop working and no rules have been broken.\r\n\r\nI'm just asking that you be a little more careful and maybe say that a handshake will look like this *in most cases*.  There are too many ways this could be wrong and you used \"must\".",
              "createdAt": "2020-12-15T22:48:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDU0ODg5",
          "commit": {
            "abbreviatedOid": "701098d"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-15T23:06:50Z",
          "updatedAt": "2020-12-15T23:06:51Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "OK, rewrote it, PTAL",
              "createdAt": "2020-12-15T23:06:51Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDcwMDQx",
          "commit": {
            "abbreviatedOid": "701098d"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-15T23:16:58Z",
          "updatedAt": "2020-12-15T23:17:16Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "```suggestion\r\nagainst amplification attacks and verifies that the network path meets minimum\r\n```",
              "createdAt": "2020-12-15T23:16:58Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODA5Mjg1",
          "commit": {
            "abbreviatedOid": "66c79d1"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Sorry, I have a few more things I just found (not all related to your edits tough). But hopefully easy to fix/decide.",
          "createdAt": "2020-12-17T17:09:05Z",
          "updatedAt": "2020-12-17T17:26:17Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Actually not sure here. The assumption wasn't necessary that the proxy can authenticate as the server (because then I guess it is the server) but probably rather that it would authenticate as an own entity offering a proxy service.",
              "createdAt": "2020-12-17T17:09:05Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 81,
              "body": "```suggestion\r\nimage described herein may change in future versions of the protocol, except\r\n```\r\nremove leading space...",
              "createdAt": "2020-12-17T17:10:27Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 105,
              "body": "Actually this new sentence does not seem right. The transport draft says:\r\n\r\n```\r\n   Fixed Bit:  The next bit (0x40) of byte 0 is set to 1.  Packets\r\n      containing a zero value for this bit are not valid packets in this\r\n      version and MUST be discarded.\r\n```",
              "createdAt": "2020-12-17T17:12:57Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n  identifies the version used for that packet. During Version\r\n```\r\n```suggestion\r\n  identifies the version used for that packet. Note that during Version\r\n```",
              "createdAt": "2020-12-17T17:13:49Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 126,
              "body": "Are these convention still true? I guess we don't have that in the transport spec and therefore should probably also remove it here...?",
              "createdAt": "2020-12-17T17:15:53Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 243,
              "body": "```suggestion\r\nTherefore any manipulation of this list will be detected and may cause the\r\n```\r\nas we don't know what future version will do...",
              "createdAt": "2020-12-17T17:19:00Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 289,
              "body": "```suggestion\r\neven be negotiated during the handshake via the use of transport parameters.\r\n```",
              "createdAt": "2020-12-17T17:19:55Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            },
            {
              "originalPosition": 335,
              "body": "```suggestion\r\nTherefore, the role as a client or server can generally be confirmed by an on-\r\n```\r\n",
              "createdAt": "2020-12-17T17:21:55Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODI4MTk0",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:30:42Z",
          "updatedAt": "2020-12-17T17:30:42Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "How about \"Many QUIC versions that start with 0xff\"?  This is a statement of fact, though you're right that in the future other stuff could be in this space.",
              "createdAt": "2020-12-17T17:30:42Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODMxMzAw",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:33:41Z",
          "updatedAt": "2020-12-17T17:33:41Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "\"Transparent QUIC proxies\"? You're right that if the client consents to a proxy (e.g. MASQUE) this isn't strictly true.",
              "createdAt": "2020-12-17T17:33:41Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODMzNzAy",
          "commit": {
            "abbreviatedOid": "2729dcd"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T17:36:28Z",
          "updatedAt": "2020-12-17T17:36:28Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "This is another warning about the grease, of course. I think it makes sense to include, but we have the other warning about grease in Section 3.1. I'll delete the sentence to move things along, because it's not a big deal.",
              "createdAt": "2020-12-17T17:36:28Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODU2Nzk4",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:04:14Z",
          "updatedAt": "2020-12-17T18:04:14Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "Yep that's probably good to note!",
              "createdAt": "2020-12-17T18:04:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODY2ODMz",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:17:13Z",
          "updatedAt": "2020-12-17T18:17:13Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "section 3.1? I thought you actually can grease the fixed bit in QUICv1...?",
              "createdAt": "2020-12-17T18:17:13Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODY5Mjg2",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:20:26Z",
          "updatedAt": "2020-12-17T18:20:27Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I think the problem is about the term proxy. For me the term mean only that there is some entity between the client and the server. The whole point of this section was rather to say that a QUIC proxy cannot be transparent in a sense that it can terminate a connection without anybody noticing. And yes, I do have masque in mind.",
              "createdAt": "2020-12-17T18:20:26Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODgwNjA4",
          "commit": {
            "abbreviatedOid": "a99daf3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-17T18:35:39Z",
          "updatedAt": "2020-12-17T18:35:39Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Ah now I see that you added the term \"transparent QUIC proxy\" in the text. Not sure if I want to coin that term here. Maybe we can just move the part about credentials into a separate sentence, e.g.:\r\n\r\n```\r\nA proxy can either explicit identify itself as providing a proxy service or may share the TLS credentials to\r\nauthenticate as the server and (in some cases) client acting as a front-facing instance for the offering service itself.\r\n```",
              "createdAt": "2020-12-17T18:35:39Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MzAyMTQ3",
          "commit": {
            "abbreviatedOid": "2c0bd79"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T08:49:14Z",
          "updatedAt": "2020-12-18T08:49:15Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Okay, actually I think it would be important here to note that this bit can/should not be used to identify QUIC (rather than talking specifically about greasing). How about saying something like: \"Even though this bit is defined as fixed in the QUICv1 base spec, this bit is not invariant between versions or could even still be changed in an extension, therefore it can not be used an identifier for QUIC.\"",
              "createdAt": "2020-12-18T08:49:14Z",
              "updatedAt": "2020-12-18T18:15:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 153,
      "id": "MDExOlB1bGxSZXF1ZXN0NTM2NDIxMjMx",
      "title": "More applicability edits",
      "url": "https://github.com/quicwg/ops-drafts/pull/153",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Quite a few pieces of text in here that needed corrections.  As before, I'm happy to pull out individual commits so we can discuss.",
      "createdAt": "2020-12-11T02:30:02Z",
      "updatedAt": "2020-12-21T10:14:41Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "martinthomson/quic-ops",
      "headRefName": "edits2",
      "headRefOid": "fd504205be1c0b6434291485480f69ac0773b867",
      "closedAt": "2020-12-21T10:14:41Z",
      "mergedAt": "2020-12-21T10:14:41Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e78ca3d0c227fd227b56b188067909727051e5f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0Nzg5NTQz",
          "commit": {
            "abbreviatedOid": "8496a16"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-17T16:46:52Z",
          "updatedAt": "2020-12-17T17:05:43Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "```suggestion\r\npaths at once. Probing packets can be used to perform address validation, measure\r\n```",
              "createdAt": "2020-12-17T16:46:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 139,
              "body": "Thanks this wording is good now :-)",
              "createdAt": "2020-12-17T16:47:44Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 53,
              "body": "You removed the note about packet length of 1200 bytes. This information was there as this section is kind of describing everything you might want to know about packetization. However, I guess this point is really not important for an application. So I'm fine removing it.",
              "createdAt": "2020-12-17T16:49:39Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 171,
              "body": "Why did you remove this sentence?\r\n\r\n```\r\nIn the case of a grateful shut-down initiated by the application\r\n after application layer negotiation, a NO_ERROR code is expected\r\n```\r\n\r\nNot that the point is super important but wondering is there is an actual reason to remove it...?",
              "createdAt": "2020-12-17T16:53:48Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 223,
              "body": "```suggestion\r\ndatagrams to connections successfully if these values change, and thereby effectively disabling the mitigation support of QUIC.\r\n```",
              "createdAt": "2020-12-17T16:57:21Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 244,
              "body": "```suggestion\r\nconnection. See further {{QUIC-LB}}.\r\n```",
              "createdAt": "2020-12-17T17:00:44Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 255,
              "body": "Actually I'm not sure here. If I remember correctly this text was provided by someone else and it's not entirely clear to me anymore what this stage is supposed to achieve....",
              "createdAt": "2020-12-17T17:05:31Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTMwOTIx",
          "commit": {
            "abbreviatedOid": "8496a16"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T02:26:27Z",
          "updatedAt": "2020-12-18T02:31:52Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Yeah, it was not precise enough for me and I don't think that it has much bearing on usage (it's more for implementation and so the core spec can deal with that).",
              "createdAt": "2020-12-18T02:26:27Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 171,
              "body": "The NO_ERROR thing is an HTTP error code, which isn't generic advice.  But more concretely, when you gracefully shutdown, you might agree to stay quite and run down the idle timeout instead.  Or there might be other ways of signaling clean shutdown prior to sending CONNECTION_CLOSE.  I just thought that this was too specific.",
              "createdAt": "2020-12-18T02:29:19Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 223,
              "body": "How about:\r\n\r\n```suggestion\r\ndatagrams to connections successfully if these values change, making migration\r\neffectively impossible.\r\n```",
              "createdAt": "2020-12-18T02:30:06Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            },
            {
              "originalPosition": 255,
              "body": "This was my text originally.  But I got it backwards.  You can't complete an upgrade that adds a new version and end with the assumption that the new version is disabled.  I probably meant \"enabled\".",
              "createdAt": "2020-12-18T02:31:37Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjM4ODgx",
          "commit": {
            "abbreviatedOid": "7ec5936"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T07:53:24Z",
          "updatedAt": "2020-12-18T07:53:24Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Ah, didn't realise that an HTTP errs code. Do we need to say more here?",
              "createdAt": "2020-12-18T07:53:24Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjM5NDQw",
          "commit": {
            "abbreviatedOid": "7ec5936"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-18T07:54:09Z",
          "updatedAt": "2020-12-18T07:54:09Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Ah okay. However, what's actually meant by validation in this phase?",
              "createdAt": "2020-12-18T07:54:09Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyMzMx",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:55:53Z",
          "updatedAt": "2020-12-20T09:55:53Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "I don't think so.  This is pretty well treated in the main spec and you have discussion on idle timeouts that seems ample.",
              "createdAt": "2020-12-20T09:55:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyMzg1",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:56:35Z",
          "updatedAt": "2020-12-20T09:56:36Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Validation being authentication of the values.  Maybe I can use that instead.",
              "createdAt": "2020-12-20T09:56:35Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDAyNDE1",
          "commit": {
            "abbreviatedOid": "a9b19c3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-20T09:56:53Z",
          "updatedAt": "2020-12-20T09:56:54Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "```suggestion\r\nThe third stage completes the process by enabling authentication of the negotiated\r\n```",
              "createdAt": "2020-12-20T09:56:53Z",
              "updatedAt": "2020-12-20T09:59:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 154,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzM2MjE3",
      "title": "encoding limits affect connections too; fix #136",
      "url": "https://github.com/quicwg/ops-drafts/pull/154",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T08:47:32Z",
      "updatedAt": "2020-12-21T10:17:10Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "99a28ed67e4794b4cb14ba746f71bd1b8d3fcfa9",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "unlikely-event-136",
      "headRefOid": "37e231741ee082b63c493c70d19e321c2c1ea7c9",
      "closedAt": "2020-12-21T10:17:06Z",
      "mergedAt": "2020-12-21T10:17:05Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjI5NDk4",
          "commit": {
            "abbreviatedOid": "76a2f01"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Pretty good.  Thanks.",
          "createdAt": "2020-12-21T09:09:54Z",
          "updatedAt": "2020-12-21T09:10:16Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Splitting this paragraph here might make it flow better.",
              "createdAt": "2020-12-21T09:09:54Z",
              "updatedAt": "2020-12-21T10:15:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjQ1NDA1",
          "commit": {
            "abbreviatedOid": "76a2f01"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T09:35:11Z",
          "updatedAt": "2020-12-21T09:35:11Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjcwOTU1",
          "commit": {
            "abbreviatedOid": "37e2317"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-21T10:16:14Z",
          "updatedAt": "2020-12-21T10:16:15Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "thanks, done",
              "createdAt": "2020-12-21T10:16:14Z",
              "updatedAt": "2020-12-21T10:16:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 155,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzg5MzQy",
      "title": "remove example conn ID length encoding",
      "url": "https://github.com/quicwg/ops-drafts/pull/155",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #144",
      "createdAt": "2020-12-21T10:23:47Z",
      "updatedAt": "2020-12-21T10:25:30Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-5",
      "headRefOid": "ecc0e6b0c8b244b501a7fbb072eb9647cf9c0faa",
      "closedAt": "2020-12-21T10:25:30Z",
      "mergedAt": "2020-12-21T10:25:29Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "75ceb243db7763eeaa80bcfcf55d4c5f760b461b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjc2NjA4",
          "commit": {
            "abbreviatedOid": "ecc0e6b"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:25:25Z",
          "updatedAt": "2020-12-21T10:25:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 156,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzg5ODQy",
      "title": "reverse order of \"no critical interface\", fix #138",
      "url": "https://github.com/quicwg/ops-drafts/pull/156",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "after discussion with @mirjak, we probably do want to keep the information that \"all streams are equal\" here. \r\nReverse the order of the sentences here to not bury the lede.",
      "createdAt": "2020-12-21T10:24:45Z",
      "updatedAt": "2020-12-22T11:29:37Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "c573c8a296bb600d6fcaad49ec37ab0e4e3c9671",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "138-no-critical",
      "headRefOid": "b2579e5a1f2066565c89a2a79105ab5619927019",
      "closedAt": "2020-12-22T11:29:36Z",
      "mergedAt": "2020-12-22T11:29:36Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e949a1ef45e167fb8d4328d6271a37b07787d90d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjgwNjM5",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:31:55Z",
          "updatedAt": "2020-12-21T10:31:55Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njc3MjEx",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "This reads better for sure, aside from an odd bit of phrasing.",
          "createdAt": "2020-12-21T21:34:14Z",
          "updatedAt": "2020-12-21T21:36:04Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "\"indicate QUIC to\" is awkward phrasing.",
              "createdAt": "2020-12-21T21:34:14Z",
              "updatedAt": "2020-12-22T11:28:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDEwNzc4",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T11:27:20Z",
          "updatedAt": "2020-12-22T11:27:21Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "that's because there's a to too few there...",
              "createdAt": "2020-12-22T11:27:20Z",
              "updatedAt": "2020-12-22T11:28:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MDExODUy",
          "commit": {
            "abbreviatedOid": "433adc8"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T11:29:08Z",
          "updatedAt": "2020-12-22T11:29:09Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "or on review, the application can reset the connection using an interface QUIC provides it. so, reworded.",
              "createdAt": "2020-12-22T11:29:09Z",
              "updatedAt": "2020-12-22T11:29:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 157,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzMzkwNjM3",
      "title": "additions on integrity protection",
      "url": "https://github.com/quicwg/ops-drafts/pull/157",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "addresses #142 ",
      "createdAt": "2020-12-21T10:26:10Z",
      "updatedAt": "2020-12-21T10:32:31Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "75ceb243db7763eeaa80bcfcf55d4c5f760b461b",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-6",
      "headRefOid": "fada3d2da3d66d1a7e661a21e37eaaf0462db7a0",
      "closedAt": "2020-12-21T10:32:31Z",
      "mergedAt": "2020-12-21T10:32:31Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "e50f8444041307c94063a50da168430c2fa1f004"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 158,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAwODA1",
      "title": "clarify DDoS, remove LB reference, fix #147",
      "url": "https://github.com/quicwg/ops-drafts/pull/158",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T10:45:45Z",
      "updatedAt": "2020-12-22T15:46:33Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "147-ddos-no-lb",
      "headRefOid": "70676a361a4230a058f29e1851dd93f55501878c",
      "closedAt": "2020-12-22T11:23:20Z",
      "mergedAt": "2020-12-22T11:23:20Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "aa92118c3ebf70aee9b4421b9df3a488d480eab2"
      },
      "comments": [
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Merged...\r\n\r\n> If you want to support connection migration, there's nothing you can do in this space except the Retry Service stuff in QUIC-LB, is there?\r\n\r\nwith the neurons I have left on 22 December, this seems broadly true. I'm not sure we should be too prescriptive about load balancing in this doc, though -- in part because I suspect the challenge of handling DDoS attacks using QUIC traffic will lead to divergent innovation in the LB space in the near term...",
          "createdAt": "2020-12-22T11:26:46Z",
          "updatedAt": "2020-12-22T11:26:46Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So if the 5-tuple changes because of NAT, the connection ID might actually not change. So in case of DDoS you might want to look at the connection ID to at cover those cases. For DDoS you usually don't need a hard guarantee to track all flows (if you block a flow incorrectly, it has to reconnect), but where you can track the flow when the 5-tuple changes, it might actually help. That is what this paragraph is/was about.",
          "createdAt": "2020-12-22T15:46:33Z",
          "updatedAt": "2020-12-22T15:46:33Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Mjg5NjIx",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T10:47:10Z",
          "updatedAt": "2020-12-21T10:47:10Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTI3MTYy",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This PR removes the problems I cited in the issue. Ship it.\r\n\r\nI wonder if we should hit the point in the last sentence a little harder. If you want to support connection migration, there's nothing you can do in this space except the Retry Service stuff in QUIC-LB, is there?",
          "createdAt": "2020-12-21T17:00:51Z",
          "updatedAt": "2020-12-21T17:00:51Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1MTk0",
          "commit": {
            "abbreviatedOid": "70676a3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T21:48:04Z",
          "updatedAt": "2020-12-21T21:48:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 159,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAxMjU2",
      "title": "paragraph on CID in mitigating timing linkability section",
      "url": "https://github.com/quicwg/ops-drafts/pull/159",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #151",
      "createdAt": "2020-12-21T10:46:36Z",
      "updatedAt": "2020-12-21T10:52:11Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-7",
      "headRefOid": "6b13eb09b2bf4b099eaf9b4bae66c7698860848f",
      "closedAt": "2020-12-21T10:52:11Z",
      "mergedAt": "2020-12-21T10:52:11Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "1281ac73bb2d9a42b60b215d85f8bc2205e36780"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 160,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDAyMzUy",
      "title": "fix abrupt ingress close, fix #137",
      "url": "https://github.com/quicwg/ops-drafts/pull/160",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T10:48:37Z",
      "updatedAt": "2020-12-22T11:30:17Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "e50f8444041307c94063a50da168430c2fa1f004",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "137-no-can-close-ingress",
      "headRefOid": "a5bda1149d67b22a601176abc8edf7261d832f32",
      "closedAt": "2020-12-22T11:30:17Z",
      "mergedAt": "2020-12-22T11:30:17Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5f2fa61e62672925133609eab053f73c057cd4e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1Mzcw",
          "commit": {
            "abbreviatedOid": "a5bda11"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T21:48:25Z",
          "updatedAt": "2020-12-21T21:48:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 161,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDE1Mzc0",
      "title": "Please don't drop new versions, fix #145.",
      "url": "https://github.com/quicwg/ops-drafts/pull/161",
      "state": "MERGED",
      "author": "britram",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-21T11:11:43Z",
      "updatedAt": "2020-12-22T11:22:36Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "1281ac73bb2d9a42b60b215d85f8bc2205e36780",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "145-no-shiny-drop-plz",
      "headRefOid": "66016f76cb02821d413b4180e427eef491e1b6cc",
      "closedAt": "2020-12-22T11:22:36Z",
      "mergedAt": "2020-12-22T11:22:36Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "6d430b5a28a292360ae125cbd1ac81837e8d567c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTM3NDE1",
          "commit": {
            "abbreviatedOid": "66016f7"
          },
          "author": "martinduke",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-21T17:16:19Z",
          "updatedAt": "2020-12-21T17:16:19Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2Njg1MDA0",
          "commit": {
            "abbreviatedOid": "66016f7"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Wishful thinking, but as you say, can't hurt.",
          "createdAt": "2020-12-21T21:47:42Z",
          "updatedAt": "2020-12-21T21:47:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 162,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTc3Njk1",
      "title": "Capitalization...",
      "url": "https://github.com/quicwg/ops-drafts/pull/162",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #152",
      "createdAt": "2020-12-22T15:01:40Z",
      "updatedAt": "2021-01-06T07:57:40Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-8",
      "headRefOid": "d632bcbd35a75a9fe77919e0633755c529fc1efd",
      "closedAt": "2021-01-06T07:57:40Z",
      "mergedAt": "2021-01-06T07:57:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "7aa32220457bac9f70911b5be3c63f83313398c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY2MzI0",
          "commit": {
            "abbreviatedOid": "d632bcb"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-12-22T21:04:51Z",
          "updatedAt": "2020-12-22T21:04:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 163,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTgwODUz",
      "title": "Capitalization once more...",
      "url": "https://github.com/quicwg/ops-drafts/pull/163",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #152",
      "createdAt": "2020-12-22T15:06:42Z",
      "updatedAt": "2021-01-06T07:58:21Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-9",
      "headRefOid": "6297750fe1682e8ab0a69e418b736a59318b37e6",
      "closedAt": "2021-01-06T07:58:21Z",
      "mergedAt": "2021-01-06T07:58:21Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "27703dc991c57e1f75a60a497d2fadc6be10a5e2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 164,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjI4MjQ0",
      "title": "Proposal for rewrite of QoS section",
      "url": "https://github.com/quicwg/ops-drafts/pull/164",
      "state": "OPEN",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #140 (hopefully)",
      "createdAt": "2020-12-22T16:25:04Z",
      "updatedAt": "2021-01-11T14:36:54Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-10",
      "headRefOid": "cd3a62cae215ec8776364f84583be08778a7ce90",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY2ODc4",
          "commit": {
            "abbreviatedOid": "fdf8a19"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T21:06:01Z",
          "updatedAt": "2020-12-22T21:16:05Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nnot recommended to use different DiffServ Code Points (DSCPs) {{?RFC2475}} for\r\n```",
              "createdAt": "2020-12-22T21:06:02Z",
              "updatedAt": "2021-01-06T17:37:20Z"
            },
            {
              "originalPosition": 11,
              "body": "Does it?\r\n\r\nWhat you might say instead is:\r\nThe congestion control and loss recovery mechanisms defined in {{QUIC-RECOVERY}}, which are optional by the way, function best if the network provides similar treatment to every packet.  Marking packets with different DSCP is likely to result in variations in order, delivery rate, and drop rate.  Using ECMP to distribute packets from a single flow across multiple network paths could produce similar effects.   These variations could adversely affect performance.\r\n\r\nThe improved feedback in QUIC relative to TCP might mean that QUIC is more able to tolerate variations in packet delivery.  There are also opportunities to deploy loss detection and congestion control algorithms that are more aware of these, but these algorithms do not currently exist.\r\n\r\nGetting differential treatment might be better served by using independent connections, but this has other effects, such as increased overheads and competing congestion control.",
              "createdAt": "2020-12-22T21:16:01Z",
              "updatedAt": "2021-01-06T17:37:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzg5Nzk5",
          "commit": {
            "abbreviatedOid": "fdf8a19"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Better than what's there; suggest one edit (and taking Martin's rephrase suggestion)",
          "createdAt": "2021-01-06T08:02:36Z",
          "updatedAt": "2021-01-06T08:04:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "+1 to Martin's suggestion here.",
              "createdAt": "2021-01-06T08:02:36Z",
              "updatedAt": "2021-01-06T17:37:20Z"
            },
            {
              "originalPosition": 40,
              "body": "...expected by implementations of the protocol?\r\n\r\nI'd reword slightly:\r\n\r\n\"However, the common assumption remains that ECMP is 5-tuple-based, and all packets belonging to the same QUIC connection will get the same treatment.\"",
              "createdAt": "2021-01-06T08:04:22Z",
              "updatedAt": "2021-01-06T17:37:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTE4NTEw",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T17:51:54Z",
          "updatedAt": "2021-01-06T17:51:55Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Happy to adapt the text but the text as proposed by @martinthomson doesn't seem fully correct to me. Two points: first using _some kind of_ congestion control and recovery is not optional and all of these algorithms have to assume that all packets take the same path/get the same treat because otherwise you will need multiple congestion controller instances and that's not some we have in QUICv1. And second, algorithms do exist. TCP RACK is more re-ordering resilience and the time-based threshold in QUIC is as well. My assumption was/is also that they will more likely be implemented/used/deployed in QUIC than in TCP. \r\n\r\nHowever, we should probably see if we agree what we want to recommend. I think the right thing to recommend is that you should only use one DCSP with one QUIC connection and if you think you need more than one DCSP for your traffic, you should use multiple QUIC. Not sure if @martinthomson agrees to the second part?\r\n\r\nI was also trying to specifically focus this section on DCSP and EMCP (and not QoS in general to much - see new section title) because that the kind of questions I heart.",
              "createdAt": "2021-01-06T17:51:54Z",
              "updatedAt": "2021-01-06T17:51:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTIwNjAx",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T17:54:46Z",
          "updatedAt": "2021-01-06T17:54:47Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "I meant to say:  at time of writing of this document (and the quic spec) that was/is the community assumption. \r\n\r\nIs there a reason why you changed flow-based to 5-tuple-based? I believe flow is more correct as there might be ECMP scheme that take the IP flow label into account.",
              "createdAt": "2021-01-06T17:54:47Z",
              "updatedAt": "2021-01-06T17:54:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDA2MTMw",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-11T14:31:54Z",
          "updatedAt": "2021-01-11T14:31:55Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "was trying to be more precise (with 5-tuple), but as it turns out, that's wrong (DSCP, Flow Label in v6), so... no. leave it \"flow-based\"",
              "createdAt": "2021-01-11T14:31:54Z",
              "updatedAt": "2021-01-11T14:31:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDEwODM1",
          "commit": {
            "abbreviatedOid": "cd3a62c"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-01-11T14:36:50Z",
          "updatedAt": "2021-01-11T14:36:54Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "after discussion with Mirja... the key point here is that all packets handled by the same congestion controller state should use the same DSCP (because they assume the same path treatment), and this is true of all congestion controllers. This is a useful insight, but it belongs in applicability.\r\n\r\nA corollary of that belongs here: boxes that are Trying To Help by splitting DSCP on flows *really shouldn't do that* on QUIC, not least because they can't get any information from DPI on which packets need which labels.",
              "createdAt": "2021-01-11T14:36:50Z",
              "updatedAt": "2021-01-11T14:36:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 166,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjU0Njky",
      "title": "Pointers to sec considerations of quic docs and some more text",
      "url": "https://github.com/quicwg/ops-drafts/pull/166",
      "state": "OPEN",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #141",
      "createdAt": "2020-12-22T17:14:08Z",
      "updatedAt": "2021-01-06T18:07:26Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-11",
      "headRefOid": "1a49783afe8d9ac91256fee29db550b3b64d82cf",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is a proposal to mention some more things specifically in the security considerations section. At minimum we should add a sentence pointing the reader at the security consideration of the transport and tis drafts. I additionally, more or less, copied some notes from the transport draft that I found particular relevant for reader of the manageability draft. Comments welcome! ",
          "createdAt": "2020-12-22T17:16:00Z",
          "updatedAt": "2020-12-22T17:16:00Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzY1ODYx",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-12-22T21:03:51Z",
          "updatedAt": "2020-12-22T21:04:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "There are a number of active attacks against a QUIC handshake.  All of them result in connection failures.  This will be no different.  I don't really see the point of isolating this, except to note that the specific methods involved are not yet defined.  Dropping this last sentence would be a start, but I would reconsider the entire paragraph.",
              "createdAt": "2020-12-22T21:03:51Z",
              "updatedAt": "2021-01-06T17:59:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkxNjMy",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:06:27Z",
          "updatedAt": "2021-01-06T08:06:27Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nTherefore a network node should not attempt to impact version selection, as version\r\ndowngrade may result in connection failure.\r\n```",
              "createdAt": "2021-01-06T08:06:27Z",
              "updatedAt": "2021-01-06T17:59:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkyNDE2",
          "commit": {
            "abbreviatedOid": "57fbfa0"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:08:08Z",
          "updatedAt": "2021-01-06T08:08:08Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Perhaps note that on-path modifications of packets will result in one of two outcomes:\r\n\r\n- packet ignored (and frames eventually retransmitted, if necessary)\r\n- connection dropped\r\n\r\n",
              "createdAt": "2021-01-06T08:08:08Z",
              "updatedAt": "2021-01-06T17:59:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTI5Nzkx",
          "commit": {
            "abbreviatedOid": "1a49783"
          },
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T18:07:26Z",
          "updatedAt": "2021-01-06T18:07:26Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I wanted to explicitly about version downgrades because I was thinking that the people who do version filtering might easily get the idea that version downgrade could be a solution to some of their problems and would not think of it as an attack. I agree that this is true for any handshake \"attack\" but I would like to be as explicit as possible about what we recommend and not recommend in this doc for cases where we can already foresee problems.",
              "createdAt": "2021-01-06T18:07:26Z",
              "updatedAt": "2021-01-06T18:07:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 167,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjU3MDYx",
      "title": "Add one sentence about relevant security considerations in TLS draft",
      "url": "https://github.com/quicwg/ops-drafts/pull/167",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #141",
      "createdAt": "2020-12-22T17:18:45Z",
      "updatedAt": "2021-01-11T14:40:59Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-12",
      "headRefOid": "fd5153a16adf895b96715e9f2f33e85870de724b",
      "closedAt": "2021-01-11T14:40:59Z",
      "mergedAt": "2021-01-11T14:40:59Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "5dd067761da33912c1df9d3ec6896f2cf408e02c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkzMzc1",
          "commit": {
            "abbreviatedOid": "2fd1958"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-01-06T08:10:07Z",
          "updatedAt": "2021-01-06T08:10:07Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\napplications using QUIC, as well. Considerations on linkability, replay attacks, \r\nand randomness discussed in {{!QUIC-TLS}} should be taken into account when\r\n```",
              "createdAt": "2021-01-06T08:10:07Z",
              "updatedAt": "2021-01-11T14:39:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzkzNjg1",
          "commit": {
            "abbreviatedOid": "2fd1958"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Minor editorial nit.",
          "createdAt": "2021-01-06T08:10:43Z",
          "updatedAt": "2021-01-06T08:10:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 168,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjYwNDMz",
      "title": "Do we want to add a reference to the HTTP/3 draft as well",
      "url": "https://github.com/quicwg/ops-drafts/pull/168",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "to the security considerations section?",
      "createdAt": "2020-12-22T17:25:35Z",
      "updatedAt": "2021-01-11T14:53:13Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "5f2fa61e62672925133609eab053f73c057cd4e5",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-13",
      "headRefOid": "47a9aba5f4ff4e334cab3e2b74732afa15152d51",
      "closedAt": "2021-01-11T14:53:08Z",
      "mergedAt": "2021-01-11T14:53:08Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "da33c65f57705ab41306deabbe1f02d25f10aedd"
      },
      "comments": [
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Cross protocol attacks, traffic analysis, and migration are discussed as well in the transport draft, so this pointer might not be absolutely necessary. However, we might still want to have it and then I think these are the relevant sections to refer to.",
          "createdAt": "2020-12-22T17:32:04Z",
          "updatedAt": "2020-12-22T17:32:04Z"
        },
        {
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Applicability to me seems to be mostly targeted to non-H3 users of QUIC, so I'm not sure the H3-specific considerations need to be mentioned here.",
          "createdAt": "2021-01-06T08:11:43Z",
          "updatedAt": "2021-01-06T08:11:43Z"
        },
        {
          "author": "mirjak",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My thinking was to add that as reference for other applications that might need to consider similar attacks/security issues. At least half of the points in the hhtp/3 sec considerations are really http specific and probably don't have value for other applications but there are a number of points which are more general. Those points are to some extend probably also covered by the transport draft but may be explained in more detail in the h3 draft.",
          "createdAt": "2021-01-06T17:58:13Z",
          "updatedAt": "2021-01-06T17:58:13Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDE2OTUy",
          "commit": {
            "abbreviatedOid": "da0968e"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-11T14:43:10Z",
          "updatedAt": "2021-01-11T14:43:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 169,
      "id": "MDExOlB1bGxSZXF1ZXN0NTUxMDMxODUw",
      "title": "remove \"recommended\" for disable spinning",
      "url": "https://github.com/quicwg/ops-drafts/pull/169",
      "state": "MERGED",
      "author": "mirjak",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This sentence is rather supposed to explain what's done in QUIC then giving any recommendation, therefore we can simply remove the \"recommended\" phrasing.",
      "createdAt": "2021-01-07T12:33:37Z",
      "updatedAt": "2021-01-11T14:24:43Z",
      "baseRepository": "quicwg/ops-drafts",
      "baseRefName": "master",
      "baseRefOid": "27703dc991c57e1f75a60a497d2fadc6be10a5e2",
      "headRepository": "quicwg/ops-drafts",
      "headRefName": "mirjak-patch-14",
      "headRefOid": "5350e06e1e94ac820297af5da325dca8ecdd4ac5",
      "closedAt": "2021-01-11T14:24:40Z",
      "mergedAt": "2021-01-11T14:24:40Z",
      "mergedBy": "britram",
      "mergeCommit": {
        "oid": "ba8061cdb113f5ed86f9fc5e8359aaaab7c9e7ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTUzODA1",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-08T01:57:46Z",
          "updatedAt": "2021-01-08T01:57:46Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTYyNjI1",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-08T02:27:39Z",
          "updatedAt": "2021-01-08T02:27:39Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1Mzk5MjIx",
          "commit": {
            "abbreviatedOid": "5350e06"
          },
          "author": "britram",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-01-11T14:24:35Z",
          "updatedAt": "2021-01-11T14:24:35Z",
          "comments": []
        }
      ]
    }
  ]
}